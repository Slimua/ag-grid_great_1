{
  "ApplyColumnStateParams": {
    "meta": {},
    "type": {
      "state?": "ColumnState[]",
      "applyOrder?": "boolean",
      "defaultState?": "ColumnState"
    }
  },
  "ColumnResizeSet": {
    "meta": {},
    "type": { "columns": "Column[]", "ratios": "number[]", "width": "number" }
  },
  "ColumnState": {
    "meta": {},
    "type": {
      "colId?": "string",
      "hide?": "boolean | null",
      "aggFunc?": "string | IAggFunc | null",
      "width?": "number",
      "pivot?": "boolean | null",
      "pivotIndex?": "number | null",
      "pinned?": "boolean | string | 'left' | 'right' | null",
      "rowGroup?": "boolean | null",
      "rowGroupIndex?": "number | null",
      "flex?": "number | null",
      "sort?": "string | null",
      "sortIndex?": "number | null"
    }
  },
  "ComponentMetadata": {
    "meta": {},
    "type": {
      "mandatoryMethodList": "string[]",
      "optionalMethodList": "string[]",
      "functionAdapter?": "(callback: any) => { new(): IComponent<any> }"
    }
  },
  "ComponentType": {
    "meta": {},
    "type": { "propertyName": "string", "isCellRenderer()": "boolean" }
  },
  "FrameworkComponentWrapper": {
    "meta": {},
    "type": {
      "wrap(frameworkComponent: { new(): any } | null, methodList: string[], optionalMethodList: string[], componentType: ComponentType, componentName: string | null)": "A"
    }
  },
  "WrappableInterface": {
    "meta": {},
    "type": {
      "hasMethod(name: string)": "boolean",
      "callMethod(name: string, args: IArguments)": "void",
      "addMethod(name: string, callback: Function)": "void"
    }
  },
  "DefinitionObject": {
    "meta": { "isTypeAlias": true },
    "type": "GridOptions | ColDef | ColGroupDef | IFilterDef | ISetFilterParams | IRichCellEditorParams | ToolPanelDef | StatusPanelDef"
  },
  "UserCompDetails": {
    "meta": {},
    "type": {
      "componentClass": "any",
      "componentFromFramework": "boolean",
      "params": "any"
    }
  },
  "RegisteredComponent": {
    "meta": {},
    "type": { "component": "any", "componentFromFramework": "boolean" }
  },
  "DeprecatedComponentName": {
    "meta": {},
    "type": { "propertyHolder": "string", "newComponentName": "string" }
  },
  "ContextParams": {
    "meta": {},
    "type": {
      "providedBeanInstances": "any",
      "beanClasses": "any[]",
      "debug": "boolean"
    }
  },
  "ComponentMeta": {
    "meta": {},
    "type": { "componentClass": "new() => Object", "componentName": "string" }
  },
  "BeanWrapper": {
    "meta": {},
    "type": { "bean": "any", "beanInstance": "any", "beanName": "any" }
  },
  "ReadyParams": {
    "meta": {},
    "type": {
      "gridCtrl": "GridCtrl",
      "gridBodyCtrl": "GridBodyCtrl",
      "centerRowContainerCtrl": "RowContainerCtrl",
      "leftRowContainerCtrl": "RowContainerCtrl",
      "rightRowContainerCtrl": "RowContainerCtrl",
      "bottomCenterRowContainerCtrl": "RowContainerCtrl",
      "bottomLeftRowContainerCtrl": "RowContainerCtrl",
      "bottomRightRowContainerCtrl": "RowContainerCtrl",
      "topCenterRowContainerCtrl": "RowContainerCtrl",
      "topLeftRowContainerCtrl": "RowContainerCtrl",
      "topRightRowContainerCtrl": "RowContainerCtrl",
      "fakeHScrollCtrl": "FakeHScrollCtrl",
      "headerRootComp": "HeaderRootComp"
    }
  },
  "DragItem": {
    "meta": {},
    "type": {
      "rowNode?": "RowNode",
      "rowNodes?": "RowNode[]",
      "columns?": "Column[]",
      "visibleState?": "[key: string]: boolean"
    }
  },
  "DragSourceType": {
    "meta": { "isEnum": true },
    "type": ["ToolPanel", "HeaderCell", "RowDrag", "ChartPanel"]
  },
  "DragSource": {
    "meta": {},
    "type": {
      "type": "DragSourceType",
      "eElement": "HTMLElement",
      "getDragItem": "() => DragItem",
      "dragItemName": "string | (() => string) | null",
      "defaultIconName?": "string",
      "dragSourceDropTarget?": "DropTarget",
      "dragSourceDomDataKey?": "string",
      "dragStartPixels?": "number",
      "onDragStarted?": "() => void",
      "onDragStopped?": "() => void"
    }
  },
  "DropTarget": {
    "meta": {},
    "type": {
      "getContainer()": "HTMLElement",
      "getSecondaryContainers?()": "HTMLElement[][]",
      "getIconName?()": "string | null",
      "isInterestedIn(type: DragSourceType)": "boolean",
      "onDragEnter?(params: DraggingEvent)": "void",
      "onDragLeave?(params: DraggingEvent)": "void",
      "onDragging?(params: DraggingEvent)": "void",
      "onDragStop?(params: DraggingEvent)": "void",
      "external?": "boolean"
    }
  },
  "VerticalDirection": { "meta": { "isEnum": true }, "type": ["Up", "Down"] },
  "HorizontalDirection": {
    "meta": { "isEnum": true },
    "type": ["Left", "Right"]
  },
  "DraggingEvent": {
    "meta": {},
    "type": {
      "event": "MouseEvent",
      "x": "number",
      "y": "number",
      "vDirection": "VerticalDirection | null",
      "hDirection": "HorizontalDirection | null",
      "dragSource": "DragSource",
      "dragItem": "DragItem",
      "fromNudge": "boolean",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "dropZoneTarget": "HTMLElement"
    }
  },
  "DragSourceAndListener": {
    "meta": {},
    "type": {
      "dragSource": "DragListenerParams",
      "mouseDownListener": "(mouseEvent: MouseEvent) => void",
      "touchEnabled": "boolean",
      "touchStartListener": "((touchEvent: TouchEvent) => void) | null"
    }
  },
  "DragListenerParams": {
    "meta": {},
    "type": {
      "dragStartPixels?": "number",
      "eElement": "HTMLElement",
      "skipMouseEvent?": "(mouseEvent: MouseEvent) => boolean",
      "onDragStart": "(mouseEvent: MouseEvent | Touch) => void",
      "onDragStop": "(mouseEvent: MouseEvent | Touch) => void",
      "onDragging": "(mouseEvent: MouseEvent | Touch) => void"
    }
  },
  "CellPosition": {
    "meta": {},
    "type": {
      "rowIndex": "number",
      "rowPinned": "string | null",
      "column": "Column"
    }
  },
  "AbstractColDef": {
    "meta": {},
    "type": {
      "headerName?": "string",
      "columnGroupShow?": "string",
      "headerClass?": "string | string[] | ((params: HeaderClassParams) => string | string[])",
      "toolPanelClass?": "string | string[] | ((params: ToolPanelClassParams) => string | string[])",
      "headerValueGetter?": "string | Function",
      "pivotKeys?": "string[]",
      "suppressColumnsToolPanel?": "boolean",
      "suppressFiltersToolPanel?": "boolean",
      "headerTooltip?": "string",
      "tooltipComponent?": "{ new(): ITooltipComp } | string",
      "tooltipComponentFramework?": "any",
      "tooltipComponentParams?": "any",
      "suppressHeaderKeyboardEvent?": "(params: SuppressHeaderKeyboardEventParams) => boolean"
    }
  },
  "ColGroupDef": {
    "meta": {},
    "type": {
      "headerName?": "string",
      "columnGroupShow?": "string",
      "headerClass?": "string | string[] | ((params: HeaderClassParams) => string | string[])",
      "toolPanelClass?": "string | string[] | ((params: ToolPanelClassParams) => string | string[])",
      "headerValueGetter?": "string | Function",
      "pivotKeys?": "string[]",
      "suppressColumnsToolPanel?": "boolean",
      "suppressFiltersToolPanel?": "boolean",
      "headerTooltip?": "string",
      "tooltipComponent?": "{ new(): ITooltipComp } | string",
      "tooltipComponentFramework?": "any",
      "tooltipComponentParams?": "any",
      "suppressHeaderKeyboardEvent?": "(params: SuppressHeaderKeyboardEventParams) => boolean",
      "children": "(ColDef | ColGroupDef)[]",
      "groupId?": "string",
      "openByDefault?": "boolean",
      "marryChildren?": "boolean",
      "headerGroupComponent?": "string | { new(): IHeaderGroupComp }",
      "headerGroupComponentFramework?": "any",
      "headerGroupComponentParams?": "any"
    }
  },
  "IAggFunc": {
    "meta": { "isCallSignature": true },
    "type": { "arguments": { "params": "IAggFuncParams" }, "returnType": "any" }
  },
  "IAggFuncParams": {
    "meta": {},
    "type": {
      "values": "any[]",
      "column": "Column",
      "colDef": "ColDef",
      "rowNode": "RowNode",
      "data": "any",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any"
    }
  },
  "HeaderClassParams": {
    "meta": {},
    "type": {
      "api": "GridApi",
      "colDef": "AbstractColDef",
      "column?": "Column | null",
      "columnGroup?": "ColumnGroup | OriginalColumnGroup | null",
      "context?": "any"
    }
  },
  "ToolPanelClassParams": {
    "meta": {},
    "type": {
      "api": "GridApi",
      "colDef": "AbstractColDef",
      "column?": "Column | null",
      "columnGroup?": "ColumnGroup | OriginalColumnGroup | null",
      "context?": "any"
    }
  },
  "ColDef": {
    "meta": {},
    "type": {
      "filter?": "IFilterType",
      "filterFramework?": "any",
      "filterParams?": "any",
      "floatingFilterComponent?": "string | { new(): IFloatingFilterComp }",
      "floatingFilterComponentParams?": "any",
      "floatingFilterComponentFramework?": "any",
      "headerName?": "string",
      "columnGroupShow?": "string",
      "headerClass?": "string | string[] | ((params: HeaderClassParams) => string | string[])",
      "toolPanelClass?": "string | string[] | ((params: ToolPanelClassParams) => string | string[])",
      "headerValueGetter?": "string | Function",
      "pivotKeys?": "string[]",
      "suppressColumnsToolPanel?": "boolean",
      "suppressFiltersToolPanel?": "boolean",
      "headerTooltip?": "string",
      "tooltipComponent?": "{ new(): ITooltipComp } | string",
      "tooltipComponentFramework?": "any",
      "tooltipComponentParams?": "any",
      "suppressHeaderKeyboardEvent?": "(params: SuppressHeaderKeyboardEventParams) => boolean",
      "colId?": "string",
      "sort?": "string | null",
      "initialSort?": "string",
      "sortIndex?": "number | null",
      "initialSortIndex?": "number",
      "sortedAt?": "number",
      "sortingOrder?": "(string | null)[]",
      "field?": "string",
      "type?": "string | string[]",
      "hide?": "boolean",
      "initialHide?": "boolean",
      "pinned?": "boolean | string | null",
      "initialPinned?": "boolean | string",
      "tooltipField?": "string",
      "tooltipValueGetter?": "(params: ITooltipParams) => string",
      "valueGetter?": "((params: ValueGetterParams) => any) | string",
      "filterValueGetter?": "((params: ValueGetterParams) => any) | string",
      "valueSetter?": "((params: ValueSetterParams) => boolean) | string",
      "keyCreator?": "(value: any) => string",
      "width?": "number",
      "initialWidth?": "number",
      "minWidth?": "number",
      "maxWidth?": "number",
      "flex?": "number",
      "initialFlex?": "number",
      "autoHeight?": "boolean",
      "wrapText?": "boolean",
      "cellClass?": "string | string[] | ((cellClassParams: CellClassParams) => string | string[])",
      "cellStyle?": " | ((params: CellClassParams) => )",
      "cellRenderer?": "{ new(): ICellRendererComp } | ICellRendererFunc | string",
      "cellRendererFramework?": "any",
      "cellRendererParams?": "any",
      "cellRendererSelector?": "CellRendererSelectorFunc",
      "cellEditor?": "{ new(): ICellEditorComp } | string",
      "cellEditorFramework?": "any",
      "cellEditorParams?": "any",
      "cellEditorSelector?": "CellEditorSelectorFunc",
      "cellEditorPopup?": "boolean",
      "cellEditorPopupPosition?": "string",
      "pinnedRowCellRenderer?": "{ new(): ICellRendererComp } | ICellRendererFunc | string",
      "pinnedRowCellRendererFramework?": "any",
      "pinnedRowCellRendererParams?": "any",
      "valueFormatter?": "((params: ValueFormatterParams) => string) | string",
      "pinnedRowValueFormatter?": "((params: ValueFormatterParams) => string) | string",
      "valueParser?": "((params: ValueParserParams) => any) | string",
      "aggFunc?": "string | IAggFunc | null",
      "initialAggFunc?": "string | IAggFunc",
      "allowedAggFuncs?": "string[]",
      "rowGroupIndex?": "number | null",
      "rowGroup?": "boolean",
      "initialRowGroupIndex?": "number",
      "initialRowGroup?": "boolean",
      "showRowGroup?": "string | boolean",
      "pivotIndex?": "number | null",
      "pivot?": "boolean",
      "initialPivotIndex?": "number",
      "initialPivot?": "boolean",
      "comparator?": "(valueA: any, valueB: any, nodeA: RowNode, nodeB: RowNode, isInverted: boolean) => number",
      "equals?": "(valueA: any, valueB: any) => boolean",
      "pivotComparator?": "(valueA: string, valueB: string) => number",
      "checkboxSelection?": "boolean | ((params: CheckboxSelectionCallbackParams) => boolean)",
      "headerCheckboxSelection?": "boolean | ((params: HeaderCheckboxSelectionCallbackParams) => boolean)",
      "headerCheckboxSelectionFilteredOnly?": "boolean",
      "rowDrag?": "boolean | ((params: RowDragCallbackParams) => boolean)",
      "rowDragText?": "((params: IRowDragItem, dragItemCount: number) => string)",
      "dndSource?": "boolean | ((params: DndSourceCallbackParams) => boolean)",
      "dndSourceOnRowDrag?": "((params: rowNode dragEvent) => void)",
      "suppressMenu?": "boolean",
      "menuTabs?": "string[]",
      "sortable?": "boolean",
      "suppressMovable?": "boolean",
      "suppressCellFlash?": "boolean",
      "lockPosition?": "boolean",
      "lockVisible?": "boolean",
      "lockPinned?": "boolean",
      "unSortIcon?": "boolean",
      "suppressSizeToFit?": "boolean",
      "resizable?": "boolean",
      "suppressAutoSize?": "boolean",
      "suppressKeyboardEvent?": "(params: SuppressKeyboardEventParams) => boolean",
      "enableRowGroup?": "boolean",
      "enablePivot?": "boolean",
      "enableValue?": "boolean",
      "editable?": "boolean | ((params: EditableCallbackParams) => boolean)",
      "colSpan?": "(params: ColSpanParams) => number",
      "rowSpan?": "(params: RowSpanParams) => number",
      "suppressPaste?": "boolean | ((params: SuppressPasteCallbackParams) => boolean)",
      "suppressNavigable?": "boolean | ((params: SuppressNavigableCallbackParams) => boolean)",
      "getQuickFilterText?": "(params: GetQuickFilterTextParams) => string",
      "newValueHandler?": "(params: NewValueParams) => boolean",
      "singleClickEdit?": "boolean",
      "template?": "string",
      "templateUrl?": "string",
      "cellClassRules?": "[cssClassName: string]: (Function | string)",
      "onCellValueChanged?": "Function",
      "onCellClicked?": "(event: CellClickedEvent) => void",
      "onCellDoubleClicked?": "(event: CellDoubleClickedEvent) => void",
      "onCellContextMenu?": "(event: CellContextMenuEvent) => void",
      "icons?": "[key: string]: Function | string",
      "enableCellChangeFlash?": "boolean",
      "pivotValueColumn?": "Column | null",
      "pivotTotalColumnIds?": "string[]",
      "headerComponent?": "string | { new(): any }",
      "headerComponentFramework?": "any",
      "headerComponentParams?": "any",
      "floatingFilter?": "boolean",
      "refData?": "[key: string]: string",
      "chartDataType?": "'category' | 'series' | 'time' | 'excluded'",
      "columnsMenuParams?": "ColumnsMenuParams"
    }
  },
  "ColumnFunctionCallbackParams": {
    "meta": {},
    "type": {
      "node": "RowNode",
      "data": "any",
      "column": "Column",
      "colDef": "ColDef",
      "context": "any",
      "api": "GridApi",
      "columnApi": "ColumnApi"
    }
  },
  "CheckboxSelectionCallbackParams": {
    "meta": {},
    "type": {
      "node": "RowNode",
      "data": "any",
      "column": "Column",
      "colDef": "ColDef",
      "context": "any",
      "api": "GridApi",
      "columnApi": "ColumnApi"
    }
  },
  "RowDragCallbackParams": {
    "meta": {},
    "type": {
      "node": "RowNode",
      "data": "any",
      "column": "Column",
      "colDef": "ColDef",
      "context": "any",
      "api": "GridApi",
      "columnApi": "ColumnApi"
    }
  },
  "DndSourceCallbackParams": {
    "meta": {},
    "type": {
      "node": "RowNode",
      "data": "any",
      "column": "Column",
      "colDef": "ColDef",
      "context": "any",
      "api": "GridApi",
      "columnApi": "ColumnApi"
    }
  },
  "EditableCallbackParams": {
    "meta": {},
    "type": {
      "node": "RowNode",
      "data": "any",
      "column": "Column",
      "colDef": "ColDef",
      "context": "any",
      "api": "GridApi",
      "columnApi": "ColumnApi"
    }
  },
  "SuppressPasteCallbackParams": {
    "meta": {},
    "type": {
      "node": "RowNode",
      "data": "any",
      "column": "Column",
      "colDef": "ColDef",
      "context": "any",
      "api": "GridApi",
      "columnApi": "ColumnApi"
    }
  },
  "SuppressNavigableCallbackParams": {
    "meta": {},
    "type": {
      "node": "RowNode",
      "data": "any",
      "column": "Column",
      "colDef": "ColDef",
      "context": "any",
      "api": "GridApi",
      "columnApi": "ColumnApi"
    }
  },
  "HeaderCheckboxSelectionCallbackParams": {
    "meta": {},
    "type": {
      "column": "Column",
      "colDef": "ColDef",
      "api": "GridApi",
      "columnApi": "ColumnApi"
    }
  },
  "IsColumnFunc": {
    "meta": { "isCallSignature": true },
    "type": {
      "arguments": { "params": "IsColumnFuncParams" },
      "returnType": "boolean"
    }
  },
  "IsColumnFuncParams": {
    "meta": {},
    "type": {
      "node": "RowNode",
      "data": "any",
      "column": "Column",
      "colDef": "ColDef",
      "context": "any",
      "api": "GridApi",
      "columnApi": "ColumnApi"
    }
  },
  "GetQuickFilterTextParams": {
    "meta": {},
    "type": {
      "value": "any",
      "node": "RowNode",
      "data": "any",
      "column": "Column",
      "colDef": "ColDef",
      "context": "any"
    }
  },
  "ColumnsMenuParams": {
    "meta": {},
    "type": {
      "suppressSyncLayoutWithGrid?": "boolean",
      "suppressColumnFilter?": "boolean",
      "suppressColumnSelectAll?": "boolean",
      "suppressColumnExpandAll?": "boolean",
      "contractColumnSelection?": "boolean"
    }
  },
  "BaseColDefParams": {
    "meta": {},
    "type": {
      "node": "RowNode | null",
      "data": "any",
      "colDef": "ColDef",
      "column": "Column",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any"
    }
  },
  "BaseWithValueColDefParams": {
    "meta": {},
    "type": {
      "node": "RowNode | null",
      "data": "any",
      "colDef": "ColDef",
      "column": "Column",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any",
      "value": "any"
    }
  },
  "ValueGetterParams": {
    "meta": {},
    "type": {
      "node": "RowNode | null",
      "data": "any",
      "colDef": "ColDef",
      "column": "Column",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any",
      "getValue": "(field: string) => any"
    }
  },
  "NewValueParams": {
    "meta": {},
    "type": {
      "node": "RowNode | null",
      "data": "any",
      "colDef": "ColDef",
      "column": "Column",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any",
      "oldValue": "any",
      "newValue": "any"
    }
  },
  "ValueSetterParams": {
    "meta": {},
    "type": {
      "node": "RowNode | null",
      "data": "any",
      "colDef": "ColDef",
      "column": "Column",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any",
      "oldValue": "any",
      "newValue": "any"
    }
  },
  "ValueParserParams": {
    "meta": {},
    "type": {
      "node": "RowNode | null",
      "data": "any",
      "colDef": "ColDef",
      "column": "Column",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any",
      "oldValue": "any",
      "newValue": "any"
    }
  },
  "ValueFormatterParams": {
    "meta": {},
    "type": {
      "node": "RowNode | null",
      "data": "any",
      "colDef": "ColDef",
      "column": "Column",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any",
      "value": "any"
    }
  },
  "ColSpanParams": {
    "meta": {},
    "type": {
      "node": "RowNode | null",
      "data": "any",
      "colDef": "ColDef",
      "column": "Column",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any"
    }
  },
  "RowSpanParams": {
    "meta": {},
    "type": {
      "node": "RowNode | null",
      "data": "any",
      "colDef": "ColDef",
      "column": "Column",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any"
    }
  },
  "SuppressKeyboardEventParams": {
    "meta": {},
    "type": {
      "node": "RowNode",
      "data": "any",
      "column": "Column",
      "colDef": "ColDef",
      "context": "any",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "event": "KeyboardEvent",
      "editing": "boolean"
    }
  },
  "SuppressHeaderKeyboardEventParams": {
    "meta": {},
    "type": {
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "column": "Column | ColumnGroup",
      "colDef": "ColDef | ColGroupDef | null",
      "context": "any",
      "headerRowIndex": "number",
      "event": "KeyboardEvent"
    }
  },
  "CellClassParams": {
    "meta": {},
    "type": {
      "data": "any",
      "node": "RowNode",
      "rowIndex": "number",
      "$scope": "any",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any",
      "colDef": "ColDef",
      "value": "any"
    }
  },
  "SelectorFunc": {
    "meta": { "isCallSignature": true },
    "type": {
      "arguments": { "params": "ICellRendererParams | ICellEditorParams" },
      "returnType": "CellRendererSelectorResult | CellEditorSelectorResult"
    }
  },
  "CellRendererSelectorFunc": {
    "meta": { "isCallSignature": true },
    "type": {
      "arguments": { "params": "ICellRendererParams" },
      "returnType": "CellRendererSelectorResult"
    }
  },
  "CellEditorSelectorFunc": {
    "meta": { "isCallSignature": true },
    "type": {
      "arguments": { "params": "ICellEditorParams" },
      "returnType": "CellEditorSelectorResult"
    }
  },
  "CellRendererSelectorResult": {
    "meta": {},
    "type": {
      "component?": "{ new(): ICellRendererComp } | ICellRendererFunc | string",
      "frameworkComponent?": "any",
      "params?": "any"
    }
  },
  "CellEditorSelectorResult": {
    "meta": {},
    "type": {
      "component?": "{ new(): ICellEditorComp } | string",
      "frameworkComponent?": "any",
      "params?": "any"
    }
  },
  "ColumnGroupChild": {
    "meta": {},
    "type": {
      "addEventListener(eventType: string, listener: EventListener, async: boolean, options: AddEventListenerOptions)": "void",
      "removeEventListener(eventType: string, listener: EventListener, async: boolean, options: AddEventListenerOptions)": "void",
      "getUniqueId()": "string",
      "getActualWidth()": "number",
      "getMinWidth()": "number | null | undefined",
      "getLeft()": "number | null",
      "getOldLeft()": "number | null",
      "getDefinition()": "AbstractColDef | null",
      "getColumnGroupShow()": "string | undefined",
      "getParent()": "ColumnGroupChild",
      "isResizable()": "boolean",
      "setParent(parent: ColumnGroup | null)": "void",
      "isEmptyGroup()": "boolean",
      "isMoving()": "boolean",
      "getPinned()": "string | null | undefined"
    }
  },
  "GridOptions": {
    "meta": {},
    "type": {
      "suppressBrowserResizeObserver?": "boolean",
      "rowDragManaged?": "boolean",
      "suppressRowDrag?": "boolean",
      "suppressMoveWhenRowDragging?": "boolean",
      "enableMultiRowDragging?": "boolean",
      "ensureDomOrder?": "boolean",
      "suppressAggFilteredOnly?": "boolean",
      "showOpenedGroup?": "boolean",
      "deltaRowDataMode?": "boolean",
      "deltaColumnMode?": "boolean",
      "applyColumnDefOrder?": "boolean",
      "maintainColumnOrder?": "boolean",
      "immutableData?": "boolean",
      "immutableColumns?": "boolean",
      "scrollbarWidth?": "number",
      "suppressRowClickSelection?": "boolean",
      "suppressRowHoverHighlight?": "boolean",
      "suppressCellSelection?": "boolean",
      "suppressClearOnFillReduction?": "boolean",
      "suppressMaintainUnsortedOrder?": "boolean",
      "sortingOrder?": "(string | null)[]",
      "suppressMultiSort?": "boolean",
      "multiSortKey?": "string",
      "accentedSort?": "boolean",
      "deltaSort?": "boolean",
      "suppressHorizontalScroll?": "boolean",
      "alwaysShowHorizontalScroll?": "boolean",
      "alwaysShowVerticalScroll?": "boolean",
      "debounceVerticalScrollbar?": "boolean",
      "unSortIcon?": "boolean",
      "rowBuffer?": "number",
      "tooltipShowDelay?": "number",
      "tooltipMouseTrack?": "boolean",
      "enableRtl?": "boolean",
      "enableBrowserTooltips?": "boolean",
      "colResizeDefault?": "string",
      "enableCellExpressions?": "boolean",
      "enableCellTextSelection?": "boolean",
      "enableGroupEdit?": "boolean",
      "enterMovesDownAfterEdit?": "boolean",
      "enterMovesDown?": "boolean",
      "suppressMiddleClickScrolls?": "boolean",
      "preventDefaultOnContextMenu?": "boolean",
      "suppressPreventDefaultOnMouseWheel?": "boolean",
      "suppressScrollOnNewData?": "boolean",
      "suppressMenuHide?": "boolean",
      "singleClickEdit?": "boolean",
      "suppressClickEdit?": "boolean",
      "tabIndex?": "number",
      "suppressKeyboardEvent?": "(params: SuppressKeyboardEventParams) => boolean",
      "stopEditingWhenGridLosesFocus?": "boolean",
      "stopEditingWhenCellsLoseFocus?": "boolean",
      "debug?": "boolean",
      "icons?": "[key: string]: Function | string",
      "angularCompileRows?": "boolean",
      "angularCompileFilters?": "boolean",
      "suppressLoadingOverlay?": "boolean",
      "suppressNoRowsOverlay?": "boolean",
      "suppressAutoSize?": "boolean",
      "autoSizePadding?": "number",
      "skipHeaderOnAutoSize?": "boolean",
      "animateRows?": "boolean",
      "suppressColumnMoveAnimation?": "boolean",
      "suppressMovableColumns?": "boolean",
      "suppressDragLeaveHidesColumns?": "boolean",
      "suppressMakeColumnVisibleAfterUnGroup?": "boolean",
      "suppressParentsInRowNodes?": "boolean",
      "suppressFieldDotNotation?": "boolean",
      "suppressCopyRowsToClipboard?": "boolean",
      "copyHeadersToClipboard?": "boolean",
      "clipboardDeliminator?": "string",
      "suppressClipboardPaste?": "boolean",
      "suppressClipboardApi?": "boolean",
      "suppressLastEmptyLineOnPaste?": "boolean",
      "suppressAggFuncInHeader?": "boolean",
      "suppressAggAtRootLevel?": "boolean",
      "suppressFocusAfterRefresh?": "boolean",
      "rowModelType?": "string",
      "pivotMode?": "boolean",
      "pivotColumnGroupTotals?": "string",
      "pivotRowTotals?": "string",
      "suppressExpandablePivotGroups?": "boolean",
      "suppressEnterpriseResetOnNewColumns?": "boolean",
      "enableRangeSelection?": "boolean",
      "enableRangeHandle?": "boolean",
      "enableFillHandle?": "boolean",
      "fillHandleDirection?": "string",
      "suppressMultiRangeSelection?": "boolean",
      "rowGroupPanelShow?": "string",
      "pivotPanelShow?": "string",
      "suppressContextMenu?": "boolean",
      "allowContextMenuWithControlKey?": "boolean",
      "rememberGroupStateWhenNewData?": "boolean",
      "suppressModelUpdateAfterUpdateTransaction?": "boolean",
      "viewportRowModelPageSize?": "number",
      "viewportRowModelBufferSize?": "number",
      "enableCellChangeFlash?": "boolean",
      "cellFlashDelay?": "number",
      "cellFadeDelay?": "number",
      "allowShowChangeAfterFilter?": "boolean",
      "quickFilterText?": "string",
      "cacheQuickFilter?": "boolean",
      "aggFuncs?": "[key: string]: IAggFunc",
      "suppressColumnVirtualisation?": "boolean",
      "functionsReadOnly?": "boolean",
      "functionsPassive?": "boolean",
      "maxConcurrentDatasourceRequests?": "number",
      "maxBlocksInCache?": "number",
      "purgeClosedRowNodes?": "boolean",
      "domLayout?": "string",
      "suppressChangeDetection?": "boolean",
      "aggregateOnlyChangedColumns?": "boolean",
      "valueCache?": "boolean",
      "valueCacheNeverExpires?": "boolean",
      "batchUpdateWaitMillis?": "number",
      "asyncTransactionWaitMillis?": "number",
      "suppressRowTransform?": "boolean",
      "suppressSetColumnStateEvents?": "boolean",
      "suppressColumnStateEvents?": "boolean",
      "allowDragFromColumnsToolPanel?": "boolean",
      "suppressMaxRenderedRowRestriction?": "boolean",
      "excludeChildrenWhenTreeDataFiltering?": "boolean",
      "undoRedoCellEditing?": "boolean",
      "undoRedoCellEditingLimit?": "number",
      "cacheOverflowSize?": "number",
      "infiniteInitialRowCount?": "number",
      "paginationPageSize?": "number",
      "cacheBlockSize?": "number",
      "blockLoadDebounceMillis?": "number",
      "paginationAutoPageSize?": "boolean",
      "suppressPaginationPanel?": "boolean",
      "pagination?": "boolean",
      "paginateChildRows?": "boolean",
      "editType?": "string",
      "suppressTouch?": "boolean",
      "suppressAsyncEvents?": "boolean",
      "embedFullWidthRows?": "boolean",
      "deprecatedEmbedFullWidthRows?": "boolean",
      "excelStyles?": "ExcelStyle[]",
      "floatingFilter?": "boolean",
      "suppressExcelExport?": "boolean",
      "suppressCsvExport?": "boolean",
      "colWidth?": "number",
      "minColWidth?": "number",
      "maxColWidth?": "number",
      "suppressPropertyNamesCheck?": "boolean",
      "serverSideSortingAlwaysResets?": "boolean",
      "serverSideFilteringAlwaysResets?": "boolean",
      "serverSideStoreType?": "ServerSideStoreType",
      "getServerSideStoreParams?": "(params: GetServerSideStoreParamsParams) => ServerSideStoreParams",
      "isServerSideGroupOpenByDefault?": "(params: IsServerSideGroupOpenByDefaultParams) => boolean",
      "isGroupOpenByDefault?": "(params: IsGroupOpenByDefaultParams) => boolean",
      "statusBar?": "statusPanels",
      "localeText?": "[key: string]: string",
      "localeTextFunc?": "(key: string, defaultValue: string) => string",
      "suppressAnimationFrame?": "boolean",
      "defaultColGroupDef?": "Partial<ColGroupDef>",
      "defaultColDef?": "ColDef",
      "defaultExportParams?": "CsvExportParams | ExcelExportParams",
      "defaultCsvExportParams?": "CsvExportParams",
      "defaultExcelExportParams?": "ExcelExportParams",
      "pivotSuppressAutoColumn?": "boolean",
      "groupSelectsChildren?": "boolean",
      "groupSelectsFiltered?": "boolean",
      "groupIncludeFooter?": "boolean",
      "groupIncludeTotalFooter?": "boolean",
      "groupRemoveSingleChildren?": "boolean",
      "groupRemoveLowestSingleChildren?": "boolean",
      "groupHideOpenParents?": "boolean",
      "groupSuppressBlankHeader?": "boolean",
      "autoGroupColumnDef?": "ColDef",
      "enableOldSetFilterModel?": "boolean",
      "enableCharts?": "boolean",
      "groupDisplayType?": "RowGroupingDisplayType",
      "groupMultiAutoColumn?": "boolean",
      "groupUseEntireRow?": "boolean",
      "groupSuppressAutoColumn?": "boolean",
      "context?": "any",
      "rowStyle?": "[cssProperty: string]: string",
      "rowClass?": "string | string[]",
      "groupDefaultExpanded?": "number",
      "alignedGrids?": "GridOptions[]",
      "rowSelection?": "string",
      "suppressRowDeselection?": "boolean",
      "rowDeselection?": "boolean",
      "rowMultiSelectWithClick?": "boolean",
      "isRowSelectable?": "IsRowSelectable",
      "overlayLoadingTemplate?": "string",
      "overlayNoRowsTemplate?": "string",
      "rowHeight?": "number",
      "detailRowHeight?": "number",
      "popupParent?": "HTMLElement",
      "masterDetail?": "boolean",
      "keepDetailRows?": "boolean",
      "keepDetailRowsCount?": "number",
      "isRowMaster?": "IsRowMaster",
      "detailCellRenderer?": "{ new(): ICellRendererComp } | ICellRendererFunc | string",
      "detailCellRendererFramework?": "any",
      "detailCellRendererParams?": "any",
      "detailRowAutoHeight?": "boolean",
      "rowData?": "any[]",
      "pinnedTopRowData?": "any[]",
      "pinnedBottomRowData?": "any[]",
      "sideBar?": "SideBarDef | string | boolean | null",
      "columnDefs?": "(ColDef | ColGroupDef)[]",
      "columnTypes?": "[key: string]: ColDef",
      "datasource?": "IDatasource",
      "viewportDatasource?": "IViewportDatasource",
      "serverSideDatasource?": "IServerSideDatasource",
      "headerHeight?": "number",
      "pivotHeaderHeight?": "number",
      "groupHeaderHeight?": "number",
      "pivotGroupHeaderHeight?": "number",
      "floatingFiltersHeight?": "number",
      "paginationNumberFormatter?": "(params: PaginationNumberFormatterParams) => string",
      "postProcessPopup?": "(params: PostProcessPopupParams) => void",
      "frameworkComponents?": "[p: string]: { new(): any } | any",
      "components?": "[p: string]: any",
      "groupRowRenderer?": "{ new(): ICellRendererComp } | ICellRendererFunc | string",
      "groupRowRendererFramework?": "any",
      "groupRowRendererParams?": "any",
      "groupRowInnerRenderer?": "{ new(): ICellRendererComp } | ICellRendererFunc | string",
      "groupRowInnerRendererFramework?": "any",
      "createChartContainer?": "(params: ChartRef) => void",
      "fillOperation?": "(params: FillOperationParams) => any",
      "isExternalFilterPresent?()": "boolean",
      "doesExternalFilterPass?(node: RowNode)": "boolean",
      "getRowStyle?": "(params: RowClassParams) => [cssProperty: string]: string",
      "getRowClass?": "(params: RowClassParams) => string | string[] | undefined",
      "rowClassRules?": "[cssClassName: string]: (((params: RowClassParams) => boolean) | string)",
      "getRowHeight?": "(params: RowHeightParams) => number | undefined | null",
      "sendToClipboard?": "(params: SendToClipboardParams) => void",
      "processDataFromClipboard?": "(params: ProcessDataFromClipboardParams) => string[][] | null",
      "navigateToNextHeader?": "(params: NavigateToNextHeaderParams) => HeaderPosition",
      "tabToNextHeader?": "(params: TabToNextHeaderParams) => HeaderPosition",
      "navigateToNextCell?": "(params: NavigateToNextCellParams) => CellPosition",
      "tabToNextCell?": "(params: TabToNextCellParams) => CellPosition",
      "getDocument?": "() => Document",
      "defaultGroupSortComparator?": "(nodeA: RowNode, nodeB: RowNode) => number",
      "defaultGroupOrderComparator?": "(nodeA: RowNode, nodeB: RowNode) => number",
      "loadingCellRenderer?": "{ new(): ICellRenderer } | string",
      "loadingCellRendererFramework?": "any",
      "loadingCellRendererParams?": "any",
      "loadingOverlayComponent?": "{ new(): ILoadingOverlayComp } | string",
      "loadingOverlayComponentFramework?": "any",
      "loadingOverlayComponentParams?": "any",
      "noRowsOverlayComponent?": "{ new(): INoRowsOverlayComp } | string",
      "noRowsOverlayComponentFramework?": "any",
      "noRowsOverlayComponentParams?": "any",
      "fullWidthCellRenderer?": "{ new(): ICellRendererComp } | ICellRendererFunc | string",
      "fullWidthCellRendererFramework?": "any",
      "fullWidthCellRendererParams?": "any",
      "isFullWidthCell?(rowNode: RowNode)": "boolean",
      "groupRowAggNodes?(nodes: RowNode[])": "any",
      "getBusinessKeyForNode?(node: RowNode)": "string",
      "getDataPath?": "GetDataPath",
      "treeData?": "boolean",
      "treeDataDisplayType?": "TreeDataDisplayType",
      "isServerSideGroup?": "IsServerSideGroup",
      "isApplyServerSideTransaction?": "IsApplyServerSideTransaction",
      "getServerSideGroupKey?": "GetServerSideGroupKey",
      "getContextMenuItems?": "GetContextMenuItems",
      "getMainMenuItems?": "GetMainMenuItems",
      "getChartToolbarItems?": "GetChartToolbarItems",
      "getRowNodeId?": "GetRowNodeIdFunc",
      "getChildCount?(dataItem: any)": "number",
      "processRowPostCreate?(params: ProcessRowParams)": "void",
      "processCellForClipboard?(params: ProcessCellForExportParams)": "any",
      "processHeaderForClipboard?(params: ProcessHeaderForExportParams)": "any",
      "processCellFromClipboard?(params: ProcessCellForExportParams)": "any",
      "processSecondaryColDef?(colDef: ColDef)": "void",
      "processSecondaryColGroupDef?(colGroupDef: ColGroupDef)": "void",
      "postSort?(nodes: RowNode[])": "void",
      "chartThemes?": "string[]",
      "customChartThemes?": "[name: string]: AgChartTheme",
      "chartThemeOverrides?": "AgChartThemeOverrides",
      "processChartOptions?(params: ProcessChartOptionsParams)": "ChartOptions<any>",
      "onColumnEverythingChanged?(event: ColumnEverythingChangedEvent)": "void",
      "onToolPanelVisibleChanged?(event: ToolPanelVisibleChangedEvent)": "void",
      "onNewColumnsLoaded?(event: NewColumnsLoadedEvent)": "void",
      "onColumnPivotModeChanged?(event: ColumnPivotModeChangedEvent)": "void",
      "onColumnRowGroupChanged?(event: ColumnRowGroupChangedEvent)": "void",
      "onColumnPivotChanged?(event: ColumnPivotChangedEvent)": "void",
      "onGridColumnsChanged?(event: GridColumnsChangedEvent)": "void",
      "onColumnValueChanged?(event: ColumnValueChangedEvent)": "void",
      "onColumnMoved?(event: ColumnMovedEvent)": "void",
      "onColumnVisible?(event: ColumnVisibleEvent)": "void",
      "onColumnPinned?(event: ColumnPinnedEvent)": "void",
      "onColumnGroupOpened?(event: ColumnGroupOpenedEvent)": "void",
      "onColumnResized?(event: ColumnResizedEvent)": "void",
      "onDisplayedColumnsChanged?(event: DisplayedColumnsChangedEvent)": "void",
      "onVirtualColumnsChanged?(event: VirtualColumnsChangedEvent)": "void",
      "onRowGroupOpened?(event: RowGroupOpenedEvent)": "void",
      "onRowDataChanged?(event: RowDataChangedEvent)": "void",
      "onRowDataUpdated?(event: RowDataUpdatedEvent)": "void",
      "onPinnedRowDataChanged?(event: PinnedRowDataChangedEvent)": "void",
      "onRangeSelectionChanged?(event: RangeSelectionChangedEvent)": "void",
      "onColumnRowGroupChangeRequest?(event: ColumnRowGroupChangeRequestEvent)": "void",
      "onColumnPivotChangeRequest?(event: ColumnPivotChangeRequestEvent)": "void",
      "onColumnValueChangeRequest?(event: ColumnValueChangeRequestEvent)": "void",
      "onColumnAggFuncChangeRequest?(event: ColumnAggFuncChangeRequestEvent)": "void",
      "onModelUpdated?(event: ModelUpdatedEvent)": "void",
      "onCellKeyDown?(event: CellKeyDownEvent | FullWidthCellKeyDownEvent)": "void",
      "onCellKeyPress?(event: CellKeyPressEvent | FullWidthCellKeyPressEvent)": "void",
      "onCellClicked?(event: CellClickedEvent)": "void",
      "onCellMouseDown?(event: CellMouseDownEvent)": "void",
      "onCellDoubleClicked?(event: CellDoubleClickedEvent)": "void",
      "onCellContextMenu?(event: CellContextMenuEvent)": "void",
      "onCellValueChanged?(event: CellValueChangedEvent)": "void",
      "onCellMouseOver?(event: CellMouseOverEvent)": "void",
      "onCellMouseOut?(event: CellMouseOutEvent)": "void",
      "onRowValueChanged?(event: RowValueChangedEvent)": "void",
      "onRowEditingStarted?(event: RowEditingStartedEvent)": "void",
      "onRowEditingStopped?(event: RowEditingStoppedEvent)": "void",
      "onCellEditingStarted?(event: CellEditingStartedEvent)": "void",
      "onCellEditingStopped?(event: CellEditingStoppedEvent)": "void",
      "onCellFocused?(event: CellFocusedEvent)": "void",
      "onRowSelected?(event: RowSelectedEvent)": "void",
      "onSelectionChanged?(event: SelectionChangedEvent)": "void",
      "onFilterOpened?(event: FilterOpenedEvent)": "void",
      "onFilterChanged?(event: FilterChangedEvent)": "void",
      "onFilterModified?(event: FilterModifiedEvent)": "void",
      "onSortChanged?(event: SortChangedEvent)": "void",
      "onVirtualRowRemoved?(event: VirtualRowRemovedEvent)": "void",
      "onRowClicked?(event: RowClickedEvent)": "void",
      "onRowDoubleClicked?(event: RowDoubleClickedEvent)": "void",
      "onGridReady?(event: GridReadyEvent)": "void",
      "onViewportChanged?(event: ViewportChangedEvent)": "void",
      "onDragStarted?(event: DragStartedEvent)": "void",
      "onDragStopped?(event: DragStoppedEvent)": "void",
      "onPaginationChanged?(event: PaginationChangedEvent)": "void",
      "onRowDragEnter?(event: RowDragEvent)": "void",
      "onRowDragMove?(event: RowDragEvent)": "void",
      "onRowDragLeave?(event: RowDragEvent)": "void",
      "onRowDragEnd?(event: RowDragEvent)": "void",
      "onPasteStart?(event: PasteStartEvent)": "void",
      "onPasteEnd?(event: PasteEndEvent)": "void",
      "onFillStart?(event: FillStartEvent)": "void",
      "onFillEnd?(event: FillEndEvent)": "void",
      "onBodyScroll?(event: BodyScrollEvent)": "void",
      "onFirstDataRendered?(event: FirstDataRenderedEvent)": "void",
      "onExpandOrCollapseAll?(event: ExpandCollapseAllEvent)": "void",
      "onChartCreated?(event: ChartCreated)": "void",
      "onChartRangeSelectionChanged?(event: ChartRangeSelectionChanged)": "void",
      "onChartOptionsChanged?(event: ChartOptionsChanged)": "void",
      "onChartDestroyed?(event: ChartDestroyed)": "void",
      "onComponentStateChanged?(event: ComponentStateChangedEvent)": "void",
      "onAsyncTransactionsFlushed?(event: AsyncTransactionsFlushed)": "void",
      "onGridSizeChanged?(event: GridSizeChangedEvent)": "void",
      "api?": "GridApi | null",
      "columnApi?": "ColumnApi | null"
    }
  },
  "RowGroupingDisplayType": {
    "meta": { "isEnum": true },
    "type": [
      "SINGLE_COLUMN = 'singleColumn'",
      "MULTIPLE_COLUMNS = 'multipleColumns'",
      "GROUP_ROWS = 'groupRows'",
      "CUSTOM = 'custom'"
    ]
  },
  "TreeDataDisplayType": {
    "meta": { "isEnum": true },
    "type": ["AUTO = 'auto'", "CUSTOM = 'custom'"]
  },
  "FillOperationParams": {
    "meta": {},
    "type": {
      "event": "MouseEvent",
      "values": "any[]",
      "initialValues": "any[]",
      "currentIndex": "number",
      "currentCellValue": "any",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any",
      "direction": "string",
      "column?": "Column",
      "rowNode?": "RowNode"
    }
  },
  "GetDataPath": {
    "meta": { "isCallSignature": true },
    "type": { "arguments": { "data": "any" }, "returnType": "string[]" }
  },
  "IsServerSideGroup": {
    "meta": { "isCallSignature": true },
    "type": { "arguments": { "dataItem": "any" }, "returnType": "boolean" }
  },
  "IsApplyServerSideTransaction": {
    "meta": { "isCallSignature": true },
    "type": {
      "arguments": { "params": "IsApplyServerSideTransactionParams" },
      "returnType": "boolean"
    }
  },
  "IsApplyServerSideTransactionParams": {
    "meta": {},
    "type": {
      "transaction": "ServerSideTransaction",
      "parentNode": "RowNode",
      "storeInfo": "any"
    }
  },
  "GetServerSideGroupKey": {
    "meta": { "isCallSignature": true },
    "type": { "arguments": { "dataItem": "any" }, "returnType": "string" }
  },
  "IsRowMaster": {
    "meta": { "isCallSignature": true },
    "type": { "arguments": { "dataItem": "any" }, "returnType": "boolean" }
  },
  "IsRowSelectable": {
    "meta": { "isCallSignature": true },
    "type": { "arguments": { "node": "RowNode" }, "returnType": "boolean" }
  },
  "RowClassParams": {
    "meta": {},
    "type": {
      "data": "any",
      "node": "RowNode",
      "rowIndex": "number",
      "$scope": "any",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any"
    }
  },
  "RowHeightParams": {
    "meta": {},
    "type": {
      "data": "any",
      "node": "RowNode",
      "api": "GridApi",
      "context": "any"
    }
  },
  "SendToClipboardParams": { "meta": {}, "type": { "data": "string" } },
  "ProcessChartOptionsParams": {
    "meta": {},
    "type": { "type": "ChartType", "options": "ChartOptions<any>" }
  },
  "ProcessChartParams": {
    "meta": {},
    "type": { "type": "ChartType", "options": "AgChartOptions", "chart": "any" }
  },
  "GetContextMenuItemsParams": {
    "meta": {},
    "type": {
      "defaultItems": "string[] | undefined",
      "column": "Column",
      "node": "RowNode",
      "value": "any",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any"
    }
  },
  "GetContextMenuItems": {
    "meta": { "isCallSignature": true },
    "type": {
      "arguments": { "params": "GetContextMenuItemsParams" },
      "returnType": "(string | MenuItemDef)[]"
    }
  },
  "GetChartToolbarItemsParams": {
    "meta": {},
    "type": {
      "defaultItems?": "ChartMenuOptions[]",
      "api": "GridApi",
      "columnApi": "ColumnApi"
    }
  },
  "GetChartToolbarItems": {
    "meta": { "isCallSignature": true },
    "type": {
      "arguments": { "params": "GetChartToolbarItemsParams" },
      "returnType": "ChartMenuOptions[]"
    }
  },
  "MenuItemDef": {
    "meta": {},
    "type": {
      "name": "string",
      "disabled?": "boolean",
      "shortcut?": "string",
      "action?": "() => void",
      "checked?": "boolean",
      "icon?": "HTMLElement | string",
      "subMenu?": "(MenuItemDef | string)[] | IComponent<any>",
      "cssClasses?": "string[]",
      "tooltip?": "string"
    }
  },
  "GetMainMenuItemsParams": {
    "meta": {},
    "type": {
      "column": "Column",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any",
      "defaultItems": "string[]"
    }
  },
  "GetMainMenuItems": {
    "meta": { "isCallSignature": true },
    "type": {
      "arguments": { "params": "GetMainMenuItemsParams" },
      "returnType": "(string | MenuItemDef)[]"
    }
  },
  "GetRowNodeIdFunc": {
    "meta": { "isCallSignature": true },
    "type": { "arguments": { "data": "any" }, "returnType": "string" }
  },
  "ProcessRowParams": {
    "meta": {},
    "type": {
      "eRow": "HTMLElement",
      "ePinnedLeftRow": "HTMLElement",
      "ePinnedRightRow": "HTMLElement",
      "rowIndex": "number",
      "node": "RowNode",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "addRenderedRowListener": "(eventType: string, listener: Function) => void",
      "context": "any"
    }
  },
  "NavigateToNextHeaderParams": {
    "meta": {},
    "type": {
      "key": "string",
      "previousHeaderPosition": "HeaderPosition | null",
      "nextHeaderPosition": "HeaderPosition | null",
      "event": "KeyboardEvent",
      "headerRowCount": "number"
    }
  },
  "TabToNextHeaderParams": {
    "meta": {},
    "type": {
      "backwards": "boolean",
      "previousHeaderPosition": "HeaderPosition | null",
      "nextHeaderPosition": "HeaderPosition | null",
      "headerRowCount": "number"
    }
  },
  "NavigateToNextCellParams": {
    "meta": {},
    "type": {
      "key": "number",
      "previousCellPosition": "CellPosition",
      "nextCellPosition": "CellPosition | null",
      "event": "KeyboardEvent | null"
    }
  },
  "TabToNextCellParams": {
    "meta": {},
    "type": {
      "backwards": "boolean",
      "editing": "boolean",
      "previousCellPosition": "CellPosition",
      "nextCellPosition": "CellPosition"
    }
  },
  "PostProcessPopupParams": {
    "meta": {},
    "type": {
      "column?": "Column | null",
      "rowNode?": "RowNode",
      "ePopup": "HTMLElement",
      "type": "string",
      "eventSource?": "HTMLElement | null",
      "mouseEvent?": "MouseEvent | Touch | null"
    }
  },
  "PaginationNumberFormatterParams": {
    "meta": {},
    "type": { "value": "number" }
  },
  "ProcessDataFromClipboardParams": {
    "meta": {},
    "type": { "data": "string[][]" }
  },
  "ChartRef": {
    "meta": {},
    "type": {
      "chartId": "string",
      "chart": "any",
      "chartElement": "HTMLElement",
      "destroyChart": "() => void"
    }
  },
  "ServerSideStoreType": {
    "meta": { "isEnum": true },
    "type": ["Full = 'full'", "Partial = 'partial'"]
  },
  "ServerSideStoreParams": {
    "meta": {},
    "type": {
      "storeType?": "ServerSideStoreType",
      "maxBlocksInCache?": "number",
      "cacheBlockSize?": "number"
    }
  },
  "GetServerSideStoreParamsParams": {
    "meta": {},
    "type": {
      "level": "number",
      "parentRowNode?": "RowNode",
      "rowGroupColumns": "Column[]",
      "pivotColumns": "Column[]",
      "pivotMode": "boolean"
    }
  },
  "IsServerSideGroupOpenByDefaultParams": {
    "meta": {},
    "type": { "data": "any", "rowNode": "RowNode" }
  },
  "IsGroupOpenByDefaultParams": {
    "meta": {},
    "type": {
      "rowNode": "RowNode",
      "rowGroupColumn": "Column",
      "level": "number",
      "field": "string",
      "key": "string"
    }
  },
  "OriginalColumnGroupChild": {
    "meta": {},
    "type": {
      "isVisible()": "boolean",
      "getColumnGroupShow()": "string | undefined",
      "getId()": "string",
      "setOriginalParent(originalParent: OriginalColumnGroup | null)": "void"
    }
  },
  "SetSelectedParams": {
    "meta": {},
    "type": {
      "newValue": "boolean",
      "clearSelection?": "boolean",
      "suppressFinishActions?": "boolean",
      "rangeSelect?": "boolean",
      "groupSelectsFiltered?": "boolean"
    }
  },
  "RowNodeEvent": {
    "meta": {},
    "type": { "type": "string", "node": "RowNode" }
  },
  "DataChangedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "node": "RowNode",
      "oldData": "any",
      "newData": "any",
      "update": "boolean"
    }
  },
  "CellChangedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "node": "RowNode",
      "column": "Column",
      "newValue": "any",
      "oldValue": "any"
    }
  },
  "RowHighlightPosition": {
    "meta": { "isEnum": true },
    "type": ["Above", "Below"]
  },
  "RowPosition": {
    "meta": {},
    "type": { "rowIndex": "number", "rowPinned": "string | null" }
  },
  "ToolPanelDef": {
    "meta": {},
    "type": {
      "id": "string",
      "labelDefault": "string",
      "labelKey": "string",
      "minWidth?": "number",
      "maxWidth?": "number",
      "width?": "number",
      "iconKey": "string",
      "toolPanel?": "{ new(): IToolPanelComp } | string",
      "toolPanelFramework?": "any",
      "toolPanelParams?": "any"
    }
  },
  "SideBarDef": {
    "meta": {},
    "type": {
      "toolPanels?": "(ToolPanelDef | string)[]",
      "defaultToolPanel?": "string",
      "hiddenByDefault?": "boolean",
      "position?": "'left' | 'right'"
    }
  },
  "SASS_PROPERTIES": {
    "meta": { "isTypeAlias": true },
    "type": "'headerHeight' | 'headerCellMinWidth' | 'listItemHeight' | 'rowHeight' | 'chartMenuPanelWidth'"
  },
  "HardCodedSize": {
    "meta": {},
    "type": { "[key: string]": "{[key in SASS_PROPERTIES]?: number}" }
  },
  "ModelUpdatedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "animate": "boolean | undefined",
      "keepRenderedRows": "boolean | undefined",
      "newData": "boolean | undefined",
      "newPage": "boolean"
    }
  },
  "PaginationChangedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "animate?": "boolean",
      "keepRenderedRows?": "boolean",
      "newData?": "boolean",
      "newPage": "boolean"
    }
  },
  "AgEvent": { "meta": {}, "type": { "type": "string" } },
  "AgGridEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "ToolPanelVisibleChangedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "source": "string | undefined"
    }
  },
  "ColumnPivotModeChangedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "VirtualColumnsChangedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "ColumnEverythingChangedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "source": "string"
    }
  },
  "NewColumnsLoadedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "GridColumnsChangedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "DisplayedColumnsChangedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "RowDataChangedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "RowDataUpdatedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "PinnedRowDataChangedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "SelectionChangedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "FilterChangedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "afterDataChange?": "boolean",
      "afterFloatingFilter?": "boolean"
    }
  },
  "FilterModifiedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "filterInstance": "IFilterComp",
      "column": "Column"
    }
  },
  "FilterOpenedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "column": "Column | OriginalColumnGroup",
      "source": "FilterRequestSource",
      "eGui": "HTMLElement"
    }
  },
  "SortChangedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "GridReadyEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "DisplayedColumnsWidthChangedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "ColumnHoverChangedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "BodyHeightChangedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "ComponentStateChangedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "DragEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "target": "HTMLElement"
    }
  },
  "DragStartedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "target": "HTMLElement"
    }
  },
  "DragStoppedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "target": "HTMLElement"
    }
  },
  "CheckboxChangedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "id": "string",
      "name": "string",
      "selected?": "boolean",
      "previousValue": "boolean | undefined"
    }
  },
  "GridSizeChangedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "clientWidth": "number",
      "clientHeight": "number"
    }
  },
  "RowDragEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "nodes": "RowNode[]",
      "y": "number",
      "vDirection": "string",
      "event": "MouseEvent",
      "overIndex": "number",
      "overNode": "RowNode"
    }
  },
  "RowDragEnterEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "nodes": "RowNode[]",
      "y": "number",
      "vDirection": "string",
      "event": "MouseEvent",
      "overIndex": "number",
      "overNode": "RowNode"
    }
  },
  "RowDragEndEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "nodes": "RowNode[]",
      "y": "number",
      "vDirection": "string",
      "event": "MouseEvent",
      "overIndex": "number",
      "overNode": "RowNode"
    }
  },
  "RowDragMoveEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "nodes": "RowNode[]",
      "y": "number",
      "vDirection": "string",
      "event": "MouseEvent",
      "overIndex": "number",
      "overNode": "RowNode"
    }
  },
  "RowDragLeaveEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "nodes": "RowNode[]",
      "y": "number",
      "vDirection": "string",
      "event": "MouseEvent",
      "overIndex": "number",
      "overNode": "RowNode"
    }
  },
  "PasteStartEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "source": "string"
    }
  },
  "PasteEndEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "source": "string"
    }
  },
  "FillStartEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "FillEndEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "initialRange": "CellRange",
      "finalRange": "CellRange"
    }
  },
  "ViewportChangedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "firstRow": "number",
      "lastRow": "number"
    }
  },
  "FirstDataRenderedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "firstRow": "number",
      "lastRow": "number"
    }
  },
  "RangeSelectionChangedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "id?": "string",
      "finished": "boolean",
      "started": "boolean"
    }
  },
  "ChartCreated": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "chartId": "string"
    }
  },
  "ChartRangeSelectionChanged": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "id": "string",
      "chartId": "string",
      "cellRange": "CellRangeParams"
    }
  },
  "ChartOptionsChanged": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "chartId": "string",
      "chartType": "ChartType",
      "chartThemeName": "string",
      "chartOptions": "ChartOptions<any>"
    }
  },
  "ChartDestroyed": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "chartId": "string"
    }
  },
  "ColumnGroupOpenedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "columnGroup": "OriginalColumnGroup"
    }
  },
  "ItemsAddedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "items": "RowNode[]"
    }
  },
  "ScrollDirection": {
    "meta": { "isTypeAlias": true },
    "type": "'horizontal' | 'vertical'"
  },
  "BodyScrollEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "direction": "ScrollDirection",
      "left": "number",
      "top": "number"
    }
  },
  "FlashCellsEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "cells": "any"
    }
  },
  "PaginationPixelOffsetChangedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "CellFocusedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "rowIndex": "number | null",
      "column": "Column | null",
      "rowPinned": "string | null",
      "isFullWidthCell": "boolean",
      "forceBrowserFocus?": "boolean",
      "floating": "string | null"
    }
  },
  "ExpandCollapseAllEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "source": "string"
    }
  },
  "ColumnEventType": {
    "meta": { "isTypeAlias": true },
    "type": "'sizeColumnsToFit' | 'autosizeColumns' | 'alignedGridChanged' | 'filterChanged' | 'filterDestroyed' | 'gridOptionsChanged' | 'gridInitializing' | 'toolPanelDragAndDrop' | 'toolPanelUi' | 'uiColumnMoved' | 'uiColumnResized' | 'uiColumnDragged' | 'uiColumnExpanded' | 'uiColumnSorted' | 'contextMenu' | 'columnMenu' | 'rowModelUpdated' | 'api' | 'flex' | 'pivotChart'"
  },
  "ColumnEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "column": "Column | null",
      "columns": "Column[] | null",
      "source": "ColumnEventType"
    }
  },
  "ColumnResizedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "column": "Column | null",
      "columns": "Column[] | null",
      "source": "ColumnEventType",
      "finished": "boolean",
      "flexColumns": "Column[] | null"
    }
  },
  "ColumnPivotChangedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "column": "Column | null",
      "columns": "Column[] | null",
      "source": "ColumnEventType"
    }
  },
  "ColumnRowGroupChangedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "column": "Column | null",
      "columns": "Column[] | null",
      "source": "ColumnEventType"
    }
  },
  "ColumnValueChangedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "column": "Column | null",
      "columns": "Column[] | null",
      "source": "ColumnEventType"
    }
  },
  "ColumnMovedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "column": "Column | null",
      "columns": "Column[] | null",
      "source": "ColumnEventType",
      "toIndex?": "number"
    }
  },
  "ColumnVisibleEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "column": "Column | null",
      "columns": "Column[] | null",
      "source": "ColumnEventType",
      "visible?": "boolean"
    }
  },
  "ColumnPinnedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "column": "Column | null",
      "columns": "Column[] | null",
      "source": "ColumnEventType",
      "pinned": "string | null"
    }
  },
  "RowEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null"
    }
  },
  "RowGroupOpenedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null",
      "expanded": "boolean"
    }
  },
  "RowValueChangedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null"
    }
  },
  "RowSelectedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null"
    }
  },
  "VirtualRowRemovedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null"
    }
  },
  "RowClickedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null"
    }
  },
  "RowDoubleClickedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null"
    }
  },
  "RowEditingStartedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null"
    }
  },
  "RowEditingStoppedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null"
    }
  },
  "FullWidthCellKeyDownEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null"
    }
  },
  "FullWidthCellKeyPressEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null"
    }
  },
  "CellEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null",
      "column": "Column",
      "colDef": "ColDef",
      "value": "any"
    }
  },
  "CellKeyDownEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null",
      "column": "Column",
      "colDef": "ColDef",
      "value": "any"
    }
  },
  "CellKeyPressEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null",
      "column": "Column",
      "colDef": "ColDef",
      "value": "any"
    }
  },
  "CellClickedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null",
      "column": "Column",
      "colDef": "ColDef",
      "value": "any"
    }
  },
  "CellMouseDownEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null",
      "column": "Column",
      "colDef": "ColDef",
      "value": "any"
    }
  },
  "CellDoubleClickedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null",
      "column": "Column",
      "colDef": "ColDef",
      "value": "any"
    }
  },
  "CellMouseOverEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null",
      "column": "Column",
      "colDef": "ColDef",
      "value": "any"
    }
  },
  "CellMouseOutEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null",
      "column": "Column",
      "colDef": "ColDef",
      "value": "any"
    }
  },
  "CellContextMenuEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null",
      "column": "Column",
      "colDef": "ColDef",
      "value": "any"
    }
  },
  "CellEditingStartedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null",
      "column": "Column",
      "colDef": "ColDef",
      "value": "any"
    }
  },
  "CellEditingStoppedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null",
      "column": "Column",
      "colDef": "ColDef",
      "value": "any",
      "oldValue": "any",
      "newValue": "any"
    }
  },
  "CellValueChangedEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number | null",
      "rowPinned": "string",
      "context": "any",
      "event?": "Event | null",
      "column": "Column",
      "colDef": "ColDef",
      "value": "any",
      "oldValue": "any",
      "newValue": "any",
      "source": "string | undefined"
    }
  },
  "AsyncTransactionsFlushed": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "results": "(RowNodeTransaction | ServerSideTransactionResult)[]"
    }
  },
  "ColumnRequestEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "columns": "Column[]"
    }
  },
  "ColumnRowGroupChangeRequestEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "columns": "Column[]"
    }
  },
  "ColumnPivotChangeRequestEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "columns": "Column[]"
    }
  },
  "ColumnValueChangeRequestEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "columns": "Column[]"
    }
  },
  "ColumnAggFuncChangeRequestEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "columns": "Column[]",
      "aggFunc": "any"
    }
  },
  "ScrollVisibilityChangedEvent": {
    "meta": {},
    "type": { "type": "string", "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "StoreUpdatedEvent": { "meta": {}, "type": { "type": "string" } },
  "LeftPinnedWidthChangedEvent": { "meta": {}, "type": { "type": "string" } },
  "RightPinnedWidthChangedEvent": { "meta": {}, "type": { "type": "string" } },
  "RowContainerHeightChanged": { "meta": {}, "type": { "type": "string" } },
  "DisplayedRowsChangedEvent": { "meta": {}, "type": { "type": "string" } },
  "IFilterLocaleText": {
    "meta": {},
    "type": {
      "applyFilter": "string",
      "clearFilter": "string",
      "resetFilter": "string",
      "cancelFilter": "string",
      "filterOoo": "string",
      "empty": "string",
      "equals": "string",
      "notEqual": "string",
      "lessThan": "string",
      "greaterThan": "string",
      "inRange": "string",
      "inRangeStart": "string",
      "inRangeEnd": "string",
      "lessThanOrEqual": "string",
      "greaterThanOrEqual": "string",
      "contains": "string",
      "notContains": "string",
      "startsWith": "string",
      "endsWith": "string",
      "andCondition": "string",
      "orCondition": "string",
      "dateFormatOoo": "string"
    }
  },
  "IFilterTitleLocaleText": {
    "meta": {},
    "type": {
      "textFilter": "string",
      "numberFilter": "string",
      "dateFilter": "string",
      "setFilter": "string"
    }
  },
  "FilterRequestSource": {
    "meta": { "isTypeAlias": true },
    "type": "'COLUMN_MENU' | 'TOOLBAR' | 'NO_UI'"
  },
  "FilterWrapper": {
    "meta": {},
    "type": {
      "compiledElement": "any",
      "column": "Column",
      "filterPromise": "AgPromise<IFilterComp> | null",
      "scope": "any",
      "guiPromise": "AgPromise<HTMLElement | null>"
    }
  },
  "IFloatingFilterParams": {
    "meta": {},
    "type": {
      "column": "Column",
      "filterParams": "IFilterParams",
      "currentParentModel": "() => any",
      "parentFilterInstance": "(callback: (filterInstance: IFilterComp) => void) => void",
      "showParentFilter": "() => void",
      "suppressFilterButton": "boolean",
      "api": "GridApi",
      "onFloatingFilterChanged": "(change: any) => boolean"
    }
  },
  "IFloatingFilter": {
    "meta": {},
    "type": {
      "onParentModelChanged(parentModel: any, filterChangedEvent: FilterChangedEvent | null)": "void"
    }
  },
  "IFloatingFilterComp": {
    "meta": {},
    "type": {
      "getGui()": "HTMLElement",
      "destroy?()": "void",
      "afterGuiAttached?(params: IAfterGuiAttachedParams)": "void",
      "init?(params: T)": "AgPromise<void> | void",
      "onParentModelChanged(parentModel: any, filterChangedEvent: FilterChangedEvent | null)": "void"
    }
  },
  "BaseFloatingFilterChange": {
    "meta": {},
    "type": { "model": "ProvidedFilterModel", "apply": "boolean" }
  },
  "DateFilterModel": {
    "meta": {},
    "type": {
      "filterType?": "string",
      "type?": "string | null",
      "dateFrom": "string | null",
      "dateTo": "string | null"
    }
  },
  "IDateFilterParams": {
    "meta": {},
    "type": {
      "api": "GridApi",
      "column": "Column",
      "colDef": "ColDef",
      "rowModel": "IRowModel",
      "filterChangedCallback": "(additionalEventAttributes: any) => void",
      "filterModifiedCallback": "() => void",
      "valueGetter": "(rowNode: RowNode) => any",
      "doesRowPassOtherFilter": "(rowNode: RowNode) => boolean",
      "context": "any",
      "clearButton?": "boolean",
      "resetButton?": "boolean",
      "applyButton?": "boolean",
      "buttons?": "FilterButtonType[]",
      "closeOnApply?": "boolean",
      "newRowsAction?": "string",
      "debounceMs?": "number",
      "filterOptions?": "(IFilterOptionDef | string)[]",
      "defaultOption?": "string",
      "defaultJoinOperator?": "JoinOperator",
      "suppressAndOrCondition?": "boolean",
      "alwaysShowBothConditions?": "boolean",
      "inRangeInclusive?": "boolean",
      "includeBlanksInEquals?": "boolean",
      "includeBlanksInLessThan?": "boolean",
      "includeBlanksInGreaterThan?": "boolean",
      "includeBlanksInRange?": "boolean",
      "nullComparator?": "NullComparator",
      "comparator?": "IDateComparatorFunc",
      "browserDatePicker?": "boolean",
      "minValidYear?": "number"
    }
  },
  "IDateComparatorFunc": {
    "meta": { "isCallSignature": true },
    "type": {
      "arguments": { "filterLocalDateAtMidnight": "Date", "cellValue": "any" },
      "returnType": "number"
    }
  },
  "NumberFilterModel": {
    "meta": {},
    "type": {
      "filterType?": "string",
      "type?": "string | null",
      "filter?": "number | null",
      "filterTo?": "number | null"
    }
  },
  "INumberFilterParams": {
    "meta": {},
    "type": {
      "api": "GridApi",
      "column": "Column",
      "colDef": "ColDef",
      "rowModel": "IRowModel",
      "filterChangedCallback": "(additionalEventAttributes: any) => void",
      "filterModifiedCallback": "() => void",
      "valueGetter": "(rowNode: RowNode) => any",
      "doesRowPassOtherFilter": "(rowNode: RowNode) => boolean",
      "context": "any",
      "clearButton?": "boolean",
      "resetButton?": "boolean",
      "applyButton?": "boolean",
      "buttons?": "FilterButtonType[]",
      "closeOnApply?": "boolean",
      "newRowsAction?": "string",
      "debounceMs?": "number",
      "filterOptions?": "(IFilterOptionDef | string)[]",
      "defaultOption?": "string",
      "defaultJoinOperator?": "JoinOperator",
      "suppressAndOrCondition?": "boolean",
      "alwaysShowBothConditions?": "boolean",
      "inRangeInclusive?": "boolean",
      "includeBlanksInEquals?": "boolean",
      "includeBlanksInLessThan?": "boolean",
      "includeBlanksInGreaterThan?": "boolean",
      "includeBlanksInRange?": "boolean",
      "nullComparator?": "NullComparator",
      "allowedCharPattern?": "string",
      "numberParser?": "(text: string | null) => number"
    }
  },
  "FilterButtonType": {
    "meta": { "isTypeAlias": true },
    "type": "'apply' | 'clear' | 'reset' | 'cancel'"
  },
  "IProvidedFilterParams": {
    "meta": {},
    "type": {
      "api": "GridApi",
      "column": "Column",
      "colDef": "ColDef",
      "rowModel": "IRowModel",
      "filterChangedCallback": "(additionalEventAttributes: any) => void",
      "filterModifiedCallback": "() => void",
      "valueGetter": "(rowNode: RowNode) => any",
      "doesRowPassOtherFilter": "(rowNode: RowNode) => boolean",
      "context": "any",
      "clearButton?": "boolean",
      "resetButton?": "boolean",
      "applyButton?": "boolean",
      "buttons?": "FilterButtonType[]",
      "closeOnApply?": "boolean",
      "newRowsAction?": "string",
      "debounceMs?": "number"
    }
  },
  "NullComparator": {
    "meta": {},
    "type": {
      "equals?": "boolean",
      "lessThan?": "boolean",
      "greaterThan?": "boolean"
    }
  },
  "IScalarFilterParams": {
    "meta": {},
    "type": {
      "api": "GridApi",
      "column": "Column",
      "colDef": "ColDef",
      "rowModel": "IRowModel",
      "filterChangedCallback": "(additionalEventAttributes: any) => void",
      "filterModifiedCallback": "() => void",
      "valueGetter": "(rowNode: RowNode) => any",
      "doesRowPassOtherFilter": "(rowNode: RowNode) => boolean",
      "context": "any",
      "clearButton?": "boolean",
      "resetButton?": "boolean",
      "applyButton?": "boolean",
      "buttons?": "FilterButtonType[]",
      "closeOnApply?": "boolean",
      "newRowsAction?": "string",
      "debounceMs?": "number",
      "filterOptions?": "(IFilterOptionDef | string)[]",
      "defaultOption?": "string",
      "defaultJoinOperator?": "JoinOperator",
      "suppressAndOrCondition?": "boolean",
      "alwaysShowBothConditions?": "boolean",
      "inRangeInclusive?": "boolean",
      "includeBlanksInEquals?": "boolean",
      "includeBlanksInLessThan?": "boolean",
      "includeBlanksInGreaterThan?": "boolean",
      "includeBlanksInRange?": "boolean",
      "nullComparator?": "NullComparator"
    }
  },
  "Comparator": {
    "meta": { "isCallSignature": true, "typeParams": ["T"] },
    "type": {
      "arguments": { "left": "T", "right": "T" },
      "returnType": "number"
    }
  },
  "JoinOperator": { "meta": { "isTypeAlias": true }, "type": "'AND' | 'OR'" },
  "ISimpleFilterParams": {
    "meta": {},
    "type": {
      "api": "GridApi",
      "column": "Column",
      "colDef": "ColDef",
      "rowModel": "IRowModel",
      "filterChangedCallback": "(additionalEventAttributes: any) => void",
      "filterModifiedCallback": "() => void",
      "valueGetter": "(rowNode: RowNode) => any",
      "doesRowPassOtherFilter": "(rowNode: RowNode) => boolean",
      "context": "any",
      "clearButton?": "boolean",
      "resetButton?": "boolean",
      "applyButton?": "boolean",
      "buttons?": "FilterButtonType[]",
      "closeOnApply?": "boolean",
      "newRowsAction?": "string",
      "debounceMs?": "number",
      "filterOptions?": "(IFilterOptionDef | string)[]",
      "defaultOption?": "string",
      "defaultJoinOperator?": "JoinOperator",
      "suppressAndOrCondition?": "boolean",
      "alwaysShowBothConditions?": "boolean"
    }
  },
  "ISimpleFilterModel": {
    "meta": {},
    "type": { "filterType?": "string", "type?": "string | null" }
  },
  "ICombinedSimpleModel": {
    "meta": { "typeParams": ["M extends ISimpleFilterModel"] },
    "type": {
      "filterType?": "string",
      "operator": "JoinOperator",
      "condition1": "M",
      "condition2": "M"
    }
  },
  "ConditionPosition": { "meta": { "isEnum": true }, "type": ["One", "Two"] },
  "TextFilterModel": {
    "meta": {},
    "type": {
      "filterType?": "string",
      "type?": "string | null",
      "filter?": "string | null"
    }
  },
  "TextComparator": {
    "meta": { "isCallSignature": true },
    "type": {
      "arguments": {
        "filter": "string | null | undefined",
        "gridValue": "any",
        "filterText": "string | null"
      },
      "returnType": "boolean"
    }
  },
  "TextFormatter": {
    "meta": { "isCallSignature": true },
    "type": {
      "arguments": { "from": "string | null" },
      "returnType": "string | null"
    }
  },
  "ITextFilterParams": {
    "meta": {},
    "type": {
      "api": "GridApi",
      "column": "Column",
      "colDef": "ColDef",
      "rowModel": "IRowModel",
      "filterChangedCallback": "(additionalEventAttributes: any) => void",
      "filterModifiedCallback": "() => void",
      "valueGetter": "(rowNode: RowNode) => any",
      "doesRowPassOtherFilter": "(rowNode: RowNode) => boolean",
      "context": "any",
      "clearButton?": "boolean",
      "resetButton?": "boolean",
      "applyButton?": "boolean",
      "buttons?": "FilterButtonType[]",
      "closeOnApply?": "boolean",
      "newRowsAction?": "string",
      "debounceMs?": "number",
      "filterOptions?": "(IFilterOptionDef | string)[]",
      "defaultOption?": "string",
      "defaultJoinOperator?": "JoinOperator",
      "suppressAndOrCondition?": "boolean",
      "alwaysShowBothConditions?": "boolean",
      "textCustomComparator?": "TextComparator",
      "caseSensitive?": "boolean",
      "textFormatter?": "(from: string) => string",
      "trimInput?": "boolean"
    }
  },
  "GridParams": {
    "meta": {},
    "type": {
      "globalEventListener?": "Function",
      "$scope?": "any",
      "$compile?": "any",
      "frameworkOverrides?": "IFrameworkOverrides",
      "providedBeanInstances?": "[key: string]: any",
      "modules?": "Module[]"
    }
  },
  "StartEditingCellParams": {
    "meta": {},
    "type": {
      "rowIndex": "number",
      "colKey": "string | Column",
      "rowPinned?": "string",
      "keyPress?": "number",
      "charPress?": "string"
    }
  },
  "GetCellsParams": {
    "meta": {},
    "type": { "rowNodes?": "RowNode[]", "columns?": "(string | Column)[]" }
  },
  "RefreshCellsParams": {
    "meta": {},
    "type": {
      "rowNodes?": "RowNode[]",
      "columns?": "(string | Column)[]",
      "force?": "boolean",
      "suppressFlash?": "boolean"
    }
  },
  "FlashCellsParams": {
    "meta": {},
    "type": {
      "rowNodes?": "RowNode[]",
      "columns?": "(string | Column)[]",
      "flashDelay?": "number",
      "fadeDelay?": "number"
    }
  },
  "GetCellRendererInstancesParams": {
    "meta": {},
    "type": { "rowNodes?": "RowNode[]", "columns?": "(string | Column)[]" }
  },
  "GetCellEditorInstancesParams": {
    "meta": {},
    "type": { "rowNodes?": "RowNode[]", "columns?": "(string | Column)[]" }
  },
  "RedrawRowsParams": { "meta": {}, "type": { "rowNodes?": "RowNode[]" } },
  "CreateRangeChartParams": {
    "meta": {},
    "type": {
      "cellRange": "CellRangeParams",
      "chartType": "ChartType",
      "chartThemeName?": "string",
      "chartContainer?": "HTMLElement",
      "suppressChartRanges?": "boolean",
      "aggFunc?": "string | IAggFunc",
      "chartThemeOverrides?": "AgChartThemeOverrides",
      "unlinkChart?": "boolean",
      "processChartOptions?": "(params: ProcessChartOptionsParams) => ChartOptions<any>"
    }
  },
  "CreatePivotChartParams": {
    "meta": {},
    "type": {
      "chartType": "ChartType",
      "chartThemeName?": "string",
      "chartContainer?": "HTMLElement",
      "chartThemeOverrides?": "AgChartThemeOverrides",
      "unlinkChart?": "boolean",
      "processChartOptions?": "(params: ProcessChartOptionsParams) => ChartOptions<any>"
    }
  },
  "CreateCrossFilterChartParams": {
    "meta": {},
    "type": {
      "cellRange": "CellRangeParams",
      "chartType": "ChartType",
      "chartThemeName?": "string",
      "chartContainer?": "HTMLElement",
      "suppressChartRanges?": "boolean",
      "aggFunc?": "string | IAggFunc",
      "chartThemeOverrides?": "AgChartThemeOverrides",
      "unlinkChart?": "boolean"
    }
  },
  "DetailGridInfo": {
    "meta": {},
    "type": { "api?": "GridApi", "columnApi?": "ColumnApi", "id": "string" }
  },
  "IFakeHScrollComp": {
    "meta": {},
    "type": {
      "setHeight(height: number)": "void",
      "setViewportHeight(height: number)": "void",
      "setContainerHeight(height: number)": "void",
      "setRightSpacerFixedWidth(width: number)": "void",
      "setLeftSpacerFixedWidth(width: number)": "void",
      "setInvisibleStyles(isInvisible: boolean)": "void",
      "includeLeftSpacerScrollerCss(cssClass: string, include: boolean)": "void",
      "includeRightSpacerScrollerCss(cssClass: string, include: boolean)": "void"
    }
  },
  "RowAnimationCssClasses": {
    "meta": { "isEnum": true },
    "type": [
      "ANIMATION_ON = 'ag-row-animation'",
      "ANIMATION_OFF = 'ag-row-no-animation'"
    ]
  },
  "IGridBodyComp": {
    "meta": {},
    "type": {
      "updateLayoutClasses(layoutClass: string, params: UpdateLayoutClassesParams)": "void",
      "setColumnMovingCss(cssClass: string | null, on: boolean)": "void",
      "setCellSelectableCss(cssClass: string | null, on: boolean)": "void",
      "setTopHeight(height: number)": "void",
      "setTopDisplay(display: string)": "void",
      "setBottomHeight(height: number)": "void",
      "setBottomDisplay(display: string)": "void",
      "setColumnCount(count: number)": "void",
      "setRowCount(count: number)": "void",
      "setRowAnimationCssOnBodyViewport(cssClass: string, animate: boolean)": "void",
      "setAlwaysVerticalScrollClass(cssClass: string | null, on: boolean)": "void",
      "setPinnedTopBottomOverflowY(overflow: string)": "void",
      "registerBodyViewportResizeListener(listener: (() => void))": "void"
    }
  },
  "NavigateParams": {
    "meta": {},
    "type": {
      "scrollIndex": "number",
      "scrollType": "'top' | 'bottom' | null",
      "scrollColumn": "Column | null",
      "focusIndex": "number",
      "focusColumn": "Column"
    }
  },
  "RenderParams": { "meta": {}, "type": { "rows": "RowNode" } },
  "RenderRowsFeature": {
    "meta": {},
    "type": { "render(rows: RowNode[])": "void" }
  },
  "RowContainerName": {
    "meta": { "isEnum": true },
    "type": [
      "LEFT = 'left'",
      "RIGHT = 'right'",
      "CENTER = 'center'",
      "FULL_WIDTH = 'fullWidth'",
      "TOP_LEFT = 'topLeft'",
      "TOP_RIGHT = 'topRight'",
      "TOP_CENTER = 'topCenter'",
      "TOP_FULL_WITH = 'topFullWidth'",
      "BOTTOM_LEFT = 'bottomLeft'",
      "BOTTOM_RIGHT = 'bottomRight'",
      "BOTTOM_CENTER = 'bottomCenter'",
      "BOTTOM_FULL_WITH = 'bottomFullWidth'"
    ]
  },
  "IRowContainerComp": {
    "meta": {},
    "type": {
      "setViewportHeight(height: string)": "void",
      "setRowCtrls(rowCtrls: RowCtrl[])": "void",
      "setDomOrder(domOrder: boolean)": "void",
      "setContainerWidth(width: string)": "void"
    }
  },
  "RowDropZoneEvents": {
    "meta": {},
    "type": {
      "onDragEnter?": "(params: RowDragEnterEvent) => void",
      "onDragLeave?": "(params: RowDragLeaveEvent) => void",
      "onDragging?": "(params: RowDragMoveEvent) => void",
      "onDragStop?": "(params: RowDragEndEvent) => void"
    }
  },
  "RowDropZoneParams": {
    "meta": {},
    "type": {
      "onDragEnter?": "(params: RowDragEnterEvent) => void",
      "onDragLeave?": "(params: RowDragLeaveEvent) => void",
      "onDragging?": "(params: RowDragMoveEvent) => void",
      "onDragStop?": "(params: RowDragEndEvent) => void",
      "getContainer": "() => HTMLElement"
    }
  },
  "SetScrollsVisibleParams": {
    "meta": {},
    "type": {
      "horizontalScrollShowing": "boolean",
      "verticalScrollShowing": "boolean"
    }
  },
  "IGridComp": {
    "meta": {},
    "type": {
      "updateLayoutClasses(layoutClass: string, params: UpdateLayoutClassesParams)": "void",
      "setRtlClass(cssClass: string)": "void",
      "destroyGridUi()": "void",
      "forceFocusOutOfContainer(up: boolean)": "void",
      "addOrRemoveKeyboardFocusClass(value: boolean)": "void",
      "getFocusableContainers()": "HTMLElement[]",
      "setCursor(value: string | null)": "void",
      "setUserSelect(value: string | null)": "void"
    }
  },
  "PropertyChangedEvent": {
    "meta": {},
    "type": { "type": "string", "currentValue": "any", "previousValue": "any" }
  },
  "DropListener": {
    "meta": {},
    "type": {
      "getIconName()": "string | null",
      "onDragEnter(params: DraggingEvent)": "void",
      "onDragLeave(params: DraggingEvent)": "void",
      "onDragging(params: DraggingEvent)": "void",
      "onDragStop(params: DraggingEvent)": "void"
    }
  },
  "IHeaderParams": {
    "meta": {},
    "type": {
      "column": "Column",
      "displayName": "string",
      "enableSorting": "boolean",
      "enableMenu": "boolean",
      "showColumnMenu": "(source: HTMLElement) => void",
      "progressSort": "(multiSort: boolean) => void",
      "setSort": "(sort: string, multiSort: boolean) => void",
      "columnApi": "ColumnApi",
      "eGridHeader": "HTMLElement",
      "api": "GridApi",
      "context": "any",
      "template": "string"
    }
  },
  "IHeader": {
    "meta": {},
    "type": { "refresh(params: IHeaderParams)": "boolean" }
  },
  "IHeaderComp": {
    "meta": {},
    "type": {
      "getGui()": "HTMLElement",
      "destroy?()": "void",
      "afterGuiAttached?(params: IAfterGuiAttachedParams)": "void",
      "init?(params: T)": "AgPromise<void> | void",
      "refresh(params: IHeaderParams)": "boolean"
    }
  },
  "HeaderNavigationDirection": {
    "meta": { "isEnum": true },
    "type": ["UP", "DOWN", "LEFT", "RIGHT"]
  },
  "HeaderPosition": {
    "meta": {},
    "type": { "headerRowIndex": "number", "column": "Column | ColumnGroup" }
  },
  "SelectionCount": {
    "meta": {},
    "type": { "selected": "number", "notSelected": "number" }
  },
  "IHeaderGroupParams": {
    "meta": {},
    "type": {
      "columnGroup": "ColumnGroup",
      "displayName": "string",
      "setExpanded": "(expanded: boolean) => void",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any"
    }
  },
  "IHeaderGroup": { "meta": {}, "type": {} },
  "IHeaderGroupComp": {
    "meta": {},
    "type": {
      "getGui()": "HTMLElement",
      "destroy?()": "void",
      "afterGuiAttached?(params: IAfterGuiAttachedParams)": "void",
      "init?(params: T)": "AgPromise<void> | void"
    }
  },
  "HeaderContainerPosition": {
    "meta": { "isTypeAlias": true },
    "type": "'left' | 'right' | 'center'"
  },
  "HeaderRowType": {
    "meta": { "isEnum": true },
    "type": ["COLUMN_GROUP", "COLUMN", "FLOATING_FILTER"]
  },
  "HorizontalResizeParams": {
    "meta": {},
    "type": {
      "eResizeBar": "HTMLElement",
      "dragStartPixels?": "number",
      "onResizeStart": "(shiftKey: boolean) => void",
      "onResizing": "(delta: number) => void",
      "onResizeEnd": "(delta: number) => void"
    }
  },
  "ILogger": { "meta": {}, "type": { "log(message: string)": "void" } },
  "BaseExportParams": {
    "meta": {},
    "type": {
      "allColumns?": "boolean",
      "columnKeys?": "(string | Column)[]",
      "fileName?": "string",
      "onlySelected?": "boolean",
      "onlySelectedAllPages?": "boolean",
      "skipColumnGroupHeaders?": "boolean",
      "skipColumnHeaders?": "boolean",
      "skipRowGroups?": "boolean",
      "skipPinnedTop?": "boolean",
      "skipPinnedBottom?": "boolean",
      "shouldRowBeSkipped?(params: ShouldRowBeSkippedParams)": "boolean",
      "processCellCallback?(params: ProcessCellForExportParams)": "string",
      "processHeaderCallback?(params: ProcessHeaderForExportParams)": "string",
      "processGroupHeaderCallback?(params: ProcessGroupHeaderForExportParams)": "string",
      "processRowGroupCallback?(params: ProcessRowGroupForExportParams)": "string",
      "columnGroups?": "boolean",
      "skipGroups?": "boolean",
      "skipHeader?": "boolean"
    }
  },
  "ExportParams": {
    "meta": { "typeParams": ["T"] },
    "type": {
      "allColumns?": "boolean",
      "columnKeys?": "(string | Column)[]",
      "fileName?": "string",
      "onlySelected?": "boolean",
      "onlySelectedAllPages?": "boolean",
      "skipColumnGroupHeaders?": "boolean",
      "skipColumnHeaders?": "boolean",
      "skipRowGroups?": "boolean",
      "skipPinnedTop?": "boolean",
      "skipPinnedBottom?": "boolean",
      "shouldRowBeSkipped?(params: ShouldRowBeSkippedParams)": "boolean",
      "processCellCallback?(params: ProcessCellForExportParams)": "string",
      "processHeaderCallback?(params: ProcessHeaderForExportParams)": "string",
      "processGroupHeaderCallback?(params: ProcessGroupHeaderForExportParams)": "string",
      "processRowGroupCallback?(params: ProcessRowGroupForExportParams)": "string",
      "columnGroups?": "boolean",
      "skipGroups?": "boolean",
      "skipHeader?": "boolean",
      "prependContent?": "T",
      "appendContent?": "T",
      "customHeader?": "T",
      "customFooter?": "T",
      "getCustomContentBelowRow?": "(params: ProcessRowGroupForExportParams) => T | undefined"
    }
  },
  "PackageFileParams": { "meta": { "typeParams": ["T"] }, "type": {} },
  "CsvCell": {
    "meta": {},
    "type": { "data": "CsvCellData", "mergeAcross?": "number" }
  },
  "CsvCellData": { "meta": {}, "type": { "value": "string | null" } },
  "CsvCustomContent": {
    "meta": { "isTypeAlias": true },
    "type": "CsvCell[][] | string"
  },
  "CsvExportParams": {
    "meta": {},
    "type": {
      "allColumns?": "boolean",
      "columnKeys?": "(string | Column)[]",
      "fileName?": "string",
      "onlySelected?": "boolean",
      "onlySelectedAllPages?": "boolean",
      "skipColumnGroupHeaders?": "boolean",
      "skipColumnHeaders?": "boolean",
      "skipRowGroups?": "boolean",
      "skipPinnedTop?": "boolean",
      "skipPinnedBottom?": "boolean",
      "shouldRowBeSkipped?(params: ShouldRowBeSkippedParams)": "boolean",
      "processCellCallback?(params: ProcessCellForExportParams)": "string",
      "processHeaderCallback?(params: ProcessHeaderForExportParams)": "string",
      "processGroupHeaderCallback?(params: ProcessGroupHeaderForExportParams)": "string",
      "processRowGroupCallback?(params: ProcessRowGroupForExportParams)": "string",
      "columnGroups?": "boolean",
      "skipGroups?": "boolean",
      "skipHeader?": "boolean",
      "prependContent?": "T",
      "appendContent?": "T",
      "customHeader?": "T",
      "customFooter?": "T",
      "getCustomContentBelowRow?": "(params: ProcessRowGroupForExportParams) => T | undefined",
      "columnSeparator?": "string",
      "suppressQuotes?": "boolean"
    }
  },
  "ShouldRowBeSkippedParams": {
    "meta": {},
    "type": { "node": "RowNode", "api": "GridApi", "context": "any" }
  },
  "ProcessCellForExportParams": {
    "meta": {},
    "type": {
      "value": "any",
      "accumulatedRowIndex?": "number",
      "node?": "RowNode | null",
      "column": "Column",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any",
      "type": "string"
    }
  },
  "ProcessHeaderForExportParams": {
    "meta": {},
    "type": {
      "column": "Column",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any"
    }
  },
  "ProcessGroupHeaderForExportParams": {
    "meta": {},
    "type": {
      "columnGroup": "ColumnGroup",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any"
    }
  },
  "ProcessRowGroupForExportParams": {
    "meta": {},
    "type": {
      "node": "RowNode",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any"
    }
  },
  "ContainerType": {
    "meta": { "isTypeAlias": true },
    "type": "'columnMenu' | 'contextMenu' | 'toolPanel' | 'floatingFilter'"
  },
  "IAfterGuiAttachedParams": {
    "meta": {},
    "type": {
      "container?": "ContainerType",
      "hidePopup?": "() => void",
      "suppressFocus?": "boolean"
    }
  },
  "FontStyle": {
    "meta": { "isTypeAlias": true },
    "type": "'normal' | 'italic' | 'oblique'"
  },
  "FontWeight": {
    "meta": { "isTypeAlias": true },
    "type": "'normal' | 'bold' | 'bolder' | 'lighter' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'"
  },
  "AgChartThemeName": {
    "meta": { "isTypeAlias": true },
    "type": "'ag-default' | 'ag-default-dark' | 'ag-material' | 'ag-material-dark' | 'ag-pastel' | 'ag-pastel-dark' | 'ag-solar' | 'ag-solar-dark' | 'ag-vivid' | 'ag-vivid-dark'"
  },
  "AgChartThemePalette": {
    "meta": {},
    "type": { "fills": "string[]", "strokes": "string[]" }
  },
  "AgChartThemeOptions": {
    "meta": {},
    "type": {
      "palette?": "AgChartThemePalette",
      "overrides?": "AgChartThemeOverrides"
    }
  },
  "AgChartTheme": {
    "meta": {},
    "type": {
      "palette?": "AgChartThemePalette",
      "overrides?": "AgChartThemeOverrides",
      "baseTheme?": "AgChartThemeName"
    }
  },
  "AgChartThemeOverrides": {
    "meta": {},
    "type": {
      "cartesian?": "AgCartesianChartOptions<AgCartesianAxesTheme, AgCartesianSeriesTheme>",
      "column?": "AgCartesianChartOptions<AgCartesianAxesTheme, AgBarSeriesOptions>",
      "bar?": "AgCartesianChartOptions<AgCartesianAxesTheme, AgBarSeriesOptions>",
      "line?": "AgCartesianChartOptions<AgCartesianAxesTheme, AgLineSeriesOptions>",
      "area?": "AgCartesianChartOptions<AgCartesianAxesTheme, AgAreaSeriesOptions>",
      "scatter?": "AgCartesianChartOptions<AgCartesianAxesTheme, AgScatterSeriesOptions>",
      "histogram?": "AgCartesianChartOptions<AgCartesianAxesTheme, AgHistogramSeriesOptions>",
      "polar?": "AgPolarChartOptions<AgPolarAxesTheme, AgPolarSeriesTheme>",
      "pie?": "AgPolarChartOptions<AgPolarAxesTheme, AgPieSeriesOptions>",
      "common?": "any"
    }
  },
  "AgCartesianAxesTheme": {
    "meta": {},
    "type": {
      "number?": "Omit<AgNumberAxisOptions, 'type'>",
      "category?": "Omit<AgCategoryAxisOptions, 'type'>",
      "groupedCategory?": "Omit<AgGroupedCategoryAxisOptions, 'type'>",
      "time?": "Omit<AgTimeAxisOptions, 'type'>"
    }
  },
  "AgCartesianSeriesTheme": {
    "meta": {},
    "type": {
      "line?": "AgLineSeriesOptions",
      "scatter?": "AgScatterSeriesOptions",
      "area?": "AgAreaSeriesOptions",
      "bar?": "AgBarSeriesOptions",
      "histogram?": "AgHistogramSeriesOptions"
    }
  },
  "AgPolarAxesTheme": { "meta": {}, "type": {} },
  "AgPolarSeriesTheme": {
    "meta": {},
    "type": { "pie?": "AgPieSeriesOptions" }
  },
  "AgChartPaddingOptions": {
    "meta": {},
    "type": {
      "top?": "number",
      "right?": "number",
      "bottom?": "number",
      "left?": "number"
    }
  },
  "AgChartLabelOptions": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "fontStyle?": "FontStyle",
      "fontWeight?": "FontWeight",
      "fontSize?": "number",
      "fontFamily?": "string",
      "color?": "string"
    }
  },
  "AgDropShadowOptions": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "color?": "string",
      "xOffset?": "number",
      "yOffset?": "number",
      "blue?": "number"
    }
  },
  "AgChartCaptionOptions": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "padding?": "AgChartPaddingOptions",
      "text?": "string",
      "fontStyle?": "FontStyle",
      "fontWeight?": "FontWeight",
      "fontSize?": "number",
      "fontFamily?": "string",
      "color?": "string"
    }
  },
  "AgNavigatorMaskOptions": {
    "meta": {},
    "type": {
      "fill?": "string",
      "stroke?": "string",
      "strokeWidth?": "number",
      "fillOpacity?": "number"
    }
  },
  "AgNavigatorHandleOptions": {
    "meta": {},
    "type": {
      "fill?": "string",
      "stroke?": "string",
      "strokeWidth?": "number",
      "width?": "number",
      "height?": "number",
      "gripLineGap?": "number",
      "gripLineLength?": "number"
    }
  },
  "AgNavigatorOptions": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "height?": "number",
      "margin?": "number",
      "min?": "number",
      "max?": "number",
      "mask?": "AgNavigatorMaskOptions",
      "minHandle?": "AgNavigatorHandleOptions",
      "maxHandle?": "AgNavigatorHandleOptions"
    }
  },
  "AgChartLegendPosition": {
    "meta": { "isTypeAlias": true },
    "type": "'top' | 'right' | 'bottom' | 'left'"
  },
  "AgChartLegendMarkerOptions": {
    "meta": {},
    "type": {
      "size?": "number",
      "shape?": "string | (new() => any)",
      "padding?": "number",
      "strokeWidth?": "number"
    }
  },
  "AgChartLegendLabelOptions": {
    "meta": {},
    "type": {
      "color?": "string",
      "fontStyle?": "FontStyle",
      "fontWeight?": "FontWeight",
      "fontSize?": "number",
      "fontFamily?": "string"
    }
  },
  "AgChartLegendItemOptions": {
    "meta": {},
    "type": {
      "marker?": "AgChartLegendMarkerOptions",
      "label?": "AgChartLegendLabelOptions",
      "paddingX?": "number",
      "paddingY?": "number"
    }
  },
  "AgChartLegendOptions": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "position?": "AgChartLegendPosition",
      "spacing?": "number",
      "item?": "AgChartLegendItemOptions",
      "layoutHorizontalSpacing?": "number",
      "layoutVerticalSpacing?": "number",
      "itemSpacing?": "number",
      "markerShape?": "string | (new() => any)",
      "markerSize?": "number",
      "strokeWidth?": "number",
      "color?": "string",
      "fontStyle?": "FontStyle",
      "fontWeight?": "FontWeight",
      "fontSize?": "number",
      "fontFamily?": "string"
    }
  },
  "AgBaseChartOptions": {
    "meta": {},
    "type": {
      "container?": "HTMLElement",
      "data?": "any[]",
      "width?": "number",
      "height?": "number",
      "autoSize?": "boolean",
      "padding?": "AgChartPaddingOptions",
      "background?": "visible? fill?",
      "title?": "AgChartCaptionOptions",
      "subtitle?": "AgChartCaptionOptions",
      "tooltipClass?": "string",
      "tooltipTracking?": "boolean",
      "navigator?": "AgNavigatorOptions",
      "legend?": "AgChartLegendOptions",
      "listeners?": "{[key in string]: Function}",
      "theme?": "string | AgChartTheme"
    }
  },
  "AgBaseAxisOptions": { "meta": {}, "type": { "keys?": "string[]" } },
  "AgCartesianAxisPosition": {
    "meta": { "isTypeAlias": true },
    "type": "'top' | 'right' | 'bottom' | 'left'"
  },
  "AgAxisLineOptions": {
    "meta": {},
    "type": { "width?": "number", "color?": "string" }
  },
  "AgAxisTickOptions": {
    "meta": {},
    "type": {
      "width?": "number",
      "size?": "number",
      "color?": "string",
      "count?": "any"
    }
  },
  "AgAxisLabelFormatterParams": {
    "meta": {},
    "type": {
      "value": "any",
      "index": "number",
      "fractionDigits?": "number",
      "formatter?": "(x: any) => string"
    }
  },
  "AgAxisLabelOptions": {
    "meta": {},
    "type": {
      "fontStyle?": "FontStyle",
      "fontWeight?": "FontWeight",
      "fontSize?": "number",
      "fontFamily?": "string",
      "padding?": "number",
      "color?": "string",
      "rotation?": "number",
      "format?": "string",
      "formatter?": "(params: AgAxisLabelFormatterParams) => string"
    }
  },
  "AgAxisGridStyle": {
    "meta": {},
    "type": { "stroke?": "string", "lineDash?": "number[]" }
  },
  "AgBaseCartesianAxisOptions": {
    "meta": {},
    "type": {
      "keys?": "string[]",
      "position?": "AgCartesianAxisPosition",
      "title?": "AgChartCaptionOptions",
      "line?": "AgAxisLineOptions",
      "tick?": "AgAxisTickOptions",
      "label?": "AgAxisLabelOptions",
      "gridStyle?": "AgAxisGridStyle[]"
    }
  },
  "AgNumberAxisOptions": {
    "meta": {},
    "type": {
      "keys?": "string[]",
      "position?": "AgCartesianAxisPosition",
      "title?": "AgChartCaptionOptions",
      "line?": "AgAxisLineOptions",
      "tick?": "AgAxisTickOptions",
      "label?": "AgAxisLabelOptions",
      "gridStyle?": "AgAxisGridStyle[]",
      "type": "'number'",
      "nice?": "boolean",
      "min?": "number",
      "max?": "number"
    }
  },
  "AgCategoryAxisOptions": {
    "meta": {},
    "type": {
      "keys?": "string[]",
      "position?": "AgCartesianAxisPosition",
      "title?": "AgChartCaptionOptions",
      "line?": "AgAxisLineOptions",
      "tick?": "AgAxisTickOptions",
      "label?": "AgAxisLabelOptions",
      "gridStyle?": "AgAxisGridStyle[]",
      "type": "'category'",
      "paddingInner?": "number",
      "paddingOuter?": "number"
    }
  },
  "AgGroupedCategoryAxisOptions": {
    "meta": {},
    "type": {
      "keys?": "string[]",
      "position?": "AgCartesianAxisPosition",
      "title?": "AgChartCaptionOptions",
      "line?": "AgAxisLineOptions",
      "tick?": "AgAxisTickOptions",
      "label?": "AgAxisLabelOptions",
      "gridStyle?": "AgAxisGridStyle[]",
      "type": "'groupedCategory'"
    }
  },
  "AgTimeAxisOptions": {
    "meta": {},
    "type": {
      "keys?": "string[]",
      "position?": "AgCartesianAxisPosition",
      "title?": "AgChartCaptionOptions",
      "line?": "AgAxisLineOptions",
      "tick?": "AgAxisTickOptions",
      "label?": "AgAxisLabelOptions",
      "gridStyle?": "AgAxisGridStyle[]",
      "type": "'time'",
      "nice?": "boolean"
    }
  },
  "AgCartesianAxisOptions": {
    "meta": { "isTypeAlias": true },
    "type": "AgNumberAxisOptions | AgCategoryAxisOptions | AgGroupedCategoryAxisOptions | AgTimeAxisOptions"
  },
  "AgPolarAxisOptions": { "meta": {}, "type": {} },
  "AgBaseSeriesOptions": {
    "meta": {},
    "type": {
      "tooltipEnabled?": "boolean",
      "data?": "any[]",
      "visible?": "boolean",
      "showInLegend?": "boolean",
      "listeners?": "{[key in string]: Function}"
    }
  },
  "AgTooltipRendererResult": {
    "meta": {},
    "type": { "title?": "string", "content?": "string" }
  },
  "AgSeriesTooltipRendererParams": {
    "meta": {},
    "type": { "datum": "any", "title?": "string", "color?": "string" }
  },
  "AgCartesianSeriesTooltipRendererParams": {
    "meta": {},
    "type": {
      "datum": "any",
      "title?": "string",
      "color?": "string",
      "xKey": "string",
      "xValue?": "any",
      "xName?": "string",
      "yKey": "string",
      "yValue?": "any",
      "yName?": "string"
    }
  },
  "AgPolarSeriesTooltipRendererParams": {
    "meta": {},
    "type": {
      "datum": "any",
      "title?": "string",
      "color?": "string",
      "angleKey": "string",
      "angleValue?": "any",
      "angleName?": "string",
      "radiusKey?": "string",
      "radiusValue?": "any",
      "radiusName?": "string"
    }
  },
  "AgScatterSeriesTooltipRendererParams": {
    "meta": {},
    "type": {
      "datum": "any",
      "title?": "string",
      "color?": "string",
      "xKey": "string",
      "xValue?": "any",
      "xName?": "string",
      "yKey": "string",
      "yValue?": "any",
      "yName?": "string",
      "sizeKey?": "string",
      "sizeName?": "string",
      "labelKey?": "string",
      "labelName?": "string"
    }
  },
  "AgSeriesMarker": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "shape?": "string",
      "size?": "number",
      "maxSize?": "number",
      "fill?": "string",
      "stroke?": "string",
      "strokeWidth?": "number"
    }
  },
  "AgCartesianSeriesMarkerFormatterParams": {
    "meta": {},
    "type": { "xKey": "string", "yKey": "string" }
  },
  "AgCartesianSeriesMarkerFormat": {
    "meta": {},
    "type": {
      "fill?": "string",
      "stroke?": "string",
      "strokeWidth?": "number",
      "size?": "number"
    }
  },
  "AgCartesianSeriesMarker": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "shape?": "string",
      "size?": "number",
      "maxSize?": "number",
      "fill?": "string",
      "stroke?": "string",
      "strokeWidth?": "number",
      "formatter?": "(params: AgCartesianSeriesMarkerFormatterParams) => AgCartesianSeriesMarkerFormat"
    }
  },
  "AgSeriesTooltip": { "meta": {}, "type": { "enabled?": "boolean" } },
  "AgLineSeriesTooltip": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "renderer?": "(params: AgCartesianSeriesTooltipRendererParams) => string | AgTooltipRendererResult"
    }
  },
  "AgLineSeriesLabelOptions": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "fontStyle?": "FontStyle",
      "fontWeight?": "FontWeight",
      "fontSize?": "number",
      "fontFamily?": "string",
      "color?": "string",
      "formatter?": "(params: value) => string"
    }
  },
  "AgLineSeriesOptions": {
    "meta": {},
    "type": {
      "tooltipEnabled?": "boolean",
      "data?": "any[]",
      "visible?": "boolean",
      "showInLegend?": "boolean",
      "listeners?": "{[key in string]: Function}",
      "type?": "'line'",
      "marker?": "AgCartesianSeriesMarker",
      "label?": "AgLineSeriesLabelOptions",
      "xKey?": "string",
      "yKey?": "string",
      "xName?": "string",
      "yName?": "string",
      "title?": "string",
      "stroke?": "string",
      "strokeWidth?": "number",
      "strokeOpacity?": "number",
      "lineDash?": "number[]",
      "lineDashOffset?": "number",
      "highlightStyle?": "fill? stroke?",
      "tooltip?": "AgLineSeriesTooltip",
      "tooltipRenderer?": "(params: AgCartesianSeriesTooltipRendererParams) => string | AgTooltipRendererResult"
    }
  },
  "AgScatterSeriesTooltip": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "renderer?": "(params: AgScatterSeriesTooltipRendererParams) => string | AgTooltipRendererResult"
    }
  },
  "AgScatterSeriesLabelOptions": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "fontStyle?": "FontStyle",
      "fontWeight?": "FontWeight",
      "fontSize?": "number",
      "fontFamily?": "string",
      "color?": "string"
    }
  },
  "AgScatterSeriesOptions": {
    "meta": {},
    "type": {
      "tooltipEnabled?": "boolean",
      "data?": "any[]",
      "visible?": "boolean",
      "showInLegend?": "boolean",
      "listeners?": "{[key in string]: Function}",
      "type?": "'scatter'",
      "marker?": "AgCartesianSeriesMarker",
      "label?": "AgScatterSeriesLabelOptions",
      "xKey?": "string",
      "yKey?": "string",
      "xName?": "string",
      "yName?": "string",
      "title?": "string",
      "fill?": "string",
      "stroke?": "string",
      "strokeWidth?": "number",
      "fillOpacity?": "number",
      "strokeOpacity?": "number",
      "highlightStyle?": "fill? stroke?",
      "tooltip?": "AgScatterSeriesTooltip",
      "tooltipRenderer?": "(params: AgScatterSeriesTooltipRendererParams) => string | AgTooltipRendererResult"
    }
  },
  "AgAreaSeriesTooltip": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "renderer?": "(params: AgCartesianSeriesTooltipRendererParams) => string | AgTooltipRendererResult",
      "format?": "string"
    }
  },
  "AgAreaSeriesLabelOptions": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "fontStyle?": "FontStyle",
      "fontWeight?": "FontWeight",
      "fontSize?": "number",
      "fontFamily?": "string",
      "color?": "string",
      "formatter?": "(params: value) => string"
    }
  },
  "AgAreaSeriesOptions": {
    "meta": {},
    "type": {
      "tooltipEnabled?": "boolean",
      "data?": "any[]",
      "visible?": "boolean",
      "showInLegend?": "boolean",
      "listeners?": "{[key in string]: Function}",
      "type?": "'area'",
      "marker?": "AgCartesianSeriesMarker",
      "label?": "AgAreaSeriesLabelOptions",
      "xKey?": "string",
      "yKeys?": "string[]",
      "xName?": "string",
      "yNames?": "string[]",
      "fills?": "string[]",
      "strokes?": "string[]",
      "strokeWidth?": "number",
      "fillOpacity?": "number",
      "strokeOpacity?": "number",
      "lineDash?": "number[]",
      "lineDashOffset?": "number",
      "shadow?": "AgDropShadowOptions",
      "highlightStyle?": "fill? stroke?",
      "tooltip?": "AgAreaSeriesTooltip",
      "tooltipRenderer?": "(params: AgCartesianSeriesTooltipRendererParams) => string | AgTooltipRendererResult"
    }
  },
  "AgBarSeriesLabelOptions": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "fontStyle?": "FontStyle",
      "fontWeight?": "FontWeight",
      "fontSize?": "number",
      "fontFamily?": "string",
      "color?": "string",
      "formatter?": "(params: value) => string"
    }
  },
  "AgBarSeriesFormatterParams": {
    "meta": {},
    "type": {
      "datum": "any",
      "fill?": "string",
      "stroke?": "string",
      "strokeWidth": "number",
      "highlighted": "boolean",
      "xKey": "string",
      "yKey": "string"
    }
  },
  "AgBarSeriesFormat": {
    "meta": {},
    "type": { "fill?": "string", "stroke?": "string", "strokeWidth?": "number" }
  },
  "AgBarSeriesTooltip": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "renderer?": "(params: AgCartesianSeriesTooltipRendererParams) => string | AgTooltipRendererResult"
    }
  },
  "AgBarSeriesOptions": {
    "meta": {},
    "type": {
      "tooltipEnabled?": "boolean",
      "data?": "any[]",
      "visible?": "boolean",
      "showInLegend?": "boolean",
      "listeners?": "{[key in string]: Function}",
      "type?": "'bar' | 'column'",
      "grouped?": "boolean",
      "normalizedTo?": "number",
      "xKey?": "string",
      "yKeys?": "string[] | string[][]",
      "xName?": "string",
      "yNames?": "string[] | {[key in string]: string}",
      "fills?": "string[]",
      "strokes?": "string[]",
      "strokeWidth?": "number",
      "fillOpacity?": "number",
      "strokeOpacity?": "number",
      "lineDash?": "number[]",
      "lineDashOffset?": "number",
      "shadow?": "AgDropShadowOptions",
      "highlightStyle?": "fill? stroke?",
      "label?": "AgBarSeriesLabelOptions",
      "tooltip?": "AgBarSeriesTooltip",
      "tooltipRenderer?": "(params: AgCartesianSeriesTooltipRendererParams) => string | AgTooltipRendererResult",
      "formatter?": "(params: AgBarSeriesFormatterParams) => AgBarSeriesFormat"
    }
  },
  "AgHistogramSeriesLabelOptions": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "fontStyle?": "FontStyle",
      "fontWeight?": "FontWeight",
      "fontSize?": "number",
      "fontFamily?": "string",
      "color?": "string",
      "formatter?": "(params: value) => string"
    }
  },
  "AgHistogramSeriesTooltip": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "renderer?": "(params: AgCartesianSeriesTooltipRendererParams) => string | AgTooltipRendererResult"
    }
  },
  "AgHistogramSeriesOptions": {
    "meta": {},
    "type": {
      "tooltipEnabled?": "boolean",
      "data?": "any[]",
      "visible?": "boolean",
      "showInLegend?": "boolean",
      "listeners?": "{[key in string]: Function}",
      "type?": "'histogram'",
      "fill?": "string",
      "stroke?": "string",
      "fillOpacity?": "number",
      "strokeOpacity?": "number",
      "strokeWidth?": "number",
      "lineDash?": "number[]",
      "lineDashOffset?": "number",
      "xKey?": "string",
      "xName?": "string",
      "yKey?": "string",
      "yName?": "string",
      "areaPlot?": "boolean",
      "bins?": "[number, number][]",
      "binCount?": "number",
      "aggregation?": "'count' | 'sum' | 'mean'",
      "shadow?": "AgDropShadowOptions",
      "highlightStyle?": "fill? stroke?",
      "label?": "AgHistogramSeriesLabelOptions",
      "tooltip?": "AgHistogramSeriesTooltip",
      "tooltipRenderer?": "(params: AgCartesianSeriesTooltipRendererParams) => string | AgTooltipRendererResult"
    }
  },
  "AgPieSeriesLabelOptions": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "fontStyle?": "FontStyle",
      "fontWeight?": "FontWeight",
      "fontSize?": "number",
      "fontFamily?": "string",
      "color?": "string",
      "offset?": "number",
      "minAngle?": "number"
    }
  },
  "AgPieSeriesFormatterParams": {
    "meta": {},
    "type": {
      "datum": "any",
      "fill?": "string",
      "stroke?": "string",
      "strokeWidth": "number",
      "highlighted": "boolean",
      "angleKey": "string",
      "radiusKey?": "string"
    }
  },
  "AgPieSeriesFormat": {
    "meta": {},
    "type": { "fill?": "string", "stroke?": "string", "strokeWidth?": "number" }
  },
  "AgPieSeriesTooltip": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "renderer?": "(params: AgPieSeriesTooltipRendererParams) => string | AgTooltipRendererResult"
    }
  },
  "AgPieSeriesOptions": {
    "meta": {},
    "type": {
      "tooltipEnabled?": "boolean",
      "data?": "any[]",
      "visible?": "boolean",
      "showInLegend?": "boolean",
      "listeners?": "{[key in string]: Function}",
      "type?": "'pie'",
      "title?": "AgChartCaptionOptions",
      "label?": "AgPieSeriesLabelOptions",
      "callout?": "colors? length? strokeWidth?",
      "angleKey?": "string",
      "angleName?": "string",
      "radiusKey?": "string",
      "radiusName?": "string",
      "labelKey?": "string",
      "labelName?": "string",
      "fills?": "string[]",
      "strokes?": "string[]",
      "fillOpacity?": "number",
      "strokeOpacity?": "number",
      "strokeWidth?": "number",
      "lineDash?": "number[]",
      "lineDashOffset?": "number",
      "rotation?": "number",
      "outerRadiusOffset?": "number",
      "innerRadiusOffset?": "number",
      "shadow?": "AgDropShadowOptions",
      "highlightStyle?": "fill? stroke?",
      "tooltip?": "AgPieSeriesTooltip",
      "tooltipRenderer?": "(params: AgPieSeriesTooltipRendererParams) => string | AgTooltipRendererResult",
      "formatter?": "(params: AgPieSeriesFormatterParams) => AgPieSeriesFormat"
    }
  },
  "AgPieSeriesTooltipRendererParams": {
    "meta": {},
    "type": {
      "datum": "any",
      "title?": "string",
      "color?": "string",
      "angleKey": "string",
      "angleValue?": "any",
      "angleName?": "string",
      "radiusKey?": "string",
      "radiusValue?": "any",
      "radiusName?": "string",
      "labelKey?": "string",
      "labelName?": "string"
    }
  },
  "AgCartesianSeriesOptions": {
    "meta": { "isTypeAlias": true },
    "type": "AgLineSeriesOptions | AgScatterSeriesOptions | AgAreaSeriesOptions | AgBarSeriesOptions | AgHistogramSeriesOptions"
  },
  "AgPolarSeriesOptions": { "meta": {}, "type": {} },
  "AgCartesianChartOptions": {
    "meta": { "typeParams": ["TAxisOptions", "TSeriesOptions"] },
    "type": {
      "container?": "HTMLElement",
      "data?": "any[]",
      "width?": "number",
      "height?": "number",
      "autoSize?": "boolean",
      "padding?": "AgChartPaddingOptions",
      "background?": "visible? fill?",
      "title?": "AgChartCaptionOptions",
      "subtitle?": "AgChartCaptionOptions",
      "tooltipClass?": "string",
      "tooltipTracking?": "boolean",
      "navigator?": "AgNavigatorOptions",
      "legend?": "AgChartLegendOptions",
      "listeners?": "{[key in string]: Function}",
      "theme?": "string | AgChartTheme",
      "type?": "'cartesian' | 'groupedCategory' | 'line' | 'bar' | 'column' | 'area' | 'scatter'",
      "axes?": "TAxisOptions",
      "series?": "TSeriesOptions"
    }
  },
  "AgPolarChartOptions": {
    "meta": { "typeParams": ["TAxisOptions", "TSeriesOptions"] },
    "type": {
      "container?": "HTMLElement",
      "data?": "any[]",
      "width?": "number",
      "height?": "number",
      "autoSize?": "boolean",
      "padding?": "AgChartPaddingOptions",
      "background?": "visible? fill?",
      "title?": "AgChartCaptionOptions",
      "subtitle?": "AgChartCaptionOptions",
      "tooltipClass?": "string",
      "tooltipTracking?": "boolean",
      "navigator?": "AgNavigatorOptions",
      "legend?": "AgChartLegendOptions",
      "listeners?": "{[key in string]: Function}",
      "theme?": "string | AgChartTheme",
      "type?": "'polar' | 'pie'",
      "axes?": "TAxisOptions",
      "series?": "TSeriesOptions"
    }
  },
  "AgChartOptions": {
    "meta": { "isTypeAlias": true },
    "type": "AgCartesianChartOptions | AgPolarChartOptions"
  },
  "IAggFuncService": {
    "meta": {},
    "type": {
      "addAggFuncs(aggFuncs: [key: string]: IAggFunc)": "void",
      "addAggFunc(key: string, aggFunc: IAggFunc)": "void",
      "clear()": "void",
      "getDefaultAggFunc(column: Column)": "string | null",
      "getFuncNames(column: Column)": "string[]"
    }
  },
  "IAggregationStage": {
    "meta": {},
    "type": {
      "aggregateValues(values: any[], aggFuncOrString: string | IAggFunc)": "any"
    }
  },
  "ICellEditor": {
    "meta": {},
    "type": {
      "getValue()": "any",
      "isPopup?()": "boolean",
      "getPopupPosition?()": "string | undefined",
      "isCancelBeforeStart?()": "boolean",
      "isCancelAfterEnd?()": "boolean",
      "focusIn?()": "void",
      "focusOut?()": "void",
      "getFrameworkComponentInstance?()": "any"
    }
  },
  "ICellEditorParams": {
    "meta": {},
    "type": {
      "value": "any",
      "keyPress": "number | null",
      "charPress": "string | null",
      "column": "Column",
      "colDef": "ColDef",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "cellStartedEdit": "boolean",
      "context": "any",
      "$scope": "any",
      "onKeyDown": "(event: KeyboardEvent) => void",
      "stopEditing": "(suppressNavigateAfterEdit: boolean) => void",
      "eGridCell": "HTMLElement",
      "parseValue": "(value: any) => any",
      "formatValue": "(value: any) => any"
    }
  },
  "ICellEditorComp": {
    "meta": {},
    "type": {
      "getGui()": "HTMLElement",
      "destroy?()": "void",
      "afterGuiAttached?(params: IAfterGuiAttachedParams)": "void",
      "init?(params: T)": "AgPromise<void> | void",
      "isPopup?()": "boolean",
      "focusIn?()": "void",
      "focusOut?()": "void",
      "getValue()": "any",
      "getPopupPosition?()": "string | undefined",
      "isCancelBeforeStart?()": "boolean",
      "isCancelAfterEnd?()": "boolean",
      "getFrameworkComponentInstance?()": "any"
    }
  },
  "ChartType": {
    "meta": { "isEnum": true },
    "type": [
      "Column = 'column'",
      "GroupedColumn = 'groupedColumn'",
      "StackedColumn = 'stackedColumn'",
      "NormalizedColumn = 'normalizedColumn'",
      "Bar = 'bar'",
      "GroupedBar = 'groupedBar'",
      "StackedBar = 'stackedBar'",
      "NormalizedBar = 'normalizedBar'",
      "Line = 'line'",
      "Scatter = 'scatter'",
      "Bubble = 'bubble'",
      "Pie = 'pie'",
      "Doughnut = 'doughnut'",
      "Area = 'area'",
      "StackedArea = 'stackedArea'",
      "NormalizedArea = 'normalizedArea'",
      "Histogram = 'histogram'"
    ]
  },
  "ChartMenuOptions": {
    "meta": { "isTypeAlias": true },
    "type": "'chartSettings' | 'chartData' | 'chartFormat' | 'chartLink' | 'chartUnlink' | 'chartDownload'"
  },
  "SeriesOptions": {
    "meta": {},
    "type": {
      "fill": "FillOptions",
      "stroke": "StrokeOptions",
      "highlightStyle": "HighlightOptions",
      "listeners?": "{[key in string]: Function}"
    }
  },
  "ChartTooltip": {
    "meta": {},
    "type": {
      "enabled?": "boolean",
      "class?": "string",
      "tracking?": "boolean",
      "delay?": "number"
    }
  },
  "ChartOptions": {
    "meta": { "typeParams": ["T extends SeriesOptions"] },
    "type": {
      "document?": "Document",
      "seriesDefaults": "T",
      "width?": "number",
      "height?": "number",
      "padding": "PaddingOptions",
      "background": "BackgroundOptions",
      "title": "CaptionOptions",
      "subtitle": "CaptionOptions",
      "navigator": "NavigatorOptions",
      "legend": "LegendOptions",
      "tooltip?": "ChartTooltip",
      "listeners?": "{[key in string]: Function}"
    }
  },
  "PaddingOptions": {
    "meta": {},
    "type": {
      "top": "number",
      "right": "number",
      "bottom": "number",
      "left": "number"
    }
  },
  "BackgroundOptions": {
    "meta": {},
    "type": { "fill": "string", "visible": "boolean" }
  },
  "FontOptions": {
    "meta": {},
    "type": {
      "fontStyle": "FontStyle",
      "fontWeight": "FontWeight",
      "fontSize": "number",
      "fontFamily": "string",
      "color": "string"
    }
  },
  "CaptionOptions": {
    "meta": {},
    "type": {
      "fontStyle": "FontStyle",
      "fontWeight": "FontWeight",
      "fontSize": "number",
      "fontFamily": "string",
      "color": "string",
      "enabled": "boolean",
      "text?": "string"
    }
  },
  "LegendOptions": {
    "meta": {},
    "type": {
      "enabled": "boolean",
      "position": "LegendPosition",
      "spacing": "number",
      "item": "LegendItemOptions"
    }
  },
  "LegendPosition": {
    "meta": { "isEnum": true },
    "type": [
      "Top = 'top'",
      "Right = 'right'",
      "Bottom = 'bottom'",
      "Left = 'left'"
    ]
  },
  "LegendItemOptions": {
    "meta": {},
    "type": {
      "label": "LegendLabelOptions",
      "marker": "LegendMarkerOptions",
      "paddingX": "number",
      "paddingY": "number"
    }
  },
  "LegendLabelOptions": {
    "meta": {},
    "type": {
      "fontStyle": "FontStyle",
      "fontWeight": "FontWeight",
      "fontSize": "number",
      "fontFamily": "string",
      "color": "string"
    }
  },
  "NavigatorOptions": {
    "meta": {},
    "type": {
      "enabled": "boolean",
      "height": "number",
      "min": "number",
      "max": "number",
      "mask": "NavigatorMaskOptions",
      "minHandle": "NavigatorHandleOptions",
      "maxHandle": "NavigatorHandleOptions"
    }
  },
  "NavigatorMaskOptions": {
    "meta": {},
    "type": {
      "fill": "string",
      "stroke": "string",
      "strokeWidth": "number",
      "fillOpacity": "number"
    }
  },
  "NavigatorHandleOptions": {
    "meta": {},
    "type": {
      "fill": "string",
      "stroke": "string",
      "strokeWidth": "number",
      "width": "number",
      "height": "number",
      "gripLineGap": "number",
      "gripLineLength": "number"
    }
  },
  "MarkerShape": {
    "meta": { "isTypeAlias": true },
    "type": "'circle' | 'cross' | 'diamond' | 'plus' | 'square' | 'triangle'"
  },
  "LegendMarkerOptions": {
    "meta": {},
    "type": {
      "shape": "MarkerShape",
      "size": "number",
      "padding": "number",
      "strokeWidth": "number"
    }
  },
  "CartesianChartOptions": {
    "meta": { "typeParams": ["T extends SeriesOptions"] },
    "type": {
      "document?": "Document",
      "seriesDefaults": "T",
      "width?": "number",
      "height?": "number",
      "padding": "PaddingOptions",
      "background": "BackgroundOptions",
      "title": "CaptionOptions",
      "subtitle": "CaptionOptions",
      "navigator": "NavigatorOptions",
      "legend": "LegendOptions",
      "tooltip?": "ChartTooltip",
      "listeners?": "{[key in string]: Function}",
      "xAxis": "AxisOptions",
      "yAxis": "AxisOptions"
    }
  },
  "PolarChartOptions": {
    "meta": { "typeParams": ["T extends SeriesOptions"] },
    "type": {
      "document?": "Document",
      "seriesDefaults": "T",
      "width?": "number",
      "height?": "number",
      "padding": "PaddingOptions",
      "background": "BackgroundOptions",
      "title": "CaptionOptions",
      "subtitle": "CaptionOptions",
      "navigator": "NavigatorOptions",
      "legend": "LegendOptions",
      "tooltip?": "ChartTooltip",
      "listeners?": "{[key in string]: Function}"
    }
  },
  "AxisOptions": {
    "meta": {},
    "type": {
      "type?": "AxisType",
      "title": "CaptionOptions",
      "line": "AxisLineOptions",
      "tick": "AxisTickOptions",
      "label": "AxisLabelOptions",
      "gridStyle": "GridStyle[]"
    }
  },
  "AxisType": {
    "meta": { "isTypeAlias": true },
    "type": "'category' | 'number' | 'time'"
  },
  "AxisLineOptions": {
    "meta": {},
    "type": { "width": "number", "color": "string" }
  },
  "AxisTickOptions": {
    "meta": {},
    "type": { "width": "number", "size": "number", "color": "string" }
  },
  "AxisLabelFormatterParams": {
    "meta": {},
    "type": {
      "value": "any",
      "index": "number",
      "fractionDigits?": "number",
      "formatter?": "(x: any) => string"
    }
  },
  "AxisLabelOptions": {
    "meta": {},
    "type": {
      "fontStyle": "FontStyle",
      "fontWeight": "FontWeight",
      "fontSize": "number",
      "fontFamily": "string",
      "color": "string",
      "padding": "number",
      "rotation": "number",
      "format?": "string",
      "formatter?": "(params: AxisLabelFormatterParams) => string"
    }
  },
  "GridStyle": {
    "meta": {},
    "type": { "stroke": "string", "lineDash?": "number[]" }
  },
  "HighlightOptions": {
    "meta": {},
    "type": { "fill": "string", "stroke?": "string", "dimOpacity?": "number" }
  },
  "FillOptions": {
    "meta": {},
    "type": { "colors": "string[]", "opacity": "number" }
  },
  "StrokeOptions": {
    "meta": {},
    "type": { "colors": "string[]", "opacity": "number", "width": "number" }
  },
  "DropShadowOptions": {
    "meta": {},
    "type": {
      "enabled": "boolean",
      "color": "string",
      "xOffset": "number",
      "yOffset": "number",
      "blur": "number"
    }
  },
  "SeriesLabelOptions": {
    "meta": {},
    "type": {
      "fontStyle": "FontStyle",
      "fontWeight": "FontWeight",
      "fontSize": "number",
      "fontFamily": "string",
      "color": "string",
      "enabled": "boolean"
    }
  },
  "TooltipRendererResult": {
    "meta": {},
    "type": { "content": "string", "title?": "string" }
  },
  "TooltipOptions": {
    "meta": { "typeParams": ["TParams"] },
    "type": {
      "enabled": "boolean",
      "renderer?": "(params: TParams) => string | TooltipRendererResult"
    }
  },
  "TooltipRendererParams": {
    "meta": {},
    "type": { "datum": "any", "title?": "string", "color": "string" }
  },
  "CartesianTooltipRendererParams": {
    "meta": {},
    "type": {
      "datum": "any",
      "title?": "string",
      "color": "string",
      "xKey": "string",
      "xValue": "any",
      "xName": "string",
      "yKey": "string",
      "yValue": "any",
      "yName": "string"
    }
  },
  "BarSeriesOptions": {
    "meta": {},
    "type": {
      "fill": "FillOptions",
      "stroke": "StrokeOptions",
      "highlightStyle": "HighlightOptions",
      "listeners?": "{[key in string]: Function}",
      "shadow": "DropShadowOptions",
      "label": "BarSeriesLabelOptions",
      "tooltip": "TooltipOptions<BarTooltipRendererParams>",
      "lineDash": "number[]",
      "lineDashOffset": "number"
    }
  },
  "HistogramSeriesOptions": {
    "meta": {},
    "type": {
      "fill": "FillOptions",
      "stroke": "StrokeOptions",
      "highlightStyle": "HighlightOptions",
      "listeners?": "{[key in string]: Function}",
      "shadow": "DropShadowOptions",
      "label": "BarSeriesLabelOptions",
      "tooltip": "TooltipOptions<BarTooltipRendererParams>",
      "lineDash": "number[]",
      "lineDashOffset": "number",
      "binCount?": "number"
    }
  },
  "BarSeriesLabelOptions": {
    "meta": {},
    "type": {
      "fontStyle": "FontStyle",
      "fontWeight": "FontWeight",
      "fontSize": "number",
      "fontFamily": "string",
      "color": "string",
      "enabled": "boolean",
      "formatter?": "(params: value) => string"
    }
  },
  "BarTooltipRendererParams": {
    "meta": {},
    "type": {
      "datum": "any",
      "title?": "string",
      "color": "string",
      "xKey": "string",
      "xValue": "any",
      "xName": "string",
      "yKey": "string",
      "yValue": "any",
      "yName": "string"
    }
  },
  "LineSeriesOptions": {
    "meta": {},
    "type": {
      "fill": "FillOptions",
      "stroke": "StrokeOptions",
      "highlightStyle": "HighlightOptions",
      "listeners?": "{[key in string]: Function}",
      "marker": "MarkerOptions",
      "label": "LineSeriesLabelOptions",
      "tooltip": "TooltipOptions<LineTooltipRendererParams>",
      "lineDash": "number[]",
      "lineDashOffset": "number"
    }
  },
  "LineSeriesLabelOptions": {
    "meta": {},
    "type": {
      "fontStyle": "FontStyle",
      "fontWeight": "FontWeight",
      "fontSize": "number",
      "fontFamily": "string",
      "color": "string",
      "enabled": "boolean",
      "formatter?": "(params: value) => string"
    }
  },
  "MarkerOptions": {
    "meta": {},
    "type": {
      "enabled": "boolean",
      "shape": "MarkerShape",
      "size": "number",
      "strokeWidth": "number",
      "formatter?": "Function"
    }
  },
  "LineTooltipRendererParams": {
    "meta": {},
    "type": {
      "datum": "any",
      "title?": "string",
      "color": "string",
      "xKey": "string",
      "xValue": "any",
      "xName": "string",
      "yKey": "string",
      "yValue": "any",
      "yName": "string"
    }
  },
  "ScatterSeriesLabelOptions": {
    "meta": {},
    "type": {
      "fontStyle": "FontStyle",
      "fontWeight": "FontWeight",
      "fontSize": "number",
      "fontFamily": "string",
      "color": "string",
      "enabled": "boolean"
    }
  },
  "ScatterSeriesOptions": {
    "meta": {},
    "type": {
      "fill": "FillOptions",
      "stroke": "StrokeOptions",
      "highlightStyle": "HighlightOptions",
      "listeners?": "{[key in string]: Function}",
      "marker": "ScatterMarkerOptions",
      "label": "ScatterSeriesLabelOptions",
      "tooltip": "TooltipOptions<ScatterTooltipRendererParams>",
      "paired": "boolean"
    }
  },
  "ScatterMarkerOptions": {
    "meta": {},
    "type": {
      "enabled": "boolean",
      "shape": "MarkerShape",
      "size": "number",
      "strokeWidth": "number",
      "formatter?": "Function",
      "maxSize?": "number"
    }
  },
  "ScatterTooltipRendererParams": {
    "meta": {},
    "type": {
      "datum": "any",
      "title?": "string",
      "color": "string",
      "xKey": "string",
      "xValue": "any",
      "xName": "string",
      "yKey": "string",
      "yValue": "any",
      "yName": "string",
      "sizeKey?": "string",
      "sizeName?": "string",
      "labelKey?": "string",
      "labelName?": "string"
    }
  },
  "AreaSeriesLabelOptions": {
    "meta": {},
    "type": {
      "fontStyle": "FontStyle",
      "fontWeight": "FontWeight",
      "fontSize": "number",
      "fontFamily": "string",
      "color": "string",
      "enabled": "boolean",
      "formatter?": "(params: value) => string"
    }
  },
  "AreaSeriesOptions": {
    "meta": {},
    "type": {
      "fill": "FillOptions",
      "stroke": "StrokeOptions",
      "highlightStyle": "HighlightOptions",
      "listeners?": "{[key in string]: Function}",
      "marker": "MarkerOptions",
      "label": "AreaSeriesLabelOptions",
      "shadow": "DropShadowOptions",
      "tooltip": "TooltipOptions<AreaTooltipRendererParams>",
      "lineDash": "number[]",
      "lineDashOffset": "number"
    }
  },
  "AreaTooltipRendererParams": {
    "meta": {},
    "type": {
      "datum": "any",
      "title?": "string",
      "color": "string",
      "xKey": "string",
      "xValue": "any",
      "xName": "string",
      "yKey": "string",
      "yValue": "any",
      "yName": "string"
    }
  },
  "PieSeriesOptions": {
    "meta": {},
    "type": {
      "fill": "FillOptions",
      "stroke": "StrokeOptions",
      "highlightStyle": "HighlightOptions",
      "listeners?": "{[key in string]: Function}",
      "title": "CaptionOptions",
      "label": "PieSeriesLabelOptions",
      "callout": "PieSeriesCalloutOptions",
      "shadow": "DropShadowOptions",
      "tooltip": "TooltipOptions<PieTooltipRendererParams>",
      "lineDash": "number[]",
      "lineDashOffset": "number"
    }
  },
  "PieSeriesLabelOptions": {
    "meta": {},
    "type": {
      "fontStyle": "FontStyle",
      "fontWeight": "FontWeight",
      "fontSize": "number",
      "fontFamily": "string",
      "color": "string",
      "enabled": "boolean",
      "minAngle": "number",
      "offset": "number"
    }
  },
  "PieSeriesCalloutOptions": {
    "meta": {},
    "type": {
      "length": "number",
      "strokeWidth": "number",
      "colors": "string[]"
    }
  },
  "PieTooltipRendererParams": {
    "meta": {},
    "type": {
      "datum": "any",
      "title?": "string",
      "color": "string",
      "angleKey": "string",
      "angleValue": "any",
      "angleName?": "string",
      "labelKey?": "string",
      "labelName?": "string"
    }
  },
  "GetChartImageDataUrlParams": {
    "meta": {},
    "type": { "chartId": "string", "fileFormat?": "string" }
  },
  "ChartModelType": {
    "meta": { "isTypeAlias": true },
    "type": "'range' | 'pivot'"
  },
  "ChartModel": {
    "meta": {},
    "type": {
      "modelType": "ChartModelType",
      "chartId": "string",
      "chartType": "ChartType",
      "cellRange": "CellRangeParams",
      "chartThemeName?": "string",
      "chartOptions": "ChartOptions<any>",
      "suppressChartRanges?": "boolean",
      "aggFunc?": "string | IAggFunc",
      "unlinkChart?": "boolean"
    }
  },
  "IChartService": {
    "meta": {},
    "type": {
      "getChartModels()": "ChartModel[]",
      "getChartRef(chartId: string)": "ChartRef | undefined",
      "createRangeChart(params: CreateRangeChartParams)": "ChartRef | undefined",
      "createCrossFilterChart(params: CreateCrossFilterChartParams)": "ChartRef | undefined",
      "createChartFromCurrentRange(chartType: ChartType)": "ChartRef | undefined",
      "createPivotChart(params: CreatePivotChartParams)": "ChartRef | undefined",
      "restoreChart(model: ChartModel, chartContainer: HTMLElement)": "ChartRef | undefined",
      "getChartImageDataURL(params: GetChartImageDataUrlParams)": "string | undefined"
    }
  },
  "ClientSideRowModelSteps": {
    "meta": { "isEnum": true },
    "type": [
      "EVERYTHING = 'group'",
      "FILTER = 'filter'",
      "SORT = 'sort'",
      "MAP = 'map'",
      "AGGREGATE = 'aggregate'",
      "PIVOT = 'pivot'",
      "NOTHING = 'nothing'"
    ]
  },
  "IClientSideRowModel": {
    "meta": {},
    "type": {
      "getRow(index: number)": "RowNode | null",
      "getRowNode(id: string)": "RowNode | null",
      "getRowCount()": "number",
      "getTopLevelRowCount()": "number",
      "getTopLevelRowDisplayedIndex(topLevelIndex: number)": "number",
      "getRowIndexAtPixel(pixel: number)": "number",
      "isRowPresent(rowNode: RowNode)": "boolean",
      "getRowBounds(index: number)": "RowBounds | null",
      "isEmpty()": "boolean",
      "isRowsToRender()": "boolean",
      "getNodesInRangeForSelection(first: RowNode, last: RowNode | null)": "RowNode[]",
      "forEachNode(callback: (rowNode: RowNode, index: number) => void)": "void",
      "getType()": "string",
      "isLastRowIndexKnown()": "boolean",
      "ensureRowHeightsValid(startPixel: number, endPixel: number, startLimitIndex: number, endLimitIndex: number)": "boolean",
      "start()": "void",
      "updateRowData(rowDataTran: RowDataTransaction, rowNodeOrder: [id: string]: number | null)": "RowNodeTransaction | null",
      "setRowData(rowData: any[])": "void",
      "refreshModel(params: RefreshModelParams)": "void",
      "expandOrCollapseAll(expand: boolean)": "void",
      "forEachLeafNode(callback: (node: RowNode, index: number) => void)": "void",
      "forEachNode(callback: (node: RowNode, index: number) => void)": "void",
      "forEachNodeAfterFilter(callback: (node: RowNode, index: number) => void)": "void",
      "forEachNodeAfterFilterAndSort(callback: (node: RowNode, index: number) => void)": "void",
      "resetRowHeights()": "void",
      "onRowHeightChanged()": "void",
      "batchUpdateRowData(rowDataTransaction: RowDataTransaction, callback: (res: RowNodeTransaction) => void)": "void",
      "flushAsyncTransactions()": "void",
      "getRootNode()": "RowNode",
      "doAggregate(changedPath: ChangedPath)": "void",
      "getTopLevelNodes()": "RowNode[] | null",
      "forEachPivotNode(callback: (node: RowNode, index: number) => void)": "void",
      "ensureRowsAtPixel(rowNode: RowNode[], pixel: number, increment: number)": "boolean",
      "highlightRowAtPixel(rowNode: RowNode | null, pixel: number)": "void",
      "getHighlightPosition(pixel: number, rowNode: RowNode)": "RowHighlightPosition",
      "getLastHighlightedRowNode()": "RowNode | null"
    }
  },
  "RefreshModelParams": {
    "meta": {},
    "type": {
      "step": "ClientSideRowModelSteps",
      "groupState?": "any",
      "keepRenderedRows?": "boolean",
      "animate?": "boolean",
      "keepEditingRows?": "boolean",
      "rowNodeTransactions?": "RowNodeTransaction[]",
      "rowNodeOrder?": "[id: string]: number",
      "newData?": "boolean",
      "afterColumnsChanged?": "boolean"
    }
  },
  "IClipboardService": {
    "meta": {},
    "type": {
      "pasteFromClipboard()": "void",
      "copyToClipboard(includeHeader: boolean)": "void",
      "copySelectedRowsToClipboard(includeHeader: boolean, columnKeys: (string | Column)[])": "void",
      "copySelectedRangeToClipboard(includeHeader: boolean)": "void",
      "copyRangeDown()": "void"
    }
  },
  "IColumnToolPanel": {
    "meta": {},
    "type": {
      "expandColumnGroups(groupIds: string[])": "void",
      "collapseColumnGroups(groupIds: string[])": "void",
      "setColumnLayout(colDefs: (ColDef | ColGroupDef)[])": "void",
      "syncLayoutWithGrid()": "void",
      "setPivotModeSectionVisible(visible: boolean)": "void",
      "setRowGroupsSectionVisible(visible: boolean)": "void",
      "setValuesSectionVisible(visible: boolean)": "void",
      "setPivotSectionVisible(visible: boolean)": "void"
    }
  },
  "ColumnVO": {
    "meta": {},
    "type": {
      "id": "string",
      "displayName": "string",
      "field?": "string",
      "aggFunc?": "string"
    }
  },
  "IComponent": {
    "meta": { "typeParams": ["T"] },
    "type": {
      "getGui()": "HTMLElement",
      "destroy?()": "void",
      "afterGuiAttached?(params: IAfterGuiAttachedParams)": "void",
      "init?(params: T)": "AgPromise<void> | void"
    }
  },
  "IContextMenuFactory": {
    "meta": {},
    "type": {
      "onContextMenu(mouseEvent: MouseEvent | null, touchEvent: TouchEvent | null, rowNode: RowNode | null, column: Column | null, value: any, anchorToElement: HTMLElement)": "void",
      "hideActiveMenu()": "void"
    }
  },
  "ICsvCreator": {
    "meta": {},
    "type": {
      "getDataAsCsv(params: CsvExportParams)": "string",
      "exportDataAsCsv(params: CsvExportParams)": "string"
    }
  },
  "IDatasource": {
    "meta": {},
    "type": {
      "rowCount?": "number",
      "getRows(params: IGetRowsParams)": "void",
      "destroy?()": "void"
    }
  },
  "IGetRowsParams": {
    "meta": {},
    "type": {
      "startRow": "number",
      "endRow": "number",
      "successCallback(rowsThisBlock: any[], lastRow: number)": "void",
      "failCallback()": "void",
      "sortModel": "any",
      "filterModel": "any",
      "context": "any"
    }
  },
  "IEventEmitter": {
    "meta": {},
    "type": {
      "addEventListener(eventType: string, listener: EventListener, async: boolean, options: AddEventListenerOptions)": "void",
      "removeEventListener(eventType: string, listener: EventListener, async: boolean, options: AddEventListenerOptions)": "void"
    }
  },
  "ExcelStyle": {
    "meta": {},
    "type": {
      "id": "string",
      "alignment?": "ExcelAlignment",
      "borders?": "ExcelBorders",
      "dataType?": "ExcelDataType",
      "font?": "ExcelFont",
      "interior?": "ExcelInterior",
      "numberFormat?": "ExcelNumberFormat",
      "protection?": "ExcelProtection",
      "name?": "string"
    }
  },
  "ExcelAlignment": {
    "meta": {},
    "type": {
      "horizontal?": "'Automatic' | 'Left' | 'Center' | 'Right' | 'Fill' | 'Justify' | 'CenterAcrossSelection' | 'Distributed' | 'JustifyDistributed'",
      "indent?": "number",
      "readingOrder?": "'RightToLeft' | 'LeftToRight' | 'Context'",
      "rotate?": "number",
      "shrinkToFit?": "boolean",
      "vertical?": "'Automatic' | 'Top' | 'Bottom' | 'Center' | 'Justify' | 'Distributed' | 'JustifyDistributed'",
      "wrapText?": "boolean",
      "verticalText?": "boolean"
    }
  },
  "ExcelBorders": {
    "meta": {},
    "type": {
      "borderBottom?": "ExcelBorder",
      "borderLeft?": "ExcelBorder",
      "borderRight?": "ExcelBorder",
      "borderTop?": "ExcelBorder"
    }
  },
  "ExcelBorder": {
    "meta": {},
    "type": {
      "color?": "string",
      "lineStyle?": "'None' | 'Continuous' | 'Dash' | 'Dot' | 'DashDot' | 'DashDotDot' | 'SlantDashDot' | 'Double'",
      "weight?": "'0' | '1' | '2' | '3'"
    }
  },
  "ExcelFont": {
    "meta": {},
    "type": {
      "bold?": "boolean",
      "color?": "string",
      "family?": "string",
      "fontName?": "string",
      "italic?": "boolean",
      "outline?": "boolean",
      "shadow?": "boolean",
      "size?": "number",
      "strikeThrough?": "boolean",
      "underline?": "'Single' | 'Double'",
      "verticalAlign?": "'Superscript' | 'Subscript'",
      "charSet?": "number"
    }
  },
  "ExcelInterior": {
    "meta": {},
    "type": {
      "color": "string",
      "pattern": "'None' | 'Solid' | 'Gray75' | 'Gray50' | 'Gray25' | 'Gray125' | 'Gray0625' | 'HorzStripe' | 'VertStripe' | 'ReverseDiagStripe' | 'DiagStripe' | 'DiagCross' | 'ThickDiagCross' | 'ThinHorzStripe' | 'ThinVertStripe' | 'ThinReverseDiagStripe' | 'ThinDiagStripe' | 'ThinHorzCross' | 'ThinDiagCross'",
      "patternColor": "string"
    }
  },
  "ExcelNumberFormat": { "meta": {}, "type": { "format": "string" } },
  "ExcelProtection": {
    "meta": {},
    "type": { "protected": "boolean", "hideFormula": "boolean" }
  },
  "ExcelWorksheet": {
    "meta": {},
    "type": { "name": "string", "table": "ExcelTable" }
  },
  "ExcelTable": {
    "meta": {},
    "type": { "columns": "ExcelColumn[]", "rows": "ExcelRow[]" }
  },
  "ExcelColumn": {
    "meta": {},
    "type": {
      "min?": "number",
      "max?": "number",
      "width?": "number",
      "s?": "number",
      "hidden?": "boolean",
      "bestFit?": "boolean"
    }
  },
  "ExcelRow": {
    "meta": {},
    "type": {
      "index?": "number",
      "collapsed?": "boolean",
      "hidden?": "boolean",
      "height?": "number",
      "outlineLevel?": "number",
      "s?": "number",
      "cells": "ExcelCell[]"
    }
  },
  "ExcelCell": {
    "meta": {},
    "type": {
      "ref?": "string",
      "styleId?": "string",
      "data": "ExcelData",
      "mergeAcross?": "number"
    }
  },
  "ExcelImage": {
    "meta": {},
    "type": {
      "id": "string",
      "base64": "string",
      "imageType": "'jpg' | 'png' | 'gif'",
      "altText?": "string",
      "fitCell?": "boolean",
      "transparency?": "number",
      "rotation?": "number",
      "recolor?": "'Grayscale' | 'Sepia' | 'Washout'",
      "width?": "number",
      "height?": "number",
      "position?": "row? rowSpan? column? colSpan? offsetX? offsetY?"
    }
  },
  "ExcelDataType": {
    "meta": { "isTypeAlias": true },
    "type": "'String' | 'Formula' | 'Number' | 'Boolean' | 'DateTime' | 'Error'"
  },
  "ExcelOOXMLDataType": {
    "meta": { "isTypeAlias": true },
    "type": "'str' | 's' | 'f' | 'inlineStr' | 'n' | 'b' | 'd' | 'e' | 'empty'"
  },
  "ExcelData": {
    "meta": {},
    "type": {
      "type": "ExcelDataType | ExcelOOXMLDataType",
      "value": "string | null"
    }
  },
  "ExcelRelationship": {
    "meta": {},
    "type": { "Id": "string", "Type": "string", "Target": "string" }
  },
  "ExcelContentType": {
    "meta": {},
    "type": {
      "name": "'Default' | 'Override'",
      "ContentType": "string",
      "Extension?": "string",
      "PartName?": "string"
    }
  },
  "ExcelXMLTemplate": {
    "meta": {},
    "type": {
      "getTemplate(styleProperties: ExcelStyle | ExcelWorksheet | ExcelColumn | ExcelRow | ExcelCell)": "XmlElement"
    }
  },
  "ExcelOOXMLTemplate": {
    "meta": {},
    "type": {
      "getTemplate(config: any, idx: number, currentSheet: number)": "XmlElement",
      "convertType?(type: string)": "string"
    }
  },
  "ExcelFactoryMode": {
    "meta": { "isEnum": true },
    "type": ["SINGLE_SHEET", "MULTI_SHEET"]
  },
  "ColumnWidthCallbackParams": {
    "meta": {},
    "type": { "column": "Column | null", "index": "number" }
  },
  "RowHeightCallbackParams": { "meta": {}, "type": { "rowIndex": "number" } },
  "ExcelExportParams": {
    "meta": {},
    "type": {
      "allColumns?": "boolean",
      "columnKeys?": "(string | Column)[]",
      "fileName?": "string",
      "onlySelected?": "boolean",
      "onlySelectedAllPages?": "boolean",
      "skipColumnGroupHeaders?": "boolean",
      "skipColumnHeaders?": "boolean",
      "skipRowGroups?": "boolean",
      "skipPinnedTop?": "boolean",
      "skipPinnedBottom?": "boolean",
      "shouldRowBeSkipped?(params: ShouldRowBeSkippedParams)": "boolean",
      "processCellCallback?(params: ProcessCellForExportParams)": "string",
      "processHeaderCallback?(params: ProcessHeaderForExportParams)": "string",
      "processGroupHeaderCallback?(params: ProcessGroupHeaderForExportParams)": "string",
      "processRowGroupCallback?(params: ProcessRowGroupForExportParams)": "string",
      "columnGroups?": "boolean",
      "skipGroups?": "boolean",
      "skipHeader?": "boolean",
      "prependContent?": "T",
      "appendContent?": "T",
      "customHeader?": "T",
      "customFooter?": "T",
      "getCustomContentBelowRow?": "(params: ProcessRowGroupForExportParams) => T | undefined",
      "author?": "string",
      "autoConvertFormulas?": "boolean",
      "columnWidth?": "number | ((params: ColumnWidthCallbackParams) => number)",
      "exportMode?": "'xlsx' | 'xml'",
      "fontSize?": "number",
      "headerRowHeight?": "number | ((params: RowHeightCallbackParams) => number)",
      "rowHeight?": "number | ((params: RowHeightCallbackParams) => number)",
      "sheetName?": "string",
      "margins?": "ExcelSheetMargin",
      "pageSetup?": "ExcelSheetPageSetup",
      "headerFooterConfig?": "ExcelHeaderFooterConfig",
      "suppressTextAsCDATA?": "boolean",
      "addImageToCell?": "(rowIndex: number, column: Column, value: string) => image value? | undefined"
    }
  },
  "ExcelExportMultipleSheetParams": {
    "meta": {},
    "type": {
      "author?": "string",
      "data": "string[]",
      "fileName?": "string",
      "fontSize?": "number"
    }
  },
  "ExcelHeaderFooterConfig": {
    "meta": {},
    "type": {
      "all?": "ExcelHeaderFooter",
      "first?": "ExcelHeaderFooter",
      "even?": "ExcelHeaderFooter"
    }
  },
  "ExcelHeaderFooter": {
    "meta": {},
    "type": {
      "header?": "ExcelHeaderFooterContent[]",
      "footer?": "ExcelHeaderFooterContent[]"
    }
  },
  "ExcelHeaderFooterContent": {
    "meta": {},
    "type": {
      "value": "string",
      "position?": "'Left' | 'Center' | 'Right'",
      "font?": "ExcelFont"
    }
  },
  "IExcelCreator": {
    "meta": {},
    "type": {
      "exportDataAsExcel(params: ExcelExportParams)": "void",
      "getDataAsExcel(params: ExcelExportParams)": "Blob | string | undefined",
      "getSheetDataForExcel(params: ExcelExportParams)": "string",
      "getMultipleSheetsAsExcel(params: ExcelExportMultipleSheetParams)": "Blob | undefined",
      "exportMultipleSheetsAsExcel(params: ExcelExportMultipleSheetParams)": "void",
      "setFactoryMode(factoryMode: ExcelFactoryMode, exportMode: 'xml' | 'xlsx')": "void",
      "getFactoryMode(exportMode: 'xml' | 'xlsx')": "ExcelFactoryMode"
    }
  },
  "ExcelSheetMargin": {
    "meta": {},
    "type": {
      "top?": "number",
      "right?": "number",
      "bottom?": "number",
      "left?": "number",
      "header?": "number",
      "footer?": "number"
    }
  },
  "ExcelSheetPageSetup": {
    "meta": {},
    "type": {
      "orientation?": "'Portrait' | 'Landscape'",
      "pageSize?": "'Letter' | 'Letter Small' | 'Tabloid' | 'Ledger' | 'Legal' | 'Statement' | 'Executive' | 'A3' | 'A4' | 'A4 Small' | 'A5' | 'A6' | 'B4' | 'B5' | 'Folio' | 'Envelope' | 'Envelope DL' | 'Envelope C5' | 'Envelope B5' | 'Envelope C3' | 'Envelope C4' | 'Envelope C6' | 'Envelope Monarch' | 'Japanese Postcard' | 'Japanese Double Postcard'"
    }
  },
  "IFilterType": {
    "meta": { "isTypeAlias": true },
    "type": "string | { new(): IFilterComp } | boolean"
  },
  "IFilterDef": {
    "meta": {},
    "type": {
      "filter?": "IFilterType",
      "filterFramework?": "any",
      "filterParams?": "any",
      "floatingFilterComponent?": "string | { new(): IFloatingFilterComp }",
      "floatingFilterComponentParams?": "any",
      "floatingFilterComponentFramework?": "any"
    }
  },
  "IFilter": {
    "meta": {},
    "type": {
      "isFilterActive()": "boolean",
      "doesFilterPass(params: IDoesFilterPassParams)": "boolean",
      "getModel()": "any",
      "setModel(model: any)": "void | AgPromise<void>",
      "onNewRowsLoaded?()": "void",
      "onAnyFilterChanged?()": "void",
      "getFrameworkComponentInstance?()": "any",
      "getModelAsString?(model: any)": "string"
    }
  },
  "ProvidedFilterModel": { "meta": {}, "type": { "filterType?": "string" } },
  "IFilterComp": {
    "meta": {},
    "type": {
      "getGui()": "HTMLElement",
      "destroy?()": "void",
      "afterGuiAttached?(params: IAfterGuiAttachedParams)": "void",
      "init?(params: T)": "AgPromise<void> | void",
      "isFilterActive()": "boolean",
      "doesFilterPass(params: IDoesFilterPassParams)": "boolean",
      "getModel()": "any",
      "setModel(model: any)": "void | AgPromise<void>",
      "onNewRowsLoaded?()": "void",
      "onAnyFilterChanged?()": "void",
      "getFrameworkComponentInstance?()": "any",
      "getModelAsString?(model: any)": "string"
    }
  },
  "IDoesFilterPassParams": {
    "meta": {},
    "type": { "node": "RowNode", "data": "any" }
  },
  "IFilterOptionDef": {
    "meta": {},
    "type": {
      "displayKey": "string",
      "displayName": "string",
      "test": "(filterValue: any, cellValue: any) => boolean",
      "hideFilterInput?": "boolean"
    }
  },
  "IFilterParams": {
    "meta": {},
    "type": {
      "api": "GridApi",
      "column": "Column",
      "colDef": "ColDef",
      "rowModel": "IRowModel",
      "filterChangedCallback": "(additionalEventAttributes: any) => void",
      "filterModifiedCallback": "() => void",
      "valueGetter": "(rowNode: RowNode) => any",
      "doesRowPassOtherFilter": "(rowNode: RowNode) => boolean",
      "context": "any"
    }
  },
  "Filter": {
    "meta": {},
    "type": {
      "isFilterActive()": "boolean",
      "doesFilterPass(params: IDoesFilterPassParams)": "boolean",
      "getModel()": "any",
      "setModel(model: any)": "void | AgPromise<void>",
      "onNewRowsLoaded?()": "void",
      "onAnyFilterChanged?()": "void",
      "getFrameworkComponentInstance?()": "any",
      "getModelAsString?(model: any)": "string"
    }
  },
  "IFiltersToolPanel": {
    "meta": {},
    "type": {
      "setFilterLayout(colDefs: ColDef[])": "void",
      "expandFilterGroups(groupIds: string[])": "void",
      "collapseFilterGroups(groupIds: string[])": "void",
      "expandFilters(colIds: string[])": "void",
      "collapseFilters(colIds: string[])": "void",
      "syncLayoutWithGrid()": "void"
    }
  },
  "IFrameworkOverrides": {
    "meta": {},
    "type": {
      "setTimeout(action: any, timeout: any)": "void",
      "setInterval(action: any, interval: any)": "AgPromise<number>",
      "addEventListener(element: HTMLElement, type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions)": "void",
      "dispatchEvent(eventType: string, listener: () => , global: boolean)": "void",
      "frameworkComponent(name: string)": "any"
    }
  },
  "IImmutableService": {
    "meta": {},
    "type": {
      "createTransactionForRowData(data: any[])": "([RowDataTransaction, [id: string]: number | null]) | undefined"
    }
  },
  "IInfiniteRowModel": {
    "meta": {},
    "type": {
      "getRow(index: number)": "RowNode | null",
      "getRowNode(id: string)": "RowNode | null",
      "getRowCount()": "number",
      "getTopLevelRowCount()": "number",
      "getTopLevelRowDisplayedIndex(topLevelIndex: number)": "number",
      "getRowIndexAtPixel(pixel: number)": "number",
      "isRowPresent(rowNode: RowNode)": "boolean",
      "getRowBounds(index: number)": "RowBounds | null",
      "isEmpty()": "boolean",
      "isRowsToRender()": "boolean",
      "getNodesInRangeForSelection(first: RowNode, last: RowNode | null)": "RowNode[]",
      "forEachNode(callback: (rowNode: RowNode, index: number) => void)": "void",
      "getType()": "string",
      "isLastRowIndexKnown()": "boolean",
      "ensureRowHeightsValid(startPixel: number, endPixel: number, startLimitIndex: number, endLimitIndex: number)": "boolean",
      "start()": "void",
      "setDatasource(datasource: IDatasource | undefined)": "void",
      "refreshCache()": "void",
      "purgeCache()": "void",
      "setRowCount(rowCount: number, maxRowFound: boolean)": "void"
    }
  },
  "IMenu": { "meta": {}, "type": {} },
  "IMenuFactory": {
    "meta": {},
    "type": {
      "showMenuAfterButtonClick(column: Column | null, eventSource: HTMLElement, containerType: ContainerType, defaultTab: string, restrictToTabs: string[])": "void",
      "showMenuAfterMouseEvent(column: Column, mouseEvent: MouseEvent | Touch, defaultTab: string, restrictToTabs: string[])": "void",
      "isMenuEnabled(column: Column)": "boolean",
      "hideActiveMenu()": "void"
    }
  },
  "Module": {
    "meta": {},
    "type": {
      "moduleName": "string",
      "beans?": "any[]",
      "agStackComponents?": "ComponentMeta[]",
      "userComponents?": "componentName componentClass[]",
      "rowModels?": "[name: string]: { new(): IRowModel }",
      "dependantModules?": "Module[]"
    }
  },
  "IPopupComponent": {
    "meta": { "typeParams": ["T"] },
    "type": {
      "getGui()": "HTMLElement",
      "destroy?()": "void",
      "afterGuiAttached?(params: IAfterGuiAttachedParams)": "void",
      "init?(params: T)": "AgPromise<void> | void",
      "isPopup?()": "boolean",
      "focusIn?()": "void",
      "focusOut?()": "void"
    }
  },
  "IRangeService": {
    "meta": {},
    "type": {
      "isEmpty()": "boolean",
      "removeAllCellRanges()": "void",
      "getCellRangeCount(cell: CellPosition)": "number",
      "isCellInAnyRange(cell: CellPosition)": "boolean",
      "isCellInSpecificRange(cell: CellPosition, range: CellRange)": "boolean",
      "isBottomRightCell(cellRange: CellRange, cell: CellPosition)": "boolean",
      "isContiguousRange(cellRange: CellRange)": "boolean",
      "isMoreThanOneCell()": "boolean",
      "onDragStart(mouseEvent: MouseEvent)": "void",
      "onDragStop()": "void",
      "onDragging(mouseEvent: MouseEvent)": "void",
      "getCellRanges()": "CellRange[]",
      "setRangeToCell(cell: CellPosition, appendRange: boolean)": "void",
      "setCellRange(params: CellRangeParams)": "void",
      "addCellRange(params: CellRangeParams)": "void",
      "extendLatestRangeInDirection(key: number)": "CellPosition | undefined",
      "extendLatestRangeToCell(cell: CellPosition)": "void",
      "updateRangeEnd(cellRange: CellRange, cellPosition: CellPosition, silent: boolean)": "void",
      "getRangeStartRow(cellRange: CellRange)": "RowPosition",
      "getRangeEndRow(cellRange: CellRange)": "RowPosition",
      "createCellRangeFromCellRangeParams(params: CellRangeParams)": "CellRange | undefined",
      "setCellRanges(cellRanges: CellRange[])": "void"
    }
  },
  "ISelectionHandle": {
    "meta": {},
    "type": {
      "getGui()": "HTMLElement",
      "getType()": "SelectionHandleType",
      "refresh(cellCtrl: CellCtrl)": "void"
    }
  },
  "ISelectionHandleFactory": {
    "meta": {},
    "type": {
      "createSelectionHandle(type: SelectionHandleType)": "ISelectionHandle"
    }
  },
  "SelectionHandleType": {
    "meta": { "isEnum": true },
    "type": ["FILL", "RANGE"]
  },
  "CellRangeType": {
    "meta": { "isEnum": true },
    "type": ["VALUE", "DIMENSION"]
  },
  "CellRange": {
    "meta": {},
    "type": {
      "id?": "string",
      "type?": "CellRangeType",
      "startRow?": "RowPosition",
      "endRow?": "RowPosition",
      "columns": "Column[]",
      "startColumn": "Column"
    }
  },
  "CellRangeParams": {
    "meta": {},
    "type": {
      "rowStartIndex": "number | null",
      "rowStartPinned?": "string | null",
      "rowEndIndex": "number | null",
      "rowEndPinned?": "string | null",
      "columnStart?": "string | Column",
      "columnEnd?": "string | Column",
      "columns?": "(string | Column)[]"
    }
  },
  "RangeSelection": {
    "meta": {},
    "type": {
      "start": "CellPosition",
      "end": "CellPosition",
      "columns": "Column[] | null"
    }
  },
  "AddRangeSelectionParams": {
    "meta": {},
    "type": {
      "rowStart": "number",
      "floatingStart": "string",
      "rowEnd": "number",
      "floatingEnd": "string",
      "columnStart": "string | Column",
      "columnEnd": "string | Column"
    }
  },
  "CellValue": {
    "meta": { "isTypeAlias": true },
    "type": "object | string | number"
  },
  "IRichCellEditorParams": {
    "meta": {},
    "type": {
      "value": "any",
      "keyPress": "number | null",
      "charPress": "string | null",
      "column": "Column",
      "colDef": "ColDef",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "cellStartedEdit": "boolean",
      "context": "any",
      "$scope": "any",
      "onKeyDown": "(event: KeyboardEvent) => void",
      "stopEditing": "(suppressNavigateAfterEdit: boolean) => void",
      "eGridCell": "HTMLElement",
      "parseValue": "(value: any) => any",
      "formatValue": "(value: any) => any",
      "values": "CellValue[]",
      "cellHeight": "number",
      "cellRenderer": "{ new(): ICellRendererComp } | ICellRendererFunc | string",
      "searchDebounceDelay?": "number"
    }
  },
  "RowBounds": {
    "meta": {},
    "type": { "rowTop": "number", "rowHeight": "number", "rowIndex?": "number" }
  },
  "IRowModel": {
    "meta": {},
    "type": {
      "getRow(index: number)": "RowNode | null",
      "getRowNode(id: string)": "RowNode | null",
      "getRowCount()": "number",
      "getTopLevelRowCount()": "number",
      "getTopLevelRowDisplayedIndex(topLevelIndex: number)": "number",
      "getRowIndexAtPixel(pixel: number)": "number",
      "isRowPresent(rowNode: RowNode)": "boolean",
      "getRowBounds(index: number)": "RowBounds | null",
      "isEmpty()": "boolean",
      "isRowsToRender()": "boolean",
      "getNodesInRangeForSelection(first: RowNode, last: RowNode | null)": "RowNode[]",
      "forEachNode(callback: (rowNode: RowNode, index: number) => void)": "void",
      "getType()": "string",
      "isLastRowIndexKnown()": "boolean",
      "ensureRowHeightsValid(startPixel: number, endPixel: number, startLimitIndex: number, endLimitIndex: number)": "boolean",
      "start()": "void"
    }
  },
  "IRowNodeBlock": {
    "meta": {},
    "type": {
      "addEventListener(eventType: string, listener: EventListener, async: boolean, options: AddEventListenerOptions)": "void",
      "removeEventListener(eventType: string, listener: EventListener, async: boolean, options: AddEventListenerOptions)": "void",
      "getDisplayIndexStart()": "number",
      "getDisplayIndexEnd()": "number",
      "getLastAccessed()": "number",
      "getState()": "string",
      "isAnyNodeOpen(rowCount: number)": "boolean",
      "getBlockNumber()": "number",
      "forEachNodeDeep(callback: (rowNode: RowNode, index: number) => void, sequence: NumberSequence, rowCount: number)": "void",
      "forEachNodeShallow(callback: (rowNode: RowNode, index: number) => void, sequence: NumberSequence, rowCount: number)": "void",
      "load()": "void"
    }
  },
  "StageExecuteParams": {
    "meta": {},
    "type": {
      "rowNode": "RowNode",
      "rowNodeTransaction?": "RowNodeTransaction | null",
      "rowNodeTransactions?": "RowNodeTransaction[] | null",
      "rowNodeOrder?": "[id: string]: number",
      "changedPath?": "ChangedPath",
      "afterColumnsChanged?": "boolean"
    }
  },
  "IRowNodeStage": {
    "meta": {},
    "type": { "execute(params: StageExecuteParams)": "any" }
  },
  "IServerSideGetRowsRequest": {
    "meta": {},
    "type": {
      "startRow": "number",
      "endRow": "number",
      "rowGroupCols": "ColumnVO[]",
      "valueCols": "ColumnVO[]",
      "pivotCols": "ColumnVO[]",
      "pivotMode": "boolean",
      "groupKeys": "string[]",
      "filterModel": "any",
      "sortModel": "any"
    }
  },
  "IServerSideGetRowsParams": {
    "meta": {},
    "type": {
      "request": "IServerSideGetRowsRequest",
      "parentNode": "RowNode",
      "successCallback(rowsThisPage: any[], lastRow: number)": "void",
      "success(params: LoadSuccessParams)": "void",
      "failCallback()": "void",
      "fail()": "void",
      "api": "GridApi",
      "columnApi": "ColumnApi"
    }
  },
  "IServerSideDatasource": {
    "meta": {},
    "type": {
      "getRows(params: IServerSideGetRowsParams)": "void",
      "destroy?()": "void"
    }
  },
  "IServerSideRowModel": {
    "meta": {},
    "type": {
      "getRow(index: number)": "RowNode | null",
      "getRowNode(id: string)": "RowNode | null",
      "getRowCount()": "number",
      "getTopLevelRowCount()": "number",
      "getTopLevelRowDisplayedIndex(topLevelIndex: number)": "number",
      "getRowIndexAtPixel(pixel: number)": "number",
      "isRowPresent(rowNode: RowNode)": "boolean",
      "getRowBounds(index: number)": "RowBounds | null",
      "isEmpty()": "boolean",
      "isRowsToRender()": "boolean",
      "getNodesInRangeForSelection(first: RowNode, last: RowNode | null)": "RowNode[]",
      "forEachNode(callback: (rowNode: RowNode, index: number) => void)": "void",
      "getType()": "string",
      "isLastRowIndexKnown()": "boolean",
      "ensureRowHeightsValid(startPixel: number, endPixel: number, startLimitIndex: number, endLimitIndex: number)": "boolean",
      "start()": "void",
      "refreshStore(params: RefreshStoreParams)": "void",
      "onRowHeightChanged()": "void",
      "getStoreState()": "ServerSideStoreState[]",
      "retryLoads()": "void",
      "expandAll(value: boolean)": "void",
      "setDatasource(datasource: IServerSideDatasource)": "void",
      "forEachNodeAfterFilterAndSort(callback: (node: RowNode, index: number) => void)": "void"
    }
  },
  "IServerSideTransactionManager": {
    "meta": {},
    "type": {
      "applyTransaction(transaction: ServerSideTransaction)": "ServerSideTransactionResult | undefined",
      "applyTransactionAsync(transaction: ServerSideTransaction, callback: (res: ServerSideTransactionResult) => void)": "void",
      "flushAsyncTransactions()": "void"
    }
  },
  "RefreshStoreParams": {
    "meta": {},
    "type": { "route?": "string[]", "purge?": "boolean" }
  },
  "IServerSideStore": {
    "meta": {},
    "type": {
      "clearDisplayIndexes()": "void",
      "getDisplayIndexEnd()": "number | undefined",
      "isDisplayIndexInStore(displayIndex: number)": "boolean",
      "setDisplayIndexes(displayIndexSeq: NumberSequence, nextRowTop: value)": "void",
      "forEachNodeDeep(callback: (rowNode: RowNode, index: number) => void, sequence: NumberSequence)": "void",
      "forEachNodeDeepAfterFilterAndSort(callback: (rowNode: RowNode, index: number) => void, sequence: NumberSequence)": "void",
      "retryLoads()": "void",
      "getRowUsingDisplayIndex(displayRowIndex: number, dontCreateBlock: boolean)": "RowNode | null",
      "getRowBounds(index: number)": "RowBounds | null",
      "isPixelInRange(pixel: number)": "boolean",
      "getRowIndexAtPixel(pixel: number)": "number | null",
      "getChildStore(keys: string[])": "IServerSideStore | null",
      "refreshAfterSort(params: StoreRefreshAfterParams)": "void",
      "refreshAfterFilter(params: StoreRefreshAfterParams)": "void",
      "applyTransaction(transaction: ServerSideTransaction)": "ServerSideTransactionResult",
      "refreshStore(purge: boolean)": "void",
      "getRowCount()": "number",
      "getTopLevelRowDisplayedIndex(topLevelIndex: number)": "number",
      "isLastRowIndexKnown()": "boolean",
      "getRowNodesInRange(firstInRange: RowNode, lastInRange: RowNode)": "RowNode[]",
      "addStoreStates(result: ServerSideStoreState[])": "void"
    }
  },
  "StoreRefreshAfterParams": {
    "meta": {},
    "type": {
      "valueColChanged": "boolean",
      "secondaryColChanged": "boolean",
      "alwaysReset": "boolean",
      "changedColumns": "string[]"
    }
  },
  "ServerSideStoreState": {
    "meta": {},
    "type": {
      "type": "ServerSideStoreType",
      "route": "string[]",
      "rowCount": "number",
      "lastRowIndexKnown?": "boolean",
      "info?": "any",
      "maxBlocksInCache?": "number",
      "cacheBlockSize?": "number"
    }
  },
  "SetFilterValuesFuncParams": {
    "meta": {},
    "type": { "success": "(values: string[]) => void", "colDef": "ColDef" }
  },
  "SetFilterValuesFunc": { "meta": {}, "type": {} },
  "SetFilterValues": {
    "meta": { "isTypeAlias": true },
    "type": "SetFilterValuesFunc | any[]"
  },
  "ISetFilterParams": {
    "meta": {},
    "type": {
      "api": "GridApi",
      "column": "Column",
      "colDef": "ColDef",
      "rowModel": "IRowModel",
      "filterChangedCallback": "(additionalEventAttributes: any) => void",
      "filterModifiedCallback": "() => void",
      "valueGetter": "(rowNode: RowNode) => any",
      "doesRowPassOtherFilter": "(rowNode: RowNode) => boolean",
      "context": "any",
      "clearButton?": "boolean",
      "resetButton?": "boolean",
      "applyButton?": "boolean",
      "buttons?": "FilterButtonType[]",
      "closeOnApply?": "boolean",
      "newRowsAction?": "string",
      "debounceMs?": "number",
      "suppressRemoveEntries?": "boolean",
      "values?": "SetFilterValues",
      "refreshValuesOnOpen?": "boolean",
      "cellHeight?": "number",
      "suppressSorting?": "boolean",
      "cellRenderer?": "{ new(): ICellRendererComp } | ICellRendererFunc | string",
      "suppressMiniFilter?": "boolean",
      "applyMiniFilterWhileTyping?": "boolean",
      "suppressSelectAll?": "boolean",
      "defaultToNothingSelected?": "boolean",
      "suppressSyncValuesAfterDataChange?": "boolean",
      "comparator?": "(a: any, b: any) => number",
      "textFormatter?": "(from: string) => string",
      "valueFormatter?": "(params: ValueFormatterParams) => string",
      "selectAllOnMiniFilter?": "boolean",
      "syncValuesLikeExcel?": "boolean",
      "showTooltips?": "boolean",
      "excelMode?": "'mac' | 'windows'"
    }
  },
  "ISideBar": {
    "meta": {},
    "type": {
      "refresh()": "void",
      "setDisplayed(show: boolean)": "void",
      "setSideBarPosition(position: 'left' | 'right')": "void",
      "isToolPanelShowing()": "boolean",
      "openToolPanel(key: string)": "void",
      "getToolPanelInstance(key: string)": "IToolPanel | undefined",
      "close()": "void",
      "openedItem()": "string | null",
      "isDisplayed()": "boolean"
    }
  },
  "IStatusBarService": {
    "meta": {},
    "type": {
      "registerStatusPanel(key: string, component: IStatusPanelComp)": "void",
      "getStatusPanel(key: string)": "IStatusPanelComp"
    }
  },
  "StatusPanelDef": {
    "meta": {},
    "type": {
      "statusPanel?": "{ new(): IStatusPanelComp } | string",
      "statusPanelFramework?": "any",
      "align?": "string",
      "key?": "string",
      "statusPanelParams?": "any"
    }
  },
  "IStatusPanelParams": {
    "meta": {},
    "type": { "api": "GridApi", "columnApi": "ColumnApi", "context": "any" }
  },
  "IStatusPanel": { "meta": {}, "type": {} },
  "IStatusPanelComp": {
    "meta": {},
    "type": {
      "getGui()": "HTMLElement",
      "destroy?()": "void",
      "afterGuiAttached?(params: IAfterGuiAttachedParams)": "void",
      "init?(params: T)": "AgPromise<void> | void"
    }
  },
  "IToolPanelParams": {
    "meta": {},
    "type": { "api": "GridApi", "columnApi": "ColumnApi" }
  },
  "IToolPanel": { "meta": {}, "type": { "refresh()": "void" } },
  "IToolPanelComp": {
    "meta": {},
    "type": {
      "getGui()": "HTMLElement",
      "destroy?()": "void",
      "afterGuiAttached?(params: IAfterGuiAttachedParams)": "void",
      "init?(params: T)": "AgPromise<void> | void",
      "refresh()": "void"
    }
  },
  "ToolPanelColumnCompParams": {
    "meta": {},
    "type": {
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "suppressRowGroups": "boolean",
      "suppressValues": "boolean",
      "suppressPivots": "boolean",
      "suppressPivotMode": "boolean",
      "suppressColumnFilter": "boolean",
      "suppressColumnSelectAll": "boolean",
      "suppressColumnExpandAll": "boolean",
      "contractColumnSelection": "boolean",
      "suppressSyncLayoutWithGrid": "boolean"
    }
  },
  "IPrimaryColsPanel": {
    "meta": {},
    "type": {
      "getGui()": "HTMLElement",
      "init(allowDragging: boolean, params: ToolPanelColumnCompParams, eventType: ColumnEventType)": "void",
      "onExpandAll()": "void",
      "onCollapseAll()": "void",
      "expandGroups(groupIds: string[])": "void",
      "collapseGroups(groupIds: string[])": "void",
      "setColumnLayout(colDefs: (ColDef | ColGroupDef)[])": "void",
      "syncLayoutWithGrid()": "void"
    }
  },
  "IViewportDatasource": {
    "meta": {},
    "type": {
      "init(params: IViewportDatasourceParams)": "void",
      "setViewportRange(firstRow: number, lastRow: number)": "void",
      "destroy?()": "void"
    }
  },
  "IViewportDatasourceParams": {
    "meta": {},
    "type": {
      "setRowCount": "(count: number, keepRenderedRows: boolean) => void",
      "setRowData": "(rowData: [key: number]: any) => void",
      "getRow": "(rowIndex: number) => RowNode"
    }
  },
  "XmlElement": {
    "meta": {},
    "type": {
      "name": "string",
      "properties?": "XmlAttributes",
      "children?": "XmlElement[]",
      "textNode?": "string | null"
    }
  },
  "HeaderElement": {
    "meta": {},
    "type": {
      "[key: string]": "string | undefined",
      "version?": "string",
      "standalone?": "string",
      "encoding?": "string"
    }
  },
  "XmlAttributes": {
    "meta": {},
    "type": {
      "prefixedAttributes?": "PrefixedXmlAttributes[]",
      "rawMap?": "any"
    }
  },
  "PrefixedXmlAttributes": {
    "meta": {},
    "type": { "prefix": "string", "map": "any" }
  },
  "RowDataTransaction": {
    "meta": {},
    "type": {
      "addIndex?": "number | null",
      "add?": "any[] | null",
      "remove?": "any[] | null",
      "update?": "any[] | null"
    }
  },
  "RowNodeTransaction": {
    "meta": {},
    "type": { "add": "RowNode[]", "remove": "RowNode[]", "update": "RowNode[]" }
  },
  "ServerSideTransaction": {
    "meta": {},
    "type": {
      "route?": "string[]",
      "addIndex?": "number",
      "add?": "any[]",
      "remove?": "any[]",
      "update?": "any[]"
    }
  },
  "ServerSideTransactionResult": {
    "meta": {},
    "type": {
      "status": "ServerSideTransactionResultStatus",
      "add?": "RowNode[]",
      "remove?": "RowNode[]",
      "update?": "RowNode[]"
    }
  },
  "ServerSideTransactionResultStatus": {
    "meta": { "isEnum": true },
    "type": [
      "StoreNotFound = 'StoreNotFound'",
      "StoreLoading = 'StoreLoading'",
      "StoreWaitingToLoad = 'StoreWaitingToLoad'",
      "StoreLoadingFailed = 'StoreLoadingFailed'",
      "StoreWrongType = 'StoreWrongType'",
      "Applied = 'Applied'",
      "Cancelled = 'Cancelled'"
    ]
  },
  "TabbedLayoutParams": {
    "meta": {},
    "type": {
      "items": "TabbedItem[]",
      "cssClass?": "string",
      "onItemClicked?": "Function",
      "onActiveItemClicked?": "Function"
    }
  },
  "TabbedItem": {
    "meta": {},
    "type": {
      "title": "Element",
      "titleLabel": "string",
      "bodyPromise": "AgPromise<HTMLElement>",
      "name": "string",
      "afterAttachedCallback?": "(params: IAfterGuiAttachedParams) => void"
    }
  },
  "TabbedItemWrapper": {
    "meta": {},
    "type": { "tabbedItem": "TabbedItem", "eHeaderButton": "HTMLElement" }
  },
  "TaskItem": {
    "meta": {},
    "type": { "task": "() => void", "index": "number", "createOrder": "number" }
  },
  "TaskList": {
    "meta": {},
    "type": { "list": "TaskItem[]", "sorted": "boolean" }
  },
  "SimpleHttpRequestParams": { "meta": {}, "type": { "url": "string" } },
  "ModuleNames": {
    "meta": { "isEnum": true },
    "type": [
      "CommunityCoreModule = '@ag-grid-community/core'",
      "CommunityAllModules = '@ag-grid-community/all'",
      "InfiniteRowModelModule = '@ag-grid-community/infinite-row-model'",
      "ClientSideRowModelModule = '@ag-grid-community/client-side-row-model'",
      "CsvExportModule = '@ag-grid-community/csv-export'",
      "EnterpriseCoreModule = '@ag-grid-enterprise/core'",
      "EnterpriseAllModules = '@ag-grid-enterprise/all'",
      "RowGroupingModule = '@ag-grid-enterprise/row-grouping'",
      "ColumnToolPanelModule = '@ag-grid-enterprise/column-tool-panel'",
      "FiltersToolPanelModule = '@ag-grid-enterprise/filter-tool-panel'",
      "MenuModule = '@ag-grid-enterprise/menu'",
      "SetFilterModule = '@ag-grid-enterprise/set-filter'",
      "MultiFilterModule = '@ag-grid-enterprise/multi-filter'",
      "StatusBarModule = '@ag-grid-enterprise/status-bar'",
      "SideBarModule = '@ag-grid-enterprise/side-bar'",
      "RangeSelectionModule = '@ag-grid-enterprise/range-selection'",
      "MasterDetailModule = '@ag-grid-enterprise/master-detail'",
      "RichSelectModule = '@ag-grid-enterprise/rich-select'",
      "GridChartsModule = '@ag-grid-enterprise/charts'",
      "ViewportRowModelModule = '@ag-grid-enterprise/viewport-row-model'",
      "ServerSideRowModelModule = '@ag-grid-enterprise/server-side-row-model'",
      "ExcelExportModule = '@ag-grid-enterprise/excel-export'",
      "ClipboardModule = '@ag-grid-enterprise/clipboard'",
      "AngularModule = '@ag-grid-community/angular'",
      "ReactModule = '@ag-grid-community/react'",
      "VueModule = '@ag-grid-community/vue'",
      "PolymerModule = '@ag-grid-community/polymer'"
    ]
  },
  "ICellComp": {
    "meta": {},
    "type": {
      "addOrRemoveCssClass(cssClassName: string, on: boolean)": "void",
      "setUserStyles(styles: any)": "void",
      "setAriaSelected(selected: boolean | undefined)": "void",
      "setAriaExpanded(expanded: boolean)": "void",
      "getFocusableElement()": "HTMLElement",
      "setLeft(left: string)": "void",
      "setWidth(width: string)": "void",
      "setAriaColIndex(index: number)": "void",
      "setHeight(height: string)": "void",
      "setZIndex(zIndex: string)": "void",
      "setTabIndex(tabIndex: number)": "void",
      "setRole(role: string)": "void",
      "setColId(colId: string)": "void",
      "setTitle(title: string | undefined)": "void",
      "setUnselectable(value: 'on' | null)": "void",
      "setTransition(value: string | undefined)": "void",
      "setIncludeSelection(include: boolean)": "void",
      "setIncludeRowDrag(include: boolean)": "void",
      "setIncludeDndSource(include: boolean)": "void",
      "setForceWrapper(force: boolean)": "void",
      "getCellEditor()": "ICellEditor | null",
      "getCellRenderer()": "ICellRenderer | null",
      "getParentOfValue()": "HTMLElement | null",
      "setRenderDetails(compDetails: UserCompDetails | undefined, valueToDisplay: any, forceNewCellRendererInstance: boolean)": "void",
      "setEditDetails(compDetails: UserCompDetails, popup: boolean, position: string)": "void"
    }
  },
  "ILargeTextEditorParams": {
    "meta": {},
    "type": {
      "value": "any",
      "keyPress": "number | null",
      "charPress": "string | null",
      "column": "Column",
      "colDef": "ColDef",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "cellStartedEdit": "boolean",
      "context": "any",
      "$scope": "any",
      "onKeyDown": "(event: KeyboardEvent) => void",
      "stopEditing": "(suppressNavigateAfterEdit: boolean) => void",
      "eGridCell": "HTMLElement",
      "parseValue": "(value: any) => any",
      "formatValue": "(value: any) => any",
      "maxLength": "number",
      "rows": "number",
      "cols": "number"
    }
  },
  "ISelectCellEditorParams": {
    "meta": {},
    "type": {
      "value": "any",
      "keyPress": "number | null",
      "charPress": "string | null",
      "column": "Column",
      "colDef": "ColDef",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "cellStartedEdit": "boolean",
      "context": "any",
      "$scope": "any",
      "onKeyDown": "(event: KeyboardEvent) => void",
      "stopEditing": "(suppressNavigateAfterEdit: boolean) => void",
      "eGridCell": "HTMLElement",
      "parseValue": "(value: any) => any",
      "formatValue": "(value: any) => any",
      "values": "any[]"
    }
  },
  "ITextCellEditorParams": {
    "meta": {},
    "type": {
      "value": "any",
      "keyPress": "number | null",
      "charPress": "string | null",
      "column": "Column",
      "colDef": "ColDef",
      "node": "RowNode",
      "data": "any",
      "rowIndex": "number",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "cellStartedEdit": "boolean",
      "context": "any",
      "$scope": "any",
      "onKeyDown": "(event: KeyboardEvent) => void",
      "stopEditing": "(suppressNavigateAfterEdit: boolean) => void",
      "eGridCell": "HTMLElement",
      "parseValue": "(value: any) => any",
      "formatValue": "(value: any) => any",
      "useFormatter": "boolean"
    }
  },
  "IGroupCellRenderer": {
    "meta": {},
    "type": {
      "setInnerRenderer(compDetails: UserCompDetails | undefined, valueToDisplay: any)": "void",
      "setChildCount(count: string)": "void",
      "setCheckboxVisible(value: boolean)": "void",
      "setExpandedDisplayed(value: boolean)": "void",
      "setContractedDisplayed(value: boolean)": "void",
      "addOrRemoveCssClass(cssClassName: string, on: boolean)": "void"
    }
  },
  "GroupCellRendererParams": {
    "meta": {},
    "type": {
      "fullWidth?": "boolean",
      "pinned?": "string | null",
      "value": "any",
      "valueFormatted": "any",
      "data": "any",
      "node": "RowNode",
      "colDef?": "ColDef",
      "column?": "Column",
      "$scope": "any",
      "rowIndex": "number",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any",
      "eGridCell": "HTMLElement",
      "eParentOfValue": "HTMLElement",
      "getValue?": "() => any",
      "setValue?": "(value: any) => void",
      "formatValue?": "(value: any) => any",
      "refreshCell?": "() => void",
      "registerRowDragger": "(rowDraggerElement: HTMLElement, dragStartPixels: number, value: string) => void",
      "pinned": "string",
      "fullWidth": "boolean",
      "suppressPadding": "boolean",
      "suppressDoubleClickExpand": "boolean",
      "suppressEnterExpand": "boolean",
      "footerValueGetter": "any",
      "suppressCount": "boolean",
      "checkbox": "any",
      "rowDrag?": "boolean",
      "innerRenderer?": "{ new(): ICellRendererComp } | ICellRendererFunc | string",
      "innerRendererFramework?": "any",
      "innerRendererParams?": "any",
      "scope": "any",
      "padding": "number"
    }
  },
  "ICellRendererParams": {
    "meta": {},
    "type": {
      "fullWidth?": "boolean",
      "pinned?": "string | null",
      "value": "any",
      "valueFormatted": "any",
      "data": "any",
      "node": "RowNode",
      "colDef?": "ColDef",
      "column?": "Column",
      "$scope": "any",
      "rowIndex": "number",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any",
      "eGridCell": "HTMLElement",
      "eParentOfValue": "HTMLElement",
      "getValue?": "() => any",
      "setValue?": "(value: any) => void",
      "formatValue?": "(value: any) => any",
      "refreshCell?": "() => void",
      "registerRowDragger": "(rowDraggerElement: HTMLElement, dragStartPixels: number, value: string) => void"
    }
  },
  "ISetFilterCellRendererParams": {
    "meta": {},
    "type": {
      "value": "any",
      "valueFormatted": "any",
      "api": "GridApi",
      "context": "any"
    }
  },
  "ICellRenderer": {
    "meta": {},
    "type": { "refresh(params: ICellRendererParams)": "boolean" }
  },
  "ICellRendererComp": {
    "meta": {},
    "type": {
      "getGui()": "HTMLElement",
      "destroy?()": "void",
      "afterGuiAttached?(params: IAfterGuiAttachedParams)": "void",
      "init?(params: T)": "AgPromise<void> | void",
      "refresh(params: ICellRendererParams)": "boolean"
    }
  },
  "ICellRendererFunc": {
    "meta": { "isCallSignature": true },
    "type": {
      "arguments": { "params": "any" },
      "returnType": "HTMLElement | string"
    }
  },
  "ILoadingCellRendererParams": {
    "meta": {},
    "type": {
      "fullWidth?": "boolean",
      "pinned?": "string | null",
      "value": "any",
      "valueFormatted": "any",
      "data": "any",
      "node": "RowNode",
      "colDef?": "ColDef",
      "column?": "Column",
      "$scope": "any",
      "rowIndex": "number",
      "api": "GridApi",
      "columnApi": "ColumnApi",
      "context": "any",
      "eGridCell": "HTMLElement",
      "eParentOfValue": "HTMLElement",
      "getValue?": "() => any",
      "setValue?": "(value: any) => void",
      "formatValue?": "(value: any) => any",
      "refreshCell?": "() => void",
      "registerRowDragger": "(rowDraggerElement: HTMLElement, dragStartPixels: number, value: string) => void"
    }
  },
  "ILoadingCellRenderer": {
    "meta": {},
    "type": { "refresh(params: ICellRendererParams)": "boolean" }
  },
  "IDate": {
    "meta": {},
    "type": {
      "getDate()": "Date | null",
      "setDate(date: Date | null)": "void",
      "setInputPlaceholder?(placeholder: string)": "void",
      "setInputAriaLabel?(placeholder: string)": "void"
    }
  },
  "IDateParams": {
    "meta": {},
    "type": {
      "onDateChanged": "() => void",
      "filterParams": "IDateFilterParams"
    }
  },
  "IDateComp": {
    "meta": {},
    "type": {
      "getDate()": "Date | null",
      "setDate(date: Date | null)": "void",
      "setInputPlaceholder?(placeholder: string)": "void",
      "setInputAriaLabel?(placeholder: string)": "void",
      "getGui()": "HTMLElement",
      "destroy?()": "void",
      "afterGuiAttached?(params: IAfterGuiAttachedParams)": "void",
      "init?(params: T)": "AgPromise<void> | void"
    }
  },
  "PositionableOptions": {
    "meta": {},
    "type": {
      "popup?": "boolean",
      "minWidth?": "number | null",
      "width?": "number | string | null",
      "minHeight?": "number | null",
      "height?": "number | string | null",
      "centered?": "boolean | null",
      "calculateTopBuffer?": "() => number",
      "forcePopupParentAsOffsetParent?": "boolean",
      "x?": "number | null",
      "y?": "number | null"
    }
  },
  "ResizableSides": {
    "meta": { "isTypeAlias": true },
    "type": "'topLeft' | 'top' | 'topRight' | 'right' | 'bottomRight' | 'bottom' | 'bottomLeft' | 'left'"
  },
  "ResizableStructure": { "meta": {}, "type": {} },
  "MappedResizer": {
    "meta": {},
    "type": { "element": "HTMLElement", "dragSource?": "DragListenerParams" }
  },
  "ILoadingOverlayParams": { "meta": {}, "type": { "api": "GridApi" } },
  "ILoadingOverlayComp": {
    "meta": {},
    "type": {
      "getGui()": "HTMLElement",
      "destroy?()": "void",
      "afterGuiAttached?(params: IAfterGuiAttachedParams)": "void",
      "init?(params: T)": "AgPromise<void> | void"
    }
  },
  "INoRowsOverlayParams": { "meta": {}, "type": { "api": "GridApi" } },
  "INoRowsOverlayComp": {
    "meta": {},
    "type": {
      "getGui()": "HTMLElement",
      "destroy?()": "void",
      "afterGuiAttached?(params: IAfterGuiAttachedParams)": "void",
      "init?(params: T)": "AgPromise<void> | void"
    }
  },
  "LoadingType": { "meta": { "isEnum": true }, "type": ["Loading", "NoRows"] },
  "RowCssClassCalculatorParams": {
    "meta": {},
    "type": {
      "rowNode": "RowNode",
      "rowIsEven": "boolean",
      "rowLevel": "number",
      "fullWidthRow?": "boolean",
      "firstRowOnPage": "boolean",
      "lastRowOnPage": "boolean",
      "printLayout": "boolean",
      "expandable": "boolean",
      "pinned?": "string | null",
      "extraCssClass?": "string",
      "rowFocused?": "boolean",
      "fadeRowIn?": "boolean",
      "scope?": "any"
    }
  },
  "RowType": {
    "meta": { "isEnum": true },
    "type": [
      "Normal = 'Normal'",
      "FullWidth = 'FullWidth'",
      "FullWidthLoading = 'FullWidthLoading'",
      "FullWidthGroup = 'FullWidthGroup'",
      "FullWidthDetail = 'FullWidthDetail'"
    ]
  },
  "IRowComp": {
    "meta": {},
    "type": {
      "setDisplay(value: string)": "void",
      "setDomOrder(domOrder: boolean)": "void",
      "addOrRemoveCssClass(cssClassName: string, on: boolean)": "void",
      "setCellCtrls(cellCtrls: CellCtrl[])": "void",
      "showFullWidth(compDetails: UserCompDetails)": "void",
      "getFullWidthRowComp()": "ICellRendererComp | null | undefined",
      "setAriaExpanded(on: boolean)": "void",
      "destroyCells(cellComps: CellComp[])": "void",
      "setAriaSelected(selected: boolean | undefined)": "void",
      "setHeight(height: string)": "void",
      "destroy()": "void",
      "setTop(top: string)": "void",
      "setTransform(transform: string)": "void",
      "setRowIndex(rowIndex: string)": "void",
      "setAriaRowIndex(rowIndex: number)": "void",
      "setRowId(rowId: string)": "void",
      "setRowBusinessKey(businessKey: string)": "void",
      "setTabIndex(tabIndex: number)": "void",
      "setAriaLabel(label: string | undefined)": "void",
      "setUserStyles(styles: any)": "void",
      "setRole(role: string)": "void"
    }
  },
  "RowGui": {
    "meta": {},
    "type": {
      "rowComp": "IRowComp",
      "element": "HTMLElement",
      "pinned": "string | null"
    }
  },
  "CellCtrlListAndMap": {
    "meta": {},
    "type": { "list": "CellCtrl[]", "map": "[key: string]: CellCtrl" }
  },
  "IRowDragItem": {
    "meta": {},
    "type": {
      "rowNode?": "RowNode",
      "rowNodes?": "RowNode[]",
      "columns?": "Column[]",
      "visibleState?": "[key: string]: boolean",
      "defaultTextValue": "string"
    }
  },
  "RowCtrlMap": { "meta": {}, "type": { "[key: string]": "RowCtrl" } },
  "RefreshViewParams": {
    "meta": {},
    "type": {
      "recycleRows?": "boolean",
      "animate?": "boolean",
      "suppressKeepFocus?": "boolean",
      "onlyBody?": "boolean",
      "newData?": "boolean",
      "newPage?": "boolean"
    }
  },
  "ITooltipParams": {
    "meta": {},
    "type": {
      "location": "string",
      "api?": "GridApi",
      "columnApi?": "ColumnApi",
      "context?": "any",
      "colDef?": "ColDef | ColGroupDef | null",
      "column?": "Column | ColumnGroup",
      "value?": "any",
      "valueFormatted?": "any",
      "rowIndex?": "number",
      "node?": "RowNode",
      "data?": "any"
    }
  },
  "ITooltipComp": {
    "meta": {},
    "type": {
      "getGui()": "HTMLElement",
      "destroy?()": "void",
      "afterGuiAttached?(params: IAfterGuiAttachedParams)": "void",
      "init?(params: T)": "AgPromise<void> | void"
    }
  },
  "LoadCompleteEvent": {
    "meta": {},
    "type": { "type": "string", "success": "boolean", "block": "RowNodeBlock" }
  },
  "LoadSuccessParams": {
    "meta": {},
    "type": { "rowData": "any[]", "rowCount?": "number", "storeInfo?": "any" }
  },
  "SortOption": {
    "meta": {},
    "type": { "sort": "string", "column": "Column" }
  },
  "SortedRowNode": {
    "meta": {},
    "type": { "currentPos": "number", "rowNode": "RowNode" }
  },
  "SortModelItem": {
    "meta": {},
    "type": { "colId": "string", "sort": "string" }
  },
  "LayoutView": {
    "meta": {},
    "type": {
      "updateLayoutClasses(layoutClass: string, params: UpdateLayoutClassesParams)": "void"
    }
  },
  "LayoutCssClasses": {
    "meta": { "isEnum": true },
    "type": [
      "AUTO_HEIGHT = 'ag-layout-auto-height'",
      "NORMAL = 'ag-layout-normal'",
      "PRINT = 'ag-layout-print'"
    ]
  },
  "UpdateLayoutClassesParams": {
    "meta": {},
    "type": { "autoHeight": "boolean", "normal": "boolean", "print": "boolean" }
  },
  "GenericFunction": { "meta": {}, "type": {} },
  "PickByTypeKeyFilter": { "meta": { "typeParams": ["T", "C"] }, "type": {} },
  "KeysByType": { "meta": { "typeParams": ["T", "C"] }, "type": {} },
  "ValuesByType": { "meta": { "typeParams": ["T", "C"] }, "type": {} },
  "PickByType": { "meta": { "typeParams": ["T", "C"] }, "type": {} },
  "MethodsOf": { "meta": { "typeParams": ["T"] }, "type": {} },
  "InterfaceOf": { "meta": { "typeParams": ["T"] }, "type": {} },
  "PartiallyMockedInterfaceOf": { "meta": { "typeParams": ["T"] }, "type": {} },
  "CellValueChange": {
    "meta": {},
    "type": {
      "rowPinned": "string | null",
      "rowIndex": "number",
      "columnId": "string",
      "oldValue": "any",
      "newValue": "any"
    }
  },
  "LastFocusedCell": {
    "meta": {},
    "type": {
      "rowPinned?": "string | null",
      "rowIndex": "number",
      "columnId": "string"
    }
  },
  "ColumnSortState": {
    "meta": { "isTypeAlias": true },
    "type": "'ascending' | 'descending' | 'none'"
  },
  "PathItem": {
    "meta": {},
    "type": { "rowNode": "RowNode", "children": "PathItem[] | null" }
  },
  "ResolveAndRejectCallback": { "meta": { "typeParams": ["T"] }, "type": {} },
  "AgPromiseStatus": {
    "meta": { "isEnum": true },
    "type": ["IN_PROGRESS", "RESOLVED"]
  },
  "FieldElement": {
    "meta": { "isTypeAlias": true },
    "type": "HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement"
  },
  "IInputField": {
    "meta": {},
    "type": {
      "label?": "HTMLElement | string",
      "labelWidth?": "number | 'flex'",
      "labelSeparator?": "string",
      "labelAlignment?": "LabelAlignment",
      "value?": "any",
      "width?": "number"
    }
  },
  "LabelAlignment": {
    "meta": { "isTypeAlias": true },
    "type": "'left' | 'right' | 'top'"
  },
  "IAgLabel": {
    "meta": {},
    "type": {
      "label?": "HTMLElement | string",
      "labelWidth?": "number | 'flex'",
      "labelSeparator?": "string",
      "labelAlignment?": "LabelAlignment"
    }
  },
  "ChangeEvent": {
    "meta": {},
    "type": { "type": "string", "selected": "boolean" }
  },
  "ColorPickerConfig": {
    "meta": {},
    "type": {
      "label?": "HTMLElement | string",
      "labelWidth?": "number | 'flex'",
      "labelSeparator?": "string",
      "labelAlignment?": "LabelAlignment",
      "color": "string"
    }
  },
  "DialogOptions": {
    "meta": {},
    "type": {
      "popup?": "boolean",
      "minWidth?": "number | null",
      "width?": "number | string | null",
      "minHeight?": "number | null",
      "height?": "number | string | null",
      "centered?": "boolean | null",
      "calculateTopBuffer?": "() => number",
      "forcePopupParentAsOffsetParent?": "boolean",
      "x?": "number | null",
      "y?": "number | null",
      "component?": "Component",
      "hideTitleBar?": "boolean | null",
      "closable?": "boolean | null",
      "resizable?": "boolean | ResizableStructure",
      "title?": "string | null",
      "cssIdentifier?": "string | null",
      "eWrapper?": "HTMLElement",
      "modal?": "boolean",
      "movable?": "boolean",
      "alwaysOnTop?": "boolean",
      "maximizable?": "boolean"
    }
  },
  "GroupItem": {
    "meta": { "isTypeAlias": true },
    "type": "Component | HTMLElement"
  },
  "Align": {
    "meta": { "isTypeAlias": true },
    "type": "'start' | 'end' | 'center' | 'stretch'"
  },
  "Direction": {
    "meta": { "isTypeAlias": true },
    "type": "'horizontal' | 'vertical'"
  },
  "AgGroupComponentParams": {
    "meta": {},
    "type": {
      "title?": "string",
      "enabled?": "boolean",
      "suppressEnabledCheckbox?": "boolean",
      "suppressOpenCloseIcons?": "boolean",
      "cssIdentifier?": "string",
      "items?": "GroupItem[]",
      "alignItems?": "Align",
      "direction?": "Direction"
    }
  },
  "IInputRange": {
    "meta": {},
    "type": {
      "label?": "HTMLElement | string",
      "labelWidth?": "number | 'flex'",
      "labelSeparator?": "string",
      "labelAlignment?": "LabelAlignment",
      "value?": "any",
      "width?": "number",
      "min?": "number",
      "max?": "number",
      "step?": "number"
    }
  },
  "ITextInputField": {
    "meta": {},
    "type": {
      "label?": "HTMLElement | string",
      "labelWidth?": "number | 'flex'",
      "labelSeparator?": "string",
      "labelAlignment?": "LabelAlignment",
      "value?": "any",
      "width?": "number",
      "allowedCharPattern?": "string"
    }
  },
  "ListOption": {
    "meta": {},
    "type": { "value": "string", "text?": "string" }
  },
  "PanelOptions": {
    "meta": {},
    "type": {
      "popup?": "boolean",
      "minWidth?": "number | null",
      "width?": "number | string | null",
      "minHeight?": "number | null",
      "height?": "number | string | null",
      "centered?": "boolean | null",
      "calculateTopBuffer?": "() => number",
      "forcePopupParentAsOffsetParent?": "boolean",
      "x?": "number | null",
      "y?": "number | null",
      "component?": "Component",
      "hideTitleBar?": "boolean | null",
      "closable?": "boolean | null",
      "resizable?": "boolean | ResizableStructure",
      "title?": "string | null",
      "cssIdentifier?": "string | null"
    }
  },
  "VisibleChangedEvent": {
    "meta": {},
    "type": { "type": "string", "visible": "boolean" }
  },
  "ManagedFocusCallbacks": {
    "meta": {},
    "type": {
      "shouldStopEventPropagation?": "(e: KeyboardEvent) => boolean",
      "onTabKeyDown?": "(e: KeyboardEvent) => void",
      "handleKeyDown?": "(e: KeyboardEvent) => void",
      "onFocusIn?": "(e: FocusEvent) => void",
      "onFocusOut?": "(e: FocusEvent) => void"
    }
  },
  "PopupEventParams": {
    "meta": {},
    "type": {
      "originalMouseEvent?": "MouseEvent | Touch | null",
      "mouseEvent?": "MouseEvent",
      "touchEvent?": "TouchEvent",
      "keyboardEvent?": "KeyboardEvent"
    }
  },
  "AgPopup": {
    "meta": {},
    "type": {
      "element": "HTMLElement",
      "wrapper": "HTMLElement",
      "hideFunc": "() => void",
      "stopAnchoringPromise": "AgPromise<Function>",
      "instanceId": "number"
    }
  },
  "Rect": {
    "meta": {},
    "type": {
      "top": "number",
      "left": "number",
      "right": "number",
      "bottom": "number"
    }
  },
  "DIRECTION": {
    "meta": { "isEnum": true },
    "type": ["vertical", "horizontal"]
  },
  "AddPopupParams": {
    "meta": {},
    "type": {
      "modal?": "boolean",
      "eChild": "any",
      "closeOnEsc?": "boolean",
      "closedCallback?": "(e: MouseEvent | TouchEvent | KeyboardEvent) => void",
      "click?": "MouseEvent | Touch | null",
      "alwaysOnTop?": "boolean",
      "afterGuiAttached?": "(params: IAfterGuiAttachedParams) => void",
      "positionCallback?": "() => void",
      "anchorToElement?": "HTMLElement"
    }
  },
  "AddPopupResult": {
    "meta": {},
    "type": {
      "hideFunc": "() => void",
      "stopAnchoringPromise": "AgPromise<Function>"
    }
  },
  "ITabGuard": {
    "meta": {},
    "type": { "setTabIndex(tabIndex: string)": "void" }
  },
  "TooltipParentComp": {
    "meta": {},
    "type": {
      "getTooltipParams()": "ITooltipParams",
      "getGui()": "HTMLElement"
    }
  },
  "TooltipStates": {
    "meta": { "isEnum": true },
    "type": ["NOTHING", "WAITING_TO_SHOW", "SHOWING"]
  },
  "TapEvent": {
    "meta": {},
    "type": { "type": "string", "touchStart": "Touch" }
  },
  "LongTapEvent": {
    "meta": {},
    "type": {
      "type": "string",
      "touchStart": "Touch",
      "touchEvent": "TouchEvent"
    }
  },
  "VirtualListModel": {
    "meta": {},
    "type": {
      "getRowCount()": "number",
      "getRow(index: number)": "any",
      "isRowSelected?(index: number)": "boolean | undefined"
    }
  }
}
