@use "sass:map";
@use '../../../design-system' as *;
@use '../../../components/automated-examples/lib/vars.module' as *;

$z-index-grid: 0;
$z-index-mouse-mask: 10000; // NOTE: Above .ag-dnd-ghost z-index of 9999
$z-index-debug-canvas: $z-index-mouse-mask + 10;
$z-index-splash: $z-index-debug-canvas + 10;
$z-index-debug-panel: $z-index-splash + 10;
$z-index-splash-contents: 10;

:global(.automated-integrated-charts-grid.ag-theme-alpine) {
    position: relative;
    width: 100%;
    border-radius: var(--border-radius);
    z-index: $z-index-grid;

    @media screen and (max-width: $breakpoint-automated-row-grouping-medium) {
        width: 200% !important;
        height: 450px !important;
        margin-bottom: calc(450px / -2 + $size-2);
        transform-origin: top left;
        transform: scale(0.5);
        border-radius: calc(var(--border-radius) * 2);
        overflow: hidden;

        :global(.overlay-button) {
            cursor: default;
        }
    }

    @media screen and (min-width: $breakpoint-automated-row-grouping-medium) {
        height: 450px;
    }

    @media screen and (min-width: $breakpoint-automated-row-grouping-large) {
        height: 600px;
    }

    svg[class*='logo-mark'] {
        position: absolute;
        display: block;
        width: 64px * 2;
        height: 48px * 2;
        top: 51%;
        left: 50%;
        transform: translate(-60px, -48px) scale(1.5);
        z-index: 1;
    }

    :global(.country) {
        display: flex;
        align-items: center;
        gap: $size-half;

        @media screen and (max-width: $breakpoint-automated-row-grouping-medium) {
            gap: $size-1;
        }
    }

    :global(.flag) {
        font-size: 1.75rem;

        @media screen and (max-width: $breakpoint-automated-row-grouping-medium) {
            font-size: 1.25rem;
        }
    }

    // Button overrides for .ag-styles specificity
    :global(button.ag-side-button-button) {
        // Inherit text styles
        color: inherit;
        font-family: inherit;
        font-size: inherit;
        font-weight: inherit;
        line-height: inherit;

        // Button styles
        background: transparent;
        padding: calc(var(--ag-grid-size) * 2) 0 calc(var(--ag-grid-size) * 2) 0;
        width: 100%;
        margin: 0;
        min-height: calc(var(--ag-grid-size) * 18);
        background-position-y: center;
        background-position-x: center;
        background-repeat: no-repeat;

        border: none;
        border-top: var(--ag-borders-side-button) var(--ag-border-color);
        border-bottom: var(--ag-borders-side-button) var(--ag-border-color);

        &:focus {
            box-shadow: none;
        }
    }

    :global(.ag-root-wrapper) {
        border-radius: var(--border-radius);

        @media screen and (max-width: $breakpoint-automated-row-grouping-medium) {
            border-radius: calc(var(--border-radius) * 2);
        }
    }

    // Set chart side menu expand/collapse button overrides for .ag-styles specificity
    :global(.ag-chart-menu-close) {
        color: var(--ag-foreground-color);

        &:hover {
            color: var(--ag-alpine-active-color);
        }
    }

    // Set chart thumbnail overrides for .ag-styles specificity
    :global(.ag-chart-mini-thumbnail) {
        border: 1px solid var(--ag-secondary-border-color);
        border-radius: 5px;
        margin: 5px;

        &:global(.ag-selected) {
            border-color: var(--ag-minichart-selected-chart-color);
        }
    }

    // Set mini filter overrides for .ag-styles specificity
    :global(.ag-mini-filter) {
        margin: var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding);
    }

    // Set filter overrides for .ag-styles specificity
    :global(.ag-set-filter-item) {
        margin: 0px var(--ag-widget-container-horizontal-padding);
    }

    // Set chart panel button overrides for .ag-styles specificity
    :global(.ag-chart-tool-panel-button-enable) {
        :global(.ag-chart-menu-close) {
            position: absolute;
            top: 50%;
            transition: transform 0.33s ease-in-out;
            padding: 0;
            display: block;
            cursor: pointer;
            border: none;

            right: 0;

            :global(.ag-icon) {
                padding: 14px 5px 14px 2px;
            }

            &::before {
                content: '';
                position: absolute;
                top: -40px;
                bottom: -40px;

                right: 0;
            }
        }
    }

    // Set chart panel group container overrides for .ag-styles specificity
    :global(.ag-charts-format-top-level-group-container) {
        margin-left: calc(var(--ag-grid-size) * 2);
    }
    :global(.ag-charts-format-top-level-group-item) {
        margin: var(--ag-grid-size) 0;
    }
    :global(.ag-charts-format-sub-level-group-container > *) {
        margin-bottom: var(--ag-widget-vertical-spacing);
    }
}

.sectionHeader {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    margin-bottom: $size-2;

    h2 {
        margin-bottom: $size-2;
        font-weight: var(--font-weight-bold);
        line-height: var(--line-height-ultra-tight);

        @media screen and (max-width: $breakpoint-automated-row-grouping-medium) {
            font-size: var(--font-size-massive);
        }
    }

    p {
        max-width: 50em;

        @media screen and (max-width: $breakpoint-automated-row-grouping-medium) {
            font-size: var(--font-size-large);
        }
    }
}

.sectionFooter {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: $size-6;
    margin-top: $size-3;

    button {
        margin-left: $size-1;
    }
}

.exploreButtonOuter {
    display: none;

    @media screen and (min-width: $breakpoint-automated-row-grouping-medium) {
        display: block;
        margin-left: -80px;
    }

    @media screen and (min-width: $max-page-width) {
        margin-left: -100px;
    }
}

.exploreExampleButton {
    padding: 0.375em 0.5em 0.5em 0.5em;

    @media screen and (max-width: $breakpoint-automated-row-grouping-medium) {
        display: none;
    }

    @media screen and (min-width: $breakpoint-automated-row-grouping-large) {
        font-size: var(--font-size-extra-large);
    }

    :global(.icon) {
        --icon-size: 1.5em;

        margin: -1em 0 -1em 0.25em;
    }
}

.getStartedLink {
    --icon-size: 1.25em;
    --text-color: var(--link-color);

    position: relative;
    display: inline-block;
    padding-right: $size-3;
    transition: color $default-transition-timing;

    &::after {
        content: '';
        position: absolute;
        right: 0;
        bottom: -3px;
        left: 0;
        height: 2px;
        background-color: var(--text-color);
        transition: background-color $default-transition-timing;

        @media screen and (max-width: $breakpoint-automated-row-grouping-medium) {
            display: none;
        }
    }

    &:hover,
    &:focus-visible {
        --text-color: var(--link-hover-color);

        :global(.icon) {
            transform: translateX(4px);
        }
    }

    :global(.icon) {
        position: absolute;
        bottom: 0;
        right: -0.33em;
        transition: transform $default-transition-timing, fill $default-transition-timing;
    }
}

.mouseMask {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    overflow: hidden;
    z-index: $z-index-mouse-mask;
    pointer-events: none;

    // Start off hidden
    opacity: 0;

    :global(.mouse) {
        --mobile-mouse-scale: #{$mobile-grid-scale};

        position: absolute;
        top: $mouse-offset-top;
        left: $mouse-offset-left;

        @media screen and (max-width: $breakpoint-automated-row-grouping-medium) {
            top: calc(#{$mouse-offset-top} * var(--mobile-mouse-scale));
            left: calc(#{$mouse-offset-left} * var(--mobile-mouse-scale));
            width: calc(#{$mouse-base-width} * var(--mobile-mouse-scale));
            height: calc(#{$mouse-base-height} * var(--mobile-mouse-scale));
        }
    }

    // Override inline styles for 'dark-mode' automated cursor
    :global(.highlight),
    :global(.animate-click) {
        fill: var(--azure-blue) !important;
    }

    :global(.highlight) {
        opacity: 0.15;
    }

    :global(.animate-click) {
        transform-origin: 50% calc(50% - 1px);
        opacity: 0;
        transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out;
        transform: scale(0.1);
    }

    :global(.animate .animate-click) {
        opacity: 0.3;
        transform: scale(1);
    }
}
